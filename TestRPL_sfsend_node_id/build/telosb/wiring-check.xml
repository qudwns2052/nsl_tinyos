<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd7b74a130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79d7d800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efd7b73f5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efd79d7e600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efd7b7367a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efd79d7de10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efd79d7de10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efd79d0dd60"/></to>
    </wire>
    <wire loc="67:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efd7b7f5750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efd7ba17220"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efd7ba17220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efd7b859590"/></to>
    </wire>
    <wire loc="68:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd7b7b78b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a77b510"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd7a77b510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd79e40440"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7b7e10d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6faa70"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7efd7b7d6820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b491640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b491640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7efd7b7c26b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7efd7b16b320"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7efd7b16b320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7efd7b085a10"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7efd7b7be9f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7efd7b16c080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7efd7b16c080"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7efd7b087880"/></to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7efd7b7bcd90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b16c9e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd7b16c9e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b085270"/></to>
    </wire>
    <wire loc="76:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7efd7b7b1a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7efd799da020"/></to>
    </wire>
    <wire loc="15:../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7efd799da020"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7efd799d8a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7efd7b74eb50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7a868020"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7a868020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7efd7a7b84b0"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b7d3c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b2e1020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b2e1020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd7b759b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d04e0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7989b5a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd798c5cc0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd799cd020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd78d38ca0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd79d08540"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd78e34900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd78e55620"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd78e71900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd78e8f690"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd78ea2af0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd79f2fdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd79fb7b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd79fd6430"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7a132620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7a228020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7af137e0"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7a5a8720"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd790df140"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7ac98020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7afbe610"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b001c50"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b2d4a90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b480400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efd7b859c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efd7bf0f3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efd7bf0f3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efd7bab9140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7efd7b84d6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7ba1a700"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7ba1a700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7ba14910"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7b84ddc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efd7ba11060"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7efd7b9f3020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efd7b9f3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b9f0020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7efd7ba11740"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7ba13c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7efd7ba11e20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b6d12e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7b9f0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b9dbcb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efd7b9e96c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efd7b9d93d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efd7bb914c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7efd7b9d8680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7efd7b9955a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8d26d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7efd7b983020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8cab30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7efd7b98c700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8d7160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7efd7b970a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8b1cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7efd7b993aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8d8480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7efd7b977020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8b1020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7efd7b96da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b899cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7efd7b97e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8aa220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7efd7b996b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b9279d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7efd7b972a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8c02f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7efd7b9793e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8c1610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7efd7b9825a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8c2220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7efd7b98b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8d07a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7efd7b96fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8a82f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7efd7b981be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8ba6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7efd7b992890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8d1ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7efd7b9a6060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b935540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7efd7b977da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8a9610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7efd7b99c0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8d9020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7efd7b97da50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8a36d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7efd7b9866d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8dfa90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7efd7b971a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8b87a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7efd7b98ecf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8e1de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7efd7b9781f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8b9ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7efd7b96ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8a17a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7efd7b97f0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b8b3b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7efd7b975b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8a2ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7efd7b973a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7b8c8cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7efd7b974a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b899020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7efd7b97a570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efd7b8c8020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7efd7b97b020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efd7b89bb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efd7b933450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b934d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efd7b933aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7efd7b894a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efd7b932120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7efd7b891260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8de930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b935540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8dc020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b934d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8d6020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b935540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8d57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b934d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8ce610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b935540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8cdc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b934d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efd7b92c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efd7b92c940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7efd7b8919f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efd7b92a020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7efd7b890240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8c7b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8c52f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8be160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8bd7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8b7610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8b6c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8b0b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8ad2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8a7160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8a67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b8a0610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b89ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b898b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efd7b8962f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bab7040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7efd7bab1490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7efd7bea63b0"/></to>
    </wire>
    <wire loc="230:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7efd7b710080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7b6d12e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b6fa470"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efd7b6f7060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7efd7b6fbae0"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efd7b6fbae0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7b4ba020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efd7b6f6340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7efd7b6d4ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efd7b6d4ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7b4a6b90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efd7b6f1660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7efd7b6d2020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efd7b6d2020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7b4a1710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7b4a92f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7efd7b67a9a0"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7efd7b67a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b557d10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7b4a5de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7efd7b6789a0"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7efd7b6789a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b552740"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7b4a0930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7efd7b6769a0"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7efd7b6769a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b54d100"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efd7b6bc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5f0740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efd7b6a7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5c0100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7efd7b65eca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5b1100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7efd7b639cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b526740"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7efd7b65ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5add10"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7efd7b6a3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5b6740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7efd7b68f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b586460"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7efd7b66a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b530100"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7efd7b655cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5a3100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7efd7b645cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b543740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7efd7b631cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b521100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efd7b6b6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5e2740"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7efd7b653cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b59fd10"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efd7b6b1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5d8d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7efd7b69d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5a8740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7efd7b6899a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b578100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7efd7b6749a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b548d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7efd7b6649a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b521100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efd7b6c0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5f9100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efd7b6ab810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5cad80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7efd7b697810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b59a740"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7efd7b660cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5b1100"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7efd7b63fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b535740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7efd7b633cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b521100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7efd7b64bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b55b100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7efd7b693810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b590e60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7efd7b67e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b560740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7efd7b66e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b53ad10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7efd7b63dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b530100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7efd7b651cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b569100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efd7b6ba810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5eb100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efd7b6a5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5bcd10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7efd7b6729a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b543740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7efd7b6a1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5b1100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7efd7b68d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b582e00"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7efd7b6689a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b52cd10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7efd7b64dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b560740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efd7b6c2870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b62ad10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efd7b6af810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5d3740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7efd7b69b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5a3100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7efd7b6879a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b574d10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7efd7b649cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b59a740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7efd7b643cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b53e100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7efd7b637cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b521100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7efd7b6829a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b569100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7efd7b647cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b594100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efd7b6be810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5f5d10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efd7b6a9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5c5740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7efd7b695810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b594100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7efd7b64fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b565d10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7efd7b63bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b52cd10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7efd7b6919a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b58b9f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7efd7b67c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b55b100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7efd7b66c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b535740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efd7b6b8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5e7d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7efd7b6709a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b53e100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efd7b6b3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5dc100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7efd7b69f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5add10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7efd7b68b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b57d740"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7efd7b6669a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b526740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efd7b6cc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5fe740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efd7b6ad810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5ce100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7efd7b699810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b59fd10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7efd7b6849a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b56e740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7efd7b658ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5a8740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7efd7b641cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b53ad10"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7efd7b65acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5a8740"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7efd7b6809a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b565d10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7efd7b635cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b526740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7efd7b62fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b548d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7efd7b6629f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efd7b5b6740"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b47f1d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b47f1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b309690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7b480400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b384760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7efd7b475a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efd7b2facf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7b384760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd793b9490"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7efd7b303c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b358cf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efd7b3521d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd7b383020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efd7b383020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd793b3140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd7b2ef020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7b401020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd7b401020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7b3c50f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd793b9490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7939ee60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efd793adb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd793b9ce0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efd793b9ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd7939d720"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd793af690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7b401020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd79399910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efd793a4c50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd793a4c50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd79397020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd793a12b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd793a12b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd79396440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efd793a05d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd793a05d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7efd7b983020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7efd7b97a570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7efd7b981be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7efd7b9781f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7efd7b97f0c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7efd7b977020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7efd7b97e5a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7efd7b977da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7efd7b97da50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7efd7b975b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7efd7b97b020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7efd7b974a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efd7b3c2540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efd7b3f8020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efd7b3f8020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7b3f30a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b3e52c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7efd7b34e490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7efd7b2fee80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7efd7b2d5370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7efd7b2d1390"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7b2db4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7b2d4a90"/></to>
    </wire>
    <wire loc="97:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7efd7b2b3e60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd7b276800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7efd7b2b1a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7996e980"/></to>
    </wire>
    <wire loc="98:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd7b2c0bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b274570"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7efd7b2bd3b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7efd7b274dc0"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7efd7b270c70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7efd7b2b1a80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7efd7b271760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7efd7b16b320"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7b262a50"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b045020"/></to>
    </wire>
    <wire loc="104:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7b255720"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7a7766e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7efd7b26bcc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7efd79e20020"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7b2448a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6c5020"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6c5020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6ba7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7efd7b24d5f0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7efd79ddf540"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7efd79ddf540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7efd79ddb360"/></to>
    </wire>
    <wire loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7efd7b1fa380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7efd7b083310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7efd7b2bd3b0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7efd7b083ab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd79d99840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7efd7b0823d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b062140"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b062140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7efd7b07d730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b05cb00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b05cb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd7b073e00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd7b0725e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7efd7b2b3e60"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7b070270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7efd7b06f2b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b2c0bb0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7b06fa10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7a868020"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7efd7b078ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7b0554e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7b0554e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7efd7b06e590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7efd79ddf540"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7b06ca40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6c5020"/></to>
    </wire>
    <wire loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7efd7b06bac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7efd7b06aad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7efd7b0692f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7efd7b06a2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7efd7b069ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7b049020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7b0444a0"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7b03e800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7b048690"/></to>
    </wire>
    <wire loc="9:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7b048690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7affe300"/></to>
    </wire>
    <wire loc="12:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7affdda0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7afdc020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afefb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afd17e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afd17e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afbd9f0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7efd7afc31b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7efd7afbacd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7efd7afc5d90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7efd7afbb8d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7afcd980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7afbec80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7efd7afb7e40"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af0f220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af0f220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af09af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efd7afb20e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efd7aecae60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efd7aecae60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aebdb60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7efd7afb1380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7efd7aec66a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7efd7aec66a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aeaed70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7efd7afb06a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7efd7aec4ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7efd7aec4ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aea4710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7efd7afae0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7efd7ae8dd60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7efd7ae8dd60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efd7ad6fa30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efd7af981d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7a919e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a919e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efd7af972b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7efd7a9157b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efd7a9157b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efd7af979c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a914ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a914ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efd7af99a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a916ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a916ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7af99120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a913160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a913160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efd7af9eb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a90a870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a90a870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efd7afa53d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a908880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a908880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efd7afa5c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a9070a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a9070a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7afa05f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a90fe50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a90fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7af9c020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a90e670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a90e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efd7afa9520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7efd7a8f8500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efd7a8f8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efd7afa1a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a8f9ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a8f9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7af9c8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a90ce50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a90ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efd7af9b1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7efd7a90ee50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efd7a90ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7af9ba70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a90de50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a90de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7efd7af96d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7a8e6a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a8e6a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7efd7af96020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7a8ba9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a8ba9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efd7afa6810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efd7a88db20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7afb7450"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7afdc020"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7efd7af8a820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7efd7af8b940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7af137e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7af09260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7af09260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7925ea10"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af09af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd7925d2a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd7925ea10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd79256a10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efd7925d2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd792505f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd79256a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd7923a510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efd7924ad20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd792552a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efd792552a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efd7923ada0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd7924c9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7aef3080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd7aef3080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7aeeecd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd79235020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7923f1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7923f1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd79234760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7923e8f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7923e8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd79233a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7923dc10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7923dc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efd7aeea0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efd7b3f8020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7efd7aec8090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aeb8710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7efd7aec7390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aeb21d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7efd7af10b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aec1020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7efd7aec59b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aea9b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aec02f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efd7b6bc810"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aebcde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7efd7b68f9a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aeb7930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7efd7b6be810"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aeb1480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efd7b6c2870"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aeac020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7efd7b6879a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aea8de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7efd7b6919a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aea3930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7efd7b6899a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7efd7ae8d150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efd7ae84a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efd7ae8aa20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efd7ad60a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7ae725d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7efd7b9825a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7efd7ae718f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7efd7b972a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7efd7ae707a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7efd7b6919a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efd7ad6e610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efd7ae618a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efd7ae618a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efd7ae4d8a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efd7ad5f610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efd7ae638f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efd7ae638f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efd7ae54810"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efd7ae57a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7efd7ae43a30"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efd7ae5e8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7efd7ae4a8a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efd7ae5c8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7efd7ae488a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efd7ae678a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7efd7ae4f8a0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efd7ae598a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7efd7ae458a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efd7ae608a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7efd7ae4c8a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efd7ae56a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7efd7ae42a30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efd7ae5b8a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7efd7ae478a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efd7ae628a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7efd7ae4e8a0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efd7ae58a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7efd7ae44a30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efd7ae5f8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7efd7ae4b8a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efd7ae5d8a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7efd7ae498a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efd7ae688a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7efd7ae518a0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efd7ae5a8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7efd7ae468a0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efd7a915160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a909880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efd7a8ff0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efd7a9080a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a8f3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a8f6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a914490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efd7a8fc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a8f7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a901880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efd7a9050a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a917a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad1a920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a913e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efd7a912490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a8fac80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a912be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a8f7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efd7a8fc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a90d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a8fd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efd7a8ff880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a8fd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a8f5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a8f6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efd7a905880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efd7a8fe0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a8f8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a907880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a8f3ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a916480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efd7a90f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a90c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a9000a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a900880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a9090a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a9102f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efd7a90f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a9137b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a8f9500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efd7a8f5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a9010a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efd7a8fe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efd7a915e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a9060a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efd7a910940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efd7a906880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efd7a8fa0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a8f29b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad15bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad13020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad13db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ad17810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad12ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7efd7ad01b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7aca1770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd7aca1770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efd7ad11400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ac7fc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7ac7fc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79167c30"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efd7ad0e080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efd7a9418f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efd7a9418f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efd791640c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ad05680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efd7a940020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efd7a940020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efd791632b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7ad0ca70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7efd7acfcbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7ac98b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efd791632b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ac16510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efd791640c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efd7ac19dd0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd79167c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ac1da20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd791658f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7915b2c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7915b2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7aaa28a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efd7ac19dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efd7ab9d440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7efd791646d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7efd7ac18480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7efd7ac18480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7efd7ab9da50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd7ac13600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd79163a50"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7914b760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7ac195e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efd7ac14370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7915c640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7915c640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7aaa35c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd7ac0f6a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd79155c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd79155c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efd7aaa8a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7ac195e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7ab9ec40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ac16510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ab9c700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7ac1da20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ab9fe80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd7ab9be00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd7ac13600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efd7ab9b060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efd7ac14370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd7ab96de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd7ac0f6a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efd7ab9a490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd7ab8d860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd7ab8d860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efd7ab81020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7ab945a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7efd7ab93c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efd7ab838a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7ab7c750"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd7ab863b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efd7ab7ddc0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efd7ab4e700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7efd7b660cc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efd7ab4c670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7efd7b65ccc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efd7ab4a670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7efd7b65acc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efd7ab47670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7efd7b653cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efd7ab45670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7efd7b655cc0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7efd7ab535b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7efd7a9fb430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efd79152440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7aaa59a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efd79152a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efd7aa07880"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efd7aa07880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7efd7a9fb430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd791592b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd7ab8d860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7915ba60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aaa1130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aaa1130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aa0f060"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7aaa0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7914b760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7aaa28a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7aa11bf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7aa11bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd790db850"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efd7aaa8a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efd7aa9e5c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7aaa35c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7aa12e60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7aa12e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd790dc970"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7aaa59a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7aa8c020"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aa0f060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd790dac30"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7aa0f930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7aaa0020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aa8b4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aa0f060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efd7aa8c690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd7ab863b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efd7aa8ce70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efd7ab838a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd7aa10400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd790da020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd790d9590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7aa0f930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efd790d9d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efd790df750"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efd790d6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7efd7a9f4250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efd7ab81020"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efd7a9f0d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7efd7b660cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efd7a9eecb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7efd7b65acc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a8d9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efd7a8e4da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a8ddb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a8d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efd7a8d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efd7a8d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a8c32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a8c52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a8e1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efd7a8cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a8c62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efd7a8dbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a8dac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a8d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efd7a8d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a8d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a8e5760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a8e0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efd7a8df120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a8caa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a8df870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a8c6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a8e1dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efd7a8cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a8da480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a8db480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a8e4750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a8cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efd7a8ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a8cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a8c4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a8c5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efd7a8d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efd7a8cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a8c8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a8d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a8c3ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a8e4100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efd7a8dd370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a8d9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a8d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a8d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a8d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a8d8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efd7a8e3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a8d8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a8de020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efd7a8decc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efd7a8c82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a8c9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a8e0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a8c92f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efd7a8c42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a8d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efd7a8cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efd7a8e3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a8e1770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a8d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efd7a8de670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efd7a8d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efd7a8cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a8c27a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a8adc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efd7a8b7da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a8b0b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a8aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efd7a8a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efd7a8aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a8962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a8992f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a8b5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efd7a89e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a89a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efd7a8afc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a8aec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a8a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efd7a8a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a8a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a8b8760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a8b4aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efd7a8b2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a89da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a8b2870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a89aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a8b5dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efd7a8a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a8ae480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a8af480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a8b7750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a8a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efd7a8a2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a8a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a897ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a899ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efd7a8a5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efd7a8a2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a89bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a8a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a896ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a8b7100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efd7a8b0370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a8ad480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a8a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a8a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a8a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a8ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efd7a8b6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a8abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a8b1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efd7a8b1cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efd7a89b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a89cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a8b4450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a89c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efd7a8972f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a8a5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efd7a8a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efd7a8b6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a8b5770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a8a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efd7a8b1670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efd7a8a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efd7a89ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a8957a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7efd7a867020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7996e980"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd7a86d6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a7b8da0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7efd7a7a7bb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7efd7a867020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7efd7a7b7720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7a792bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7a792bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7efd7a7ac020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7a78b560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7a78b560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7efd7a7b2ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7a784020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7a784020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd7a7a7410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7a7a5400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7efd7a79c980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7efd7b16b320"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7efd7a79a270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7efd7b16c080"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a799590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a779560"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a779560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a771d20"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7efd7a7a45a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7efd79df2ae0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7efd7a79f0f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd79dea4a0"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7efd79dea4a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd78e33020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7efd7a79ab60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7efd79e20020"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7efd7a7972f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7efd7a797ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7a7766e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7a755890"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7efd7a774930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7efd7a756a50"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7efd7a77ad40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7efd7a754a90"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7efd7a7759d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b16c9e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7efd7a7759d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a86d6f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7a77a540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a7701d0"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd79e3d020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a775130"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7efd79e3d8c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7efd7a7759d0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7efd79e3b1a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a5ca020"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd7a5ca020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a5a96d0"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7efd79e3bdd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a6c4980"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd7a6c4980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a6b9790"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7efd7a76fae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a754290"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7efd7a7511d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7efd7a6c4020"/></to>
    </wire>
    <wire loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7efd7a6c4020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7efd7a6c2da0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7efd7a6bd720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7efd7a5caaf0"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7efd7a5caaf0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7efd7a5a8d60"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7a619a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a7701d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7a6182d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7a751b20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7efd7a750c30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7efd79e20020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7efd7a76e2d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7efd79e20020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd79e3a5c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7efd7a74b790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd79e07a40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7efd79e07a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd78e55d10"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7efd7a7471c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd79e02970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd79e02970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7efd7a733e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7efd7a6b8060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a61fa30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7efd7a6b8860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a5e89b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7efd7a6b70a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a5e69b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7efd7a6b78a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a5e49b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7efd7a6b5270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd7a5e17b0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7a5e17b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd7a6b0450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a6b0c50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a771d20"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7efd7a6af900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7efd7a6bd720"/></to>
    </wire>
    <wire loc="39:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd7a6ae2d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7a6ad300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7b048690"/></to>
    </wire>
    <wire loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7efd7a67a380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7a61fa30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd78fa61f0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7efd78fa69f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7a5e89b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd78f9b020"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7efd78f9b820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7a5e69b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd78f916a0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7efd78f90020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7a5e49b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd78f88db0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7efd78f865e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7efd7a5c8020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7efd7a5a7940"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7efd7a5a4060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2cb420"/></to>
    </wire>
    <wire loc="30:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2cb420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2c6b40"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efd7a5a4bd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efd7a2c8020"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efd7a2c8020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efd7a2bf020"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7efd7a5a20f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7efd7a2c8d00"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7efd7a2c8d00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7efd7a2c2a00"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7efd7a5a2e20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7efd7a2c7a30"/></to>
    </wire>
    <wire loc="34:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7efd7a2c7a30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7efd7a2c0820"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efd7a596020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efd79eb98f0"/></to>
    </wire>
    <wire loc="21:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efd79eb98f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efd7a2b3470"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7efd7a597020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7efd79eb3020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7efd79eb3020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7efd79eae450"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7a572bc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7a5c2870"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7efd7a577900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd79eb4e70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd79eb4e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7efd7a593a10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd79e9da40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7efd79e9da40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd78ea1210"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7efd7a57f150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd79e74020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7efd79e74020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd78e8fd80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7efd7a5835f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd79e4c020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7efd79e4c020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7efd78e70020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7efd7a57dc50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7efd79e6d850"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a5a14e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6ba7a0"/></to>
    </wire>
    <wire loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7efd7a2fa6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2c6b40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd79f22b80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7efd7a2c0820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79f8b5e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efd7a2bf020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efd79f89170"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7efd7a2c2a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79f8c8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd79f22b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7efd79f1fd90"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a2aa170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a0afa70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a0afa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a09e020"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efd7a2b3470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efd79f0d020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efd79f0d020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efd79f08080"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a2b4640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0a5d20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7efd7a2bfd10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efd79f8bc90"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7efd79f8bc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efd79f80a20"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efd7a2aa7f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efd79f22080"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efd79f22080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efd79f1b2d0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd79f8b5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7efd79f80370"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd7a2bb080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efd7a0b06e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efd7a0b06e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efd7a0a1c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a2c3d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79f8dbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd79f8dbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79f827b0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd79f8c8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7efd79f814d0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efd79f89170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efd79f7e020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7efd7a2bea90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efd79f8aa50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7efd79f8aa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efd79f7f840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efd79f1fd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2aeb20"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2aeb20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2a6d90"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79f886b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79fe2dd0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd79fe2dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79fd7660"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79fdfb50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79f0f2a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd79f0f2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79f0b3a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79f0dd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79f26ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd79f26ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efd79f20860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79f20860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd7a2a8790"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd7a2a8790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd7a29b8f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efd79f88020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79f23980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd79f23980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efd79f1f690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efd79f1f690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79fbfaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd79fbfaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79fbae30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efd79fbb950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd7a2a7490"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd7a2a7490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd7a1367c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a29d230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a29a650"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd7a1367c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd7a130020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a2994b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7afcd980"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7efd7a2981a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7efd7afc5d90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efd7a2973e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a2389b0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efd7a2973e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a1395c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd7a1395c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a132ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd7a2389b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a2286a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7efd7a296080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7efd7a235300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7efd7a235300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd7a227020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7efd7a296e00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a234020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a234020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a227cf0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a28cb00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a284130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0a0640"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd7a295c60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7efd7a284b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd79fe9390"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd79fe9390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7a28d470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7efd7a27f5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7efd7a281660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7efd7a282730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7efd7a233ca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7efd7a226c90"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7efd7a232470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7efd7a2254b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7efd7a224020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af0f220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7efd7a212d60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7efd7af10b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efd7a20e080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efd7aecae60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7efd7a209370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7efd7aec59b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7efd7a2121e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7efd7ae8d150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efd7a2086e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7a16ac30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a16ac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a2074e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a1698f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a1698f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a204020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7efd7a1682f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a1682f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efd7a204730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7efd7a167cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efd7a167cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a204e60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a165370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a165370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a2035c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a164d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a164d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a2056b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a15ec60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a15ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a206020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a1467a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a1467a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a206d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a14a2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a14a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a203d00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a15f480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a15f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a2010c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a15ce50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a15ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a201990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a15b670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a15b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efd7a202930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7efd7a1627b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efd7a1627b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a1ff530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a148ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a148ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a200380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7efd7a1492f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a1492f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a200bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7efd7a149ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a149ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a1f9780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a139df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a139df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a131550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a220210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a21f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efd7a21e200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efd7a0ae550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efd7a0ae550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efd7a09ea80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a20b570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a0a6480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a0a6480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a0978b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7a1fe110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a15dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efd7a167020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a161c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efd7a154e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efd7a15be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a1472f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efd7a14f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efd7a15fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a155670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efd7a157e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a159670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efd7a163370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a14ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a163ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a14aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a164060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efd7a150e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a15e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a168940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a151e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efd7a152670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a150670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efd7a156670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efd7a152e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a14bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a158670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a147ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efd7a161490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a15d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a155e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a159e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a154670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a15c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efd7a167670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a162160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efd7a162e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efd7a14b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a14dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a1646b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a14d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efd7a1482f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a156e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efd7a151670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a1659c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a158e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efd7a157670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efd7a14fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7efd7a135020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7efd7a1307c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd7a11b150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efd7a12f020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efd7aecae60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7efd7a12e380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7efd7aec8090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7efd7a12d6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7efd7aec7390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efd7a12ca50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efd7ae8aa20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efd7a12b6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7a034520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd7a034520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a12a530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a011480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a011480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a129ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a02e060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a02e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efd7a1293a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7efd7a02ed00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efd7a02ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a128330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a1271e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efd7a125d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efd7a0ae550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efd7a127b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afd17e0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a1203e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a026840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a026840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a120cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a025060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a025060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a121b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a02dae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a02dae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a11d6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a012c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a012c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a11e590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7efd7a015c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efd7a015c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a11ee00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7efd7a013480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efd7a013480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a11c020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a015480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a015480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a11c8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7efd7a033c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efd7a033c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7efd7a10f9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efd7a0aa660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efd7a09baf0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd7a041020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd7aef3080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7efd7a0943b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efd7a044cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7efd7a0936e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efd7b475a80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd7a03d0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a027620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efd7a032940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a02b620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efd7a01e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efd7a025840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a031cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efd7a019060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a016c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efd7a02a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a028620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a01f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efd7a021840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a024060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a0332b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a02e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a018480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a02d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a0309c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efd7a01a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a02ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a02be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a0322f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a01c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efd7a01d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a01a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a012480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efd7a020060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efd7a01d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a016480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a023060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efd7a02ce00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a028e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a01f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a024840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a01e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a026060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efd7a031020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efd7a02c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efd7a017c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a017480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a018c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efd7a013c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a020840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efd7a01c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efd7a031670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a030370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a023840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efd7a02c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efd7a021060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efd7a019840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a010160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79fd6b40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efd79fdfb50"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd79fd58f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd79fd8690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd79fd8690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efd79fd4760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79fd3020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7efd79fbb200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7efd79fb7570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efd79fb63f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efd79fbb950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79fb6a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79f7ed70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efd79f886b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efd79f7db10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efd79f88020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd79f7c2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79f7b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efd79f7bb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efd79f2d410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7efd79f4fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7efd79f21800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd79f1d580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd79f1d580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79f08dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efd79f0dd70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7efd79f07af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd79ed2350"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efd79ed2350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7efd79f05650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efd79ed0750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efd79ed0750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79f069a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efd7a0b06e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79f00a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7efd79efd2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efd7a2c9dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efd7a2aa7f0"/></to>
    </wire>
    <wire loc="22:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79eb8670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd7a2bb080"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efd79eaec70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7efd79dd8990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a779560"/></to>
    </wire>
    <wire loc="30:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7efd79dd78b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7efd7b16b320"/></to>
    </wire>
    <wire loc="31:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7efd79dd5260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7efd7b270580"/></to>
    </wire>
    <wire loc="32:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7efd79dd59b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7a868020"/></to>
    </wire>
    <wire loc="33:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd79dd4540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd7b276800"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd79d99840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd78e1f2e0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7efd78e1fae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd79d825c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd79d08b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efd79d08b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd79cfa7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efd79d7e600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efd79d66300"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd79d7d800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79d0f0d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79d7a800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79d0ca10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efd79d7b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efd79d0f6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efd79d08540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efd79cfa170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd79d022b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd79d6c300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efd79d0b4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79d04790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efd79d0a120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79d05c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efd79cfd970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7efd799ee8c0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd79d04790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd79bcade0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efd79d05c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efd79bca6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7efd79bc9c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efd79cfd970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd79cee020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd79d022b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd79bc7920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd79d022b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd79bbecc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd79d022b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efd79bc8590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efd79cf0c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7efd79bc8e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7efd79cf3720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7efd79cf2020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7efd79bc3e00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7efd79ce8860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd79b98080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd79b98080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd79a00080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efd79bb5d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efd79b98890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efd79b98890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efd79a07440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7efd79c946e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7efd79ccb4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7efd79c97c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7efd79c90a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7efd79bc5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7efd79bc5800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efd79b96020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efd79a06440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efd79a06440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efd79b82020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efd79a07440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efd79b85860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79a04020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79a008e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd799ff020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79a08020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd79a08020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79b877a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a08c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd78da25d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd78da25d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a48510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79b7f450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79a04020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd78d9b7c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79b86a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efd79b811d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd78da3880"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd78da3880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79a49280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd79b7e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd78d9b020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd78d9b020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efd79a4a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79b86a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79b13dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efd79b82020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efd79b11890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efd79b85860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efd79b126d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd79b877a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79b13020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79b0f3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79b7f450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efd79b105b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efd79b811d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd79b0a5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd79b7e1d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efd79b0fa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd79afad30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd79afad30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efd79af3550"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd79b09020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efd79a66110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efd79a66110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efd7b3f8020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efd79b06120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd79af7860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efd79aee130"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79afa500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79af6bc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efd79aeea00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7efd7b64fcc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efd79aeb990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7efd7b64dcc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efd79ae9990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7efd7b64bcc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efd79ae7990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7efd7b647cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efd79ae5990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7efd7b649cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd78da05a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd79afad30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd78da2d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a48d20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a48d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a3c060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79a47af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd78d9b7c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a48510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a3fbd0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a3fbd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efd78d333a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efd79a4a510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efd79a44230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd79a49280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd79a40e30"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efd79a40e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efd78d34540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a3c060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd78d328b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efd79a432f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd79af7860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79a3c930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79a47af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a42120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a3c060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd79a229d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd79a3e400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd79a3e400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd78d33b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79a37b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79afa500"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd78d31210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79a3c930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efd78d319d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efd78d36330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efd78d2ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd78cfe3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79a37b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efd78cfeb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efd79a22400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd78cfd0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd79a229d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd78cfdd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a21720"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7efd799d47f0"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7efd799cd850"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7efd799d8a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7efd799cf020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd799cce20"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd7a77a540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd799cb600"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efd79980020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efd7ba17220"/></to>
    </wire>
    <wire loc="20:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7efd79980650"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7997f620"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7b049020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7997fc80"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7afdc020"/></to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7997e3a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6c5020"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7efd79970130"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7efd7b16c080"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd799838f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b16c9e0"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd799838f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7b2c0bb0"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efd799838f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efd7a86d6f0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7efd7996e980"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7efd78cefce0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7efd78cee500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efd798bfca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7efd798e9760"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efd798bddf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efd798f1870"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efd798f1870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efd78cdf0c0"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efd798bca90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efd798f0590"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efd798f0590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efd79d7de10"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7efd7989c2a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7efd798bf400"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efd798ef270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efd79d7b020"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efd798ed8f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79d7a800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd78cdfd30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd7994bce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efd78cdd970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efd79d7b020"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efd7994bce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efd798fe580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efd798fd400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efd79d7e600"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efd798fc060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efd79d7b020"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efd798fb720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efd79d7de10"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7efd798fa480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7efd798fac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7efd798b6d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7efd7989bc00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7efd7989c2a0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efd79892b90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efd7ba17220"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7efd7988f3c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efd79d825c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
            <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e9f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e9f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e9f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7efd7b80e110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e9f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e9f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7efd7b967890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7efd7b967c30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7efd7b966020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7efd7b9663a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7efd7b966720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7efd7b966a90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7efd7b966e20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7efd7b965200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7efd7b9655d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7efd7b929e70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7efd7b926270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7efd7b629190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7efd7b629540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7efd7b6298f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7efd7b629ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7efd7b627060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efd7b4369c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efd7b4369c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efd7b3f2120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efd7b3f2120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efd7b3e1a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efd7b3e1a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efd7b3de290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efd7b3de290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efd7b3de680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efd7b3de680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efd7b3dee60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efd7b3dee60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efd7b3dd260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7efd7b3dda60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7efd7b3dda60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efd7b3beac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efd7b3beac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efd7b3bb2d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efd7b3bb2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efd7b3bb6c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efd7b3bb6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efd7b3ba020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efd7b3ba020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efd7b3ba3f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b37c4f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b37c4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b34cd70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b34cd70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7efd7b3480d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b2f81f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b2f81f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7efd7aa85020" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7efd7aa790d0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7efd7aa5d7e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7efd7a61e020" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7efd79e9f910" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e9f910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7efd79e9fc80" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7efd79e98e00" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7efd79e98e00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7efd79e95180" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7efd79e70a50" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7efd79e70a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7efd79e70dd0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7efd799688b0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efd799615d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7efd799430d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7efd798ebde0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7efd798ebde0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7efd798e81c0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7efd7ba16720" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7ba16720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba16aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efd7ba17220" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efd7ba17220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efd7ba175a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7ba1a700" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7ba1a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba1aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7efd7ba11740" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7efd7ba11740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba11ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7ba14910" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7ba14910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba14c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7efd7ba11060" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efd7ba11060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba113e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7efd7ba11e20" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7efd7ba11e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba101c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7ba13c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7ba13c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ba0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7efd7b9f3020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efd7b9f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b9f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efd7b9e96c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efd7b9e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efd7b9ef660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efd7b9e9bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efd7b9e9d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efd7b9ef020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efd7b9e9a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efd7b9ef1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efd7b9ef340"/>
        <function-ref name="initClocks" scoped="" ref="0x7efd7b9ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b9f0020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b9f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b9f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efd7b9d93d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efd7b9d93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efd7b9d8340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efd7b9d98e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efd7b9d9a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efd7b9d9c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efd7b9d9750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efd7b9d9d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efd7b9d8020"/>
        <function-ref name="initClocks" scoped="" ref="0x7efd7b9d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7efd7b9d8680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efd7b9d8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efd7b9d8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b9dbcb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b9dbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b9d90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7efd7b9955a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7efd7b9955a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b995920"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b995ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b995c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b995dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b994020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b9941b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b994340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b9944d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b994660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7efd7b983020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7efd7b983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b9833a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b983530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b9836c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b983850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b9839e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b983b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b983d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b982020"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b9821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7efd7b98c700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7efd7b98c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b98ca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b98cc10"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b98cda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b98b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b98b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b98b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7efd7b970a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7efd7b970a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b970da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b96f020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b96f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b96f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b96f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b96f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7efd7b993aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7efd7b993aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b993e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b992020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b9921b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b992340"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b9924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7efd7b977020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7efd7b977020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b9773a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b977530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b9776c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b977850"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b9779e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7efd7b96da20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7efd7b96da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b96dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b96c020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b96c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b96c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b96c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b96c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7efd7b97e5a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7efd7b97e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b97e920"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b97eab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b97ec40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b97edd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b97d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b97d1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b97d340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b97d4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b97d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7efd7b996b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7efd7b996b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b99d020"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b99d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b99d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b99d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b99d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b99d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b99d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b99db10"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b99dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7efd7b972a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7efd7b972a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b972da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b971020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b9711b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b971340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b9714d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b971660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7efd7b9793e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7efd7b9793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b979760"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b9798f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b979a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b979c10"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b979da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7efd7b9825a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7efd7b9825a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b982a20"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b982bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b982d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b981020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b9811b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b981340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b9814d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b981660"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b9817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7efd7b98b700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7efd7b98b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b98ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b98bc10"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b98bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b985020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b9851b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b985340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7efd7b96fa20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7efd7b96fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b96fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b96e020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b96e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b96e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b96e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b96e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7efd7b981be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7efd7b981be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b980020"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b9801b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b980340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b9804d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b980660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b9807f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b980980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b980b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b980ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7efd7b992890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7efd7b992890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b992c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b992da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b98d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b98d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b98d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7efd7b9a6060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7efd7b9a6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b9a63e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b9a6570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b9a6700"/>
        <function-ref name="get" scoped="" ref="0x7efd7b9a6890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b9a6a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b9a6bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b9a6d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b9a5020"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b9a51b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b9a5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b9a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7efd7b977da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7efd7b977da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b975180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b975310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b9754a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b975630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b9757c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7efd7b99c0c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7efd7b99c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b99c440"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b99c5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b99c760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b99c8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b99ca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b99cc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b99cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b995020"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b9951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7efd7b97da50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7efd7b97da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b97ddd0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b97c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b97c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b97c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b97c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b97c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b97c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b97c980"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b97cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7efd7b9866d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7efd7b9866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b986a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b986be0"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b986d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b98c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b98c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b98c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7efd7b971a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7efd7b971a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b971da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b970020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b9701b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b970340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b9704d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b970660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7efd7b98ecf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7efd7b98ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b9930a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b993230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b9933c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b993550"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b9936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7efd7b9781f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7efd7b9781f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b978570"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b978700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b978890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b978a20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b978bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7efd7b96ea20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7efd7b96ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b96eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b96d020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b96d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b96d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b96d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b96d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7efd7b97f0c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7efd7b97f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b97f440"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b97f5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b97f760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b97f8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b97fa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b97fc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b97fda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b97e020"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b97e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7efd7b9856c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7efd7b9856c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b985a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b985bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b985d60"/>
        <function-ref name="get" scoped="" ref="0x7efd7b984020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b9841b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b984340"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b9844d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b984660"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b9847f0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b984980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b984b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7efd7b975b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7efd7b975b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b974020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b9741b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b974340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b9744d0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b974660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7efd7b973a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7efd7b973a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b973da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b972020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b9721b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b972340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b9724d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b972660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7efd7b974a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7efd7b974a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b973020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b9731b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b973340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b9734d0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b973660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7efd7b97a570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7efd7b97a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b97a8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b97aa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b97ac10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b97ada0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b979020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7efd7b97b020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7efd7b97b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b97b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b97b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b97b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b97b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b97b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b97bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b97bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b97a020"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b97a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efd7b933aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efd7b933aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b933e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efd7b933450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efd7b933450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b9337d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efd7b932120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efd7b932120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b9324a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efd7b934d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b934d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b933180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b935540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b935540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b9358c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b935a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b935be0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b935d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b934020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b9341b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b934340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b9344d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b934660"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b9347f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b934980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efd7b92c940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efd7b92c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b92ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efd7b92c2f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efd7b92c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b92c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efd7b92a020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efd7b92a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b92a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efd7b92dbf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b92dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b92e3e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b92e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b92e760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b92e8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b92ea80"/>
        <function-ref name="get" scoped="" ref="0x7efd7b92ec10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b92eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b92d020"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b92d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b92d340"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b92d4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b92d660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b92d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8dfa90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8dfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8dfe10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8de020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8de1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8de340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8de4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b9279d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b9279d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b927d50"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8e1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8e11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8e1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8e14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8e1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8e17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8e1980"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8dc020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8e1de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8e1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8df180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8df310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8df4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8df630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8df7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8de930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8de930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8decb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8dee40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8dd020"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8dd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8dd340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8dd4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8dd660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8dd7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8dd980"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8ddb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8ddca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8d7160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8d7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8d74e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8d7670"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8d7800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8d7990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8d7b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8d7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8d9020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8d93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8d9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8d96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8d9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8d99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8d9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8d9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8d8020"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8d57a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8d57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8d5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8d8480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8d8800"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8d8990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8d8b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8d8cb0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8d8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8d6020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8d63a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8d6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8d66c0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8d6850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8d69e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8d6b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8d6d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8d5020"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8d51b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8d5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8d07a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8d07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8d0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8d0cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8d0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8ce020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8ce1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8ce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8d26d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8d26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8d2a50"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8d2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8d2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8d1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8d11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8d1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8d14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8d1660"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8cdc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8cdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8d1ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8d1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8d1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8d0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8d01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8d0340"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8ce610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8ce610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8ce990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8ceb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8cecb0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8cee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8cd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8cd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8cd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8cd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8cd660"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8cd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8c8cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8c8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8c70a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8c7230"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8c73c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8c7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8c76e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8c7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8cab30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8cab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8c9020"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8c91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8c9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8c94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8c9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8c97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8c9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8c9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8c9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8c52f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8c5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8c8020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8c83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8c8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8c86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8c8850"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8c89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8c7b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8c7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8c6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8c61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8c6340"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8c64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8c6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8c67f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8c6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8c6b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8c6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8c6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8c02f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8c0670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8c0800"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8c0990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8c0b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8c0cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8c0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8c2220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8c2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8c25a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8c2730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8c28c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8c2a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8c2be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8c2d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8c1020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8c11b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8bd7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8bd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8bdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8c1610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8c1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8c1990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8c1b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8c1cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8c1e40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8be160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8be160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8be4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8be670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8be800"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8be990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8beb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8becb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8bee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8bd020"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8bd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8bd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8b87a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8b87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8b8b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8b8cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8b8e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8b7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8b71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8ba6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8ba6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8baa50"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8babe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8bad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8b9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8b91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8b9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8b94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8b9660"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8b6c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8b9ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8b9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8b9e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8b8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8b81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8b8340"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8b7610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8b7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8b7990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8b7b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8b7cb0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8b7e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8b6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8b61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8b6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8b64d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8b6660"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8b67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8b1cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8b1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8b00a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8b0230"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8b03c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8b0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8b06e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8b0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8b3b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8b3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8b2020"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8b21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8b2340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8b24d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8b2660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8b27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8b2980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8b2b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8ad2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8ad670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8b1020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8b13a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8b1530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8b16c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8b1850"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8b19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8b0b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8b0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8ae020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8ae1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8ae340"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8ae4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8ae660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8ae7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8ae980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8aeb10"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8aeca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8aee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8a82f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8a82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8a8670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8a8800"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8a8990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8a8b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8a8cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8a8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8aa220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8aa220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8aa5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8aa730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8aa8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8aaa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8aabe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8aad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8a9020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8a91b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8a9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8a67a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8a67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8a6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8a9610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8a9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8a9990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8a9b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8a9cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8a9e40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8a8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8a7160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8a7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8a74e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8a7670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8a7800"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8a7990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8a7b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8a7cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b8a7e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8a6020"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b8a61b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b8a6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b8a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b8a17a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b8a17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8a1b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b8a1cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8a1e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8a0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8a01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b8a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b8a36d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b8a36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b8a3a50"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b8a3be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8a3d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b8a2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b8a21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b8a2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b8a24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b8a2660"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b8a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b89ec50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b89ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b89d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b8a2ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b8a2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8a2e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b8a1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8a11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b8a1340"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b8a0610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b8a0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b8a0990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8a0b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b8a0cb0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8a0e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b89e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b89e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b89e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b89e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b89e660"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b89e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b89e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7b899cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7b899cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8980a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7b898230"/>
        <function-ref name="captured" scoped="" ref="0x7efd7b8983c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b898550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b8986e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7b898870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efd7b89bb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efd7b89bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b89a020"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b89a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b89a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b89a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b89a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b89a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b89a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b89ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b89aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efd7b8962f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efd7b8962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b896670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efd7b899020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efd7b899020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b8993a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b899530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b8996c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b899850"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b8999e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b898b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b898b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b897020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b8971b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b897340"/>
        <function-ref name="get" scoped="" ref="0x7efd7b8974d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b897660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b8977f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b897980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b897b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b897ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b897e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b896020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7efd7b890240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7efd7b890240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8905c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7efd7b894a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7efd7b894a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b894e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7efd7b891260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7efd7b891260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b8915e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7efd7b8919f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7efd7b8919f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7b891d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efd7bb914c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efd7bb914c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efd7bb91840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7efd7bea63b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efd7bea63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efd7bea6730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efd7bea68c0"/>
        <function-ref name="sleep" scoped="" ref="0x7efd7bea6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7efd7bccdbc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7efd7bccdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7efd7be09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7efd7b9f1b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efd7b9f1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efd7b858b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efd7b8581b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efd7b858340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efd7b8584d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efd7b858020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efd7b858660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efd7b8587f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7efd7b858980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efd7b84ddc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efd7b84ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b84b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efd7b859590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efd7b859590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efd7b859910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7efd7b84d6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7efd7b84d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b84da40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7efd7b859c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efd7b859c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b84d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efd7b84d1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efd7b84d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efd7bf7e410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bf7e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7bf7e790"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7bf7e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efd7bf0f3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efd7bf0f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7bf0f720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efd7bf0f8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efd7bf0fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efd7bab7040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efd7bab7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7bab73c0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7bab7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7efd7bab1490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efd7bab1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efd7bab1810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efd7bab19a0"/>
        <function-ref name="sleep" scoped="" ref="0x7efd7bab1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efd7bab9140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efd7bab9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7bab94c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efd7bab9650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efd7bab97e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7efd7b7be9f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7efd7b7be9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7efd7b7bed70"/>
        <function-ref name="setRoot" scoped="" ref="0x7efd7b7c1020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7efd7b7c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7efd7b7b78b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7b7b78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7b7b7c30"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7b7b7dc0"/>
        <function-ref name="start" scoped="" ref="0x7efd7b7bd020"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b7bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efd7b7f5750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efd7b7f5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efd7b7f5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efd7b7367a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd7b7367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b736b20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd7b736cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7b736e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7b74d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd7b74d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efd7b73f5a0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd7b73f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b73fa20"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7b73fbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7b73fd40"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7b78d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7b78d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7efd7b74eb50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7efd7b74eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7efd7b7b6020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7efd7b7b61b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7efd7b7b6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efd7b759b60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7b759b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7b7b0020"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7b7b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7efd7b7b1a20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7efd7b7b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7efd7b7b1da0"/>
        <function-ref name="bind" scoped="" ref="0x7efd7b7bb020"/>
        <function-ref name="sendtov" scoped="" ref="0x7efd7b7bb1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7efd7b7bb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7efd7b710080" loc="230:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7efd7b710080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b710400"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b710590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7efd7b7bcd90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7efd7b7bcd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7b7c0180"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b7c0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7efd7b7d6820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7efd7b7d6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b7d4cf0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b7e0300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b7d40d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b7e0c00"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b7d3660"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b7d31e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b7e0780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b7f4480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b7d46e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b7f4950"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b7f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7efd7b74a130" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd7b74a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7b74a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7b7e10d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7b7e10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7b7e1450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7b7e15e0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7b7e1770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7b7e1900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7b7e1a90"/>
        <function-ref name="get" scoped="" ref="0x7efd7b7e1c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7b7e1db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7b7f54d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b7f5020"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7b7f51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7b7f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7efd7b7c26b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7efd7b7c26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7efd7b7c2a30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b7ccb10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7efd7b7ccca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7efd7b7cc020"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b7cc1b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7efd7b7cc340"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b7cc4d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7efd7b7cc660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7efd7b7c2d50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7efd7b7cc7f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7efd7b7cc980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7efd7b7c2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efd7b7d3c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b7d3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b7ce170"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b7d1720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b7cf510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b7cf090"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b7cea70"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b7ce5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b7d1ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b7d28a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b7cfb20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b7d2d70"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b7d12a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efd7b6fe190" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7b6fe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7b6fe510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7b6fe6a0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7b6fe830"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7b6fe9c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7b6feb50"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6fece0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7b6fee70"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7b6fd4e0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6fd030"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7b6fd1c0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7b6fd350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7efd7b6f7060" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efd7b6f7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6f73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6f7570"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6f7700"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6f7890"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6f7a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6f7bb0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6f7d40"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b6fa470" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b6fa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b6fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7efd7b6f6340" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efd7b6f6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6f66c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6f6850"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6f69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6f6b70"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6f6d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6f1020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6f11b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efd7b6faa70" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7b6faa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7b6fadf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7b6f9020"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7b6f91b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7b6f9340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7b6f94d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6f9660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7b6f97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7b6f9e30"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6f9980"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7b6f9b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7b6f9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7efd7b6f1660" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efd7b6f1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6f19e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6f1b70"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6f1d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6f0020"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6f0340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6f04d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7efd7b6fbae0" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efd7b6fbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6fbe60"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6d41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6d4340"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6d4660"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6d47f0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7efd7b6d4ce0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efd7b6d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6d30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6d3230"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6d33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6d3550"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6d36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6d3870"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6d3a00"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7efd7b6d12e0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b6d12e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b6d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7efd7b6d2020" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efd7b6d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6d23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6d2530"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6d26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6d2850"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6d29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6d2b70"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6d2d00"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efd7b6bc810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efd7b6bc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6bcb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6bcd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6bb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6bb660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6bb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6bb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6bbb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6bbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6bbe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6ba020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6ba2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6ba440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efd7b6a7810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efd7b6a7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6a7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6a7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6a6020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6a61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6a6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6a6660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6a67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6a6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6a6b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6a6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6a6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6a5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6a52b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6a5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7efd7b65eca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7efd7b65eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b65d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b65d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b65d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b65d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b65d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b65d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b65da00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b65db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b65dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b65c020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b65c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b65c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b65c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b65c760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b65c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7efd7b639cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7efd7b639cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6380a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b638230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6383c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b638550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6386e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b638870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b638a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b638b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b638d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b637020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b637340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b637760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7efd7b65ccc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7efd7b65ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b65b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b65b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b65b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b65b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b65b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b65b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b65ba00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b65bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b65bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b65a020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b65a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b65a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b65a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b65a760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b65a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7efd7b6a3810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7efd7b6a3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6a3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6a3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6a2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6a2660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6a27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6a2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6a2b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6a2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6a2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6a1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6a12b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6a1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7efd7b68f9a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7efd7b68f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b68fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b68e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b68e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b68e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b68e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b68e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b68e7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b68e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b68eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b68eca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b68ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b68d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b68d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b68d440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b68d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7efd7b67a9a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7efd7b67a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b67ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b679020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6791b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b679340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6794d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b679660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6797f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b679980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b679b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b679ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b679e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b678020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6781b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b678440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6785d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7efd7b66a9a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7efd7b66a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b66ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b669020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b669340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6694d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b669660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6697f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b669980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b669b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b669ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b669e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b668020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6681b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b668440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6685d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7efd7b655cc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7efd7b655cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6540a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b654230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6543c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b654550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6546e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b654870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b654a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b654b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b654d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b653020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b653340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b653760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7efd7b645cb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7efd7b645cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6440a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b644230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6443c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b644550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b644870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b644a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b644b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b644d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b643020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b643340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b643760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7efd7b631cc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7efd7b631cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6300a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b630230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6303c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b630550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6306e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b630870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b630a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b630b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b630d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b62f020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b62f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b62f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b62f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b62f760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b62f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efd7b6b6810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efd7b6b6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6b6b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6b6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6b4020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6b4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6b4660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6b47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6b4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6b4b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6b4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6b4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6b3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6b32b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6b3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7efd7b653cc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7efd7b653cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b652230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6523c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b652550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6526e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b652870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b652a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b652b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b652d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b651020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b651340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b651760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efd7b6b1810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efd7b6b1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6b1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6b1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6b0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6b0660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6b07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6b0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6b0b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6b0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6b0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6af020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6af2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6af440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7efd7b69d810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7efd7b69d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b69db90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b69dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b69c020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b69c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b69c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b69c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b69c660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b69c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b69c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b69cb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b69cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b69ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b69b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b69b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b69b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7efd7b6899a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7efd7b6899a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b689d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b688020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b688340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6884d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b688660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6887f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b688980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b688b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b688ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b688e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b687020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6871b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b687440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6875d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7efd7b6749a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7efd7b6749a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b674d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b673020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6731b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b673340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6734d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b673660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6737f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b673980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b673b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b673ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b673e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b672020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6721b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b672440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6725d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7efd7b6649a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7efd7b6649a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b664d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b663020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6631b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b663340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6634d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b663660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6637f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b663980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b663b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b663ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b663e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b662020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6621b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b662440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6625d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efd7b6c0810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efd7b6c0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6c0b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6c0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6bf020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6bf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6bf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6bf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6bf660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6bf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6bf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6bfb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6bfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6bfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6be020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6be2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6be440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efd7b6ab810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efd7b6ab810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6abc90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6abe20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6aa340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6aa660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6aa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6aa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6aab10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6aaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6aae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6a9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6a92b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6a9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7efd7b697810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7efd7b697810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b697b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b697d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b696020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6961b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b696340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b696660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6967f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b696980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b696b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b696ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b696e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b695020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6952b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b695440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7efd7b660cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7efd7b660cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b65f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b65f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b65f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b65f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b65f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b65f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b65fa00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b65fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b65fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b65e020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b65e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b65e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b65e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b65e760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b65e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7efd7b63fcb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7efd7b63fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b63e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b63e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b63e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b63e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b63e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b63e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b63ea00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b63eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b63ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b63d020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b63d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b63d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b63d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b63d760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b63d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7efd7b633cb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7efd7b633cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6320a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b632230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6323c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b632550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6326e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b632870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b632a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b632b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b632d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b631020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b631340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b631760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7efd7b64bcc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7efd7b64bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b64a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b64a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b64a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b64a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b64a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b64a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b64aa00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b64ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b64ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b649020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b649340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b649760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7efd7b693810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7efd7b693810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b693d90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b692020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6921b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b692340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6924d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b692660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6927f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b692980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b692b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b692ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b692e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b691020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6911b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b691440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6915d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7efd7b67e9a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7efd7b67e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b67ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b67d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b67d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b67d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b67d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b67d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b67d7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b67d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b67db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b67dca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b67de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b67c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b67c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b67c440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b67c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7efd7b66e9a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7efd7b66e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b66ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b66d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b66d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b66d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b66d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b66d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b66d7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b66d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b66db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b66dca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b66de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b66c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b66c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b66c440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b66c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7efd7b63dcb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7efd7b63dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b63c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b63c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b63c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b63c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b63c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b63c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b63ca00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b63cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b63cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b63b020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b63b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b63b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b63b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b63b760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b63b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7efd7b651cb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7efd7b651cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b650230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6503c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b650550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6506e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b650870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b650a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b650b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b650d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b64f020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b64f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b64f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b64f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b64f760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b64f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efd7b6ba810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efd7b6ba810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6bab90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6bad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6b9020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6b91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6b9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6b94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6b9660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6b97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6b9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6b9b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6b9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6b9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6b8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6b82b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6b8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efd7b6a5810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efd7b6a5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6a5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6a5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6a4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6a4660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6a47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6a4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6a4b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6a4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6a4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6a3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6a32b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6a3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7efd7b6729a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7efd7b6729a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b672d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b671020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6711b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b671340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6714d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b671660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6717f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b671980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b671b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b671ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b671e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b670020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6701b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b670440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6705d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7efd7b6a1810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7efd7b6a1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6a1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6a1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6a0020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6a01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6a0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6a0660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6a07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6a0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6a0b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6a0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6a0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b69f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b69f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b69f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7efd7b68d9a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7efd7b68d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b68dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b68c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b68c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b68c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b68c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b68c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b68c7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b68c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b68cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b68cca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b68ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b68b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b68b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b68b440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b68b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7efd7b6789a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7efd7b6789a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b678d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b677020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b677340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6774d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b677660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6777f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b677980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b677b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b677ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b677e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b676020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6761b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b676440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6765d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7efd7b6689a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7efd7b6689a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b668d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b667020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b667340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6674d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b667660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6677f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b667980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b667b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b667ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b667e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b666020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6661b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b666440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6665d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7efd7b64dcc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7efd7b64dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b64c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b64c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b64c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b64c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b64c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b64c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b64ca00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b64cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b64cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b64b020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b64b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b64b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b64b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b64b760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b64b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efd7b6c2870" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efd7b6c2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6c2bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6c2d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6cd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6cd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6cd660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6cd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6cd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6cdb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6cdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6cde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6cc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6cc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6cc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efd7b6af810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efd7b6af810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6afb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6afd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6ae660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6ae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6ae980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6aeb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6aeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6aee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6ad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6ad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7efd7b69b810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7efd7b69b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b69bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b69bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b69a020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b69a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b69a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b69a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b69a660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b69a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b69a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b69ab10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b69aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b69ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b699020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6992b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b699440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7efd7b6879a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7efd7b6879a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b687d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b685020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6851b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b685340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6854d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b685660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6857f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b685980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b685b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b685ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b685e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b684020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6841b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b684440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6845d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7efd7b649cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7efd7b649cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b648230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6483c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b648550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6486e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b648870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b648a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b648b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b648d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b647020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b647340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b647760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7efd7b643cb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7efd7b643cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b642230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6423c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b642550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6426e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b642870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b642a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b642b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b642d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b641020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b641340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b641760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7efd7b637cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7efd7b637cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b636230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6363c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b636550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6366e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b636870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b636a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b636b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b636d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b635020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6351b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b635340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6354d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b635760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7efd7b6829a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7efd7b6829a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b682d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b681020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6811b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b681340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6814d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b681660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6817f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b681980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b681b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b681ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b681e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b680020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6801b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b680440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6805d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7efd7b647cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7efd7b647cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6460a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b646230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6463c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b646550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6466e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b646870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b646a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b646b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b646d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b645020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b645340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b645760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efd7b6be810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efd7b6be810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6beb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6bed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6bd020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6bd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6bd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6bd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6bd660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6bd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6bd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6bdb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6bdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6bde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6bc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6bc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efd7b6a9810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efd7b6a9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6a9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6a9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6a8020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6a8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6a8660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6a87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6a8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6a8b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6a8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6a8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6a7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6a72b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6a7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7efd7b695810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7efd7b695810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b695b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b695d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b694020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b694340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b694660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6947f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b694980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b694b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b694ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b694e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b693020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6932b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b693440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7efd7b64fcc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7efd7b64fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b64e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b64e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b64e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b64e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b64e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b64e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b64ea00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b64eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b64ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b64d020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b64d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b64d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b64d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b64d760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b64d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7efd7b63bcb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7efd7b63bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b63a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b63a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b63a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b63a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b63a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b63a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b63aa00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b63ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b63ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b639020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b639340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b639760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7efd7b6919a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7efd7b6919a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b691d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b690020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6901b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b690340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6904d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b690660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6907f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b690980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b690b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b690ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b690e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b68f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b68f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b68f440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b68f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7efd7b67c9a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7efd7b67c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b67cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b67b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b67b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b67b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b67b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b67b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b67b7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b67b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b67bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b67bca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b67be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b67a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b67a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b67a440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b67a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7efd7b66c9a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7efd7b66c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b66cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b66b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b66b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b66b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b66b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b66b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b66b7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b66b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b66bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b66bca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b66be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b66a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b66a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b66a440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b66a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efd7b6b8810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efd7b6b8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6b8b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6b8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6b7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6b7660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6b77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6b7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6b7b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6b7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6b7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6b6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6b62b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6b6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7efd7b6709a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7efd7b6709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b670d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b66f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b66f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b66f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b66f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b66f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b66f7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b66f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b66fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b66fca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b66fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b66e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b66e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b66e440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b66e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efd7b6b3810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efd7b6b3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6b3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6b3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6b2020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6b21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6b2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6b24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6b2660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6b27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6b2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6b2b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6b2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6b2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6b1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6b12b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6b1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7efd7b69f810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7efd7b69f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b69fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b69fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b69e020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b69e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b69e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b69e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b69e660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b69e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b69e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b69eb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b69eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b69ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b69d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b69d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b69d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7efd7b68b9a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7efd7b68b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b68bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b68a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b68a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b68a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b68a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b68a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b68a7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b68a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b68ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b68aca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b68ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b689020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b689440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6895d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7efd7b6769a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7efd7b6769a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b676d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b675020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b675340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6754d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b675660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6757f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b675980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b675b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b675ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b675e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b674020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6741b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b674440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6745d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7efd7b6669a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7efd7b6669a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b666d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b665020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6651b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b665340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6654d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b665660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6657f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b665980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b665b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b665ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b665e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b664020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6641b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b664440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6645d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efd7b6cc810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efd7b6cc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6ccb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6ccd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6c11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6c1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6c1660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6c17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6c1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6c1b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6c1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6c1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6c0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6c02b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6c0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efd7b6ad810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efd7b6ad810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6adb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b6add20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6ac340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6ac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6ac660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6ac7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b6ac980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b6acb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6acca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b6ace30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6ab020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6ab2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6ab440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7efd7b699810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7efd7b699810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b699b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b699d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b698020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b6981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b698340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b698660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b6987f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b698980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b698b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b698ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b698e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b697020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b6972b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b697440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7efd7b6849a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7efd7b6849a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b684d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b683020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6831b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b683340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6834d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b683660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b6837f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b683980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b683b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b683ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b683e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b682020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6821b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b682440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6825d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7efd7b658ca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7efd7b658ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b656230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6563c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b656550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6566e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b656870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b656a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b656b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b656d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b655020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b655340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b655760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7efd7b641cb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7efd7b641cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b640230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6403c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b640550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6406e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b640870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b640a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b640b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b640d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b63f020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b63f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b63f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b63f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b63f760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b63f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7efd7b65acc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7efd7b65acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b659230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6593c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b659550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6596e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b659870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b659a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b659b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b659d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b658020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6581b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b658340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6584d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b658760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7efd7b6809a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7efd7b6809a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b680d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b67f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b67f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b67f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b67f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b67f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b67f7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b67f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b67fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b67fca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b67fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b67e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b67e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b67e440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b67e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7efd7b635cb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7efd7b635cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6340a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b634230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6343c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b634550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b6346e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b634870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b634a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b634b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b634d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b633020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b633340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b633760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7efd7b62fcc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7efd7b62fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b62e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b62e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b62e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b62e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b62e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b62e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b62ea00"/>
        <function-ref name="get" scoped="" ref="0x7efd7b62eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b62ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b62d020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b62d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b62d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b62d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b62d760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b62d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7efd7b6629f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7efd7b6629f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6611c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b661350"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b6614e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b661670"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b661800"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b661990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b661b20"/>
        <function-ref name="get" scoped="" ref="0x7efd7b661cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b661e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b660020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b660340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b660760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b62ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b62ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b6020e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b602270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b602400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b602590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b602720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b6028b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b602a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b602bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b602d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b601020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b6011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b601340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b6014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b601760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b6018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5fe740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5fe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5feac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5fec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5fede0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5fd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5fd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5fd980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5fdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5fdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5fde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5fc120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5f9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5f9480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5f9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5f97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5f9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5f9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5f9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5f9de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5f8340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5f8a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5f5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5f5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5f40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5f4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5f4400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5f4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5f4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5f48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5f4a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5f4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5f4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5f3020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5f3760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5f0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5f0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5f0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5f0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5ef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5ef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5ef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5ef4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5ef660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5ef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5ef980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5efb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5efca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5efe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5ee120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5eb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5eb480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5eb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5eb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5eb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5ebac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5ebc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5ebde0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5ea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5ea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5ea340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5ea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5ea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5ea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5eaa80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5eac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5e7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5e7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5e60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5e6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5e6400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5e6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5e6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5e68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5e6a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5e6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5e6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5e5020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5e51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5e5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5e54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5e5760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5e58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5e2740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5e2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5e2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5e2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5e01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5e0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5e04d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5e0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5e07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5e0980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5e0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5e0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5e0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5df120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5dc100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5dc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5dc480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5dc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5dc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5dc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5dcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5dcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5dcde0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5db340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5dba80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5d8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5d8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5d70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5d7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5d7400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5d7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5d7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5d78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5d7a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5d7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5d7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5d6020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5d6760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5d3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5d3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5d3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5d3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5d3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5d24d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5d2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5d2980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5d2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5d2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5d2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5d1120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5ce100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5ce480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5ce610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5ce7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5ce930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5ceac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5cec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5cede0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5cd340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5cda80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5cad80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5cad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5c9180"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5c9310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5c94a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5c9630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5c97c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5c9950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5c9ae0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5c9c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5c9e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5c8020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5c8760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5c5740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5c5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5c5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5c5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5c44d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5c4980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5c3120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5c0100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5c0480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5c0de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5bf340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5bcd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5ba0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5ba270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5ba400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5ba590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5ba720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5ba8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5baa40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5babd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5bad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5b9020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5b9760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5b6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5b6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5b6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5b6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5b5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5b54d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5b5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5b5980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5b5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5b5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5b5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5b4120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5b1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5b1480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5b1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5b17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5b1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5b1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5b1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5b1de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5b0340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5b0a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5add10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5add10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5ac0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5ac270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5ac400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5ac590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5ac720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5ac8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5aca40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5acbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5acd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5ab020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5ab760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5a8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5a8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5a8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5a8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5a74d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5a7980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5a6120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b5a3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b5a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5a3480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b5a3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5a37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b5a3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5a3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5a3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5a3de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b5a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b5a2340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b5a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b5a2a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b59fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b59fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b59e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b59e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b59e400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b59e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b59e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b59e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b59ea40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b59ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b59ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b59d020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b59d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b59d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b59d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b59d760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b59d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b59a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b59a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b59aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b59ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b59ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b599020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5991b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b599340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5994d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b599660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b599980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b599b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b599ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b599e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b598120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b594100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b594100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b594480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b594610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5947a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b594930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b594ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b594c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b594de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b593020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b593340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b593660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b593a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b593c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b590e60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b590e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b58f210"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b58f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b58f530"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b58f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b58f850"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b58f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b58fb70"/>
        <function-ref name="get" scoped="" ref="0x7efd7b58fd00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b58e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b58e1b0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b58e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b58e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b58e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b58e8f0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b58ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b58b9f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b58b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b58bd70"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b58a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b58a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b58a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b58a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b58a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b58a7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b58a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b58ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b58aca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b58ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b589020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b589440"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5895d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b586460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b586460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5867e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b586970"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b586b00"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b586c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b586e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b585020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5851b0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b585340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5854d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b585660"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5857f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b585980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b585b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b585da0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b584020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b582e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b582e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5811c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b581350"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5814e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b581670"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b581800"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b581990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b581b20"/>
        <function-ref name="get" scoped="" ref="0x7efd7b581cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b581e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b580020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b580340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b580760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b57d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b57d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b57dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b57dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b57dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b57c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b57c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b57c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b57c4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b57c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b57c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b57c980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b57cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b57cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b57ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b57b120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b57b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b578100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b578100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b578480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b578610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5787a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b578930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b578ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b578c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b578de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b577020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b577340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b577660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b577a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b577c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b574d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b574d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5720e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b572270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b572400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b572590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b572720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5728b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b572a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b572bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b572d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b571020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b571340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b571760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b56e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b56e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b56eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b56ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b56ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b56d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b56d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b56d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b56d4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b56d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b56d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b56d980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b56db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b56dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b56de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b56c120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b56c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b569100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b569100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b569480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b569610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5697a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b569930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b569ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b569c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b569de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b568020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b568340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b568660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b568a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b568c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b565d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b565d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b564270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b564400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b564590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b564720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5648b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b564a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b564bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b564d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b563020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b563340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b563760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b560740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b560740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b560ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b560c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b560de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b55f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b55f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b55f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b55f4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b55f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b55f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b55f980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b55fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b55fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b55fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b55e120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b55e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b55b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b55b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b55b480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b55b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b55b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b55b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b55bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b55bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b55bde0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b55a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b55a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b55a340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b55a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b55a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b55a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b55aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b55ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b557d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b557d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5560e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b556270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b556400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b556590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b556720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5568b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b556a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b556bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b556d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b555020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b555340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b555760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b552740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b552740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b552ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b552c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b552de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b551020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b551340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5514d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b551660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5517f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b551980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b551b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b551ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b551e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b550120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b54d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b54d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b54d480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b54d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b54d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b54d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b54dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b54dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b54dde0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b54b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b54b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b54b340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b54b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b54b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b54b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b54ba80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b54bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b548d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b548d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5470e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b547270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b547400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b547590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b547720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5478b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b547a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b547bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b547d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b546020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b546340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b546760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b543740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b543740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b543ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b543c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b543de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b542020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b542340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5424d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b542660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b542980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b542b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b542ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b542e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b541120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b53e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b53e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b53e480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b53e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b53e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b53e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b53eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b53ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b53ede0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b53d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b53d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b53d340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b53d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b53d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b53d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b53da80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b53dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b53ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b53ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b5390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b539270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b539400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b539590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b539720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b5398b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b539a40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b539bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b539d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b538020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b538340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b538760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b535740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b535740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b535ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b535c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b535de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b534020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b534340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5344d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b534660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b534980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b534b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b534ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b534e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b533120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b530100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b530100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b530480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b530610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5307a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b530930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b530ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b530c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b530de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b52f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b52f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b52f340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b52f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b52f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b52f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b52fa80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b52fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b52cd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b52cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b52b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b52b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b52b400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b52b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b52b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b52b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b52ba40"/>
        <function-ref name="get" scoped="" ref="0x7efd7b52bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b52bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b52a020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b52a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b52a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b52a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b52a760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b52a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b526740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b526740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b526ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b526c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b526de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b525020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b5251b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b525340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b5254d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b525660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5257f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b525980"/>
        <function-ref name="set" scoped="" ref="0x7efd7b525b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b525ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b525e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b524120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b5242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efd7b521100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efd7b521100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b521480"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b521610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b5217a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b521930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b521ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b521c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b521de0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b520020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b5201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b520340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b5204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b520660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b5207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b520a80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b520c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7b4a92f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7b4a92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b4a9670"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b4a9800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b4a9990"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b4a9b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b4a9cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b4a9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b4a8020"/>
        <function-ref name="get" scoped="" ref="0x7efd7b4a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b4a8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b4a84d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b4a8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b4a87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b4a8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b4a8c10"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b4a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7b4ba020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7b4ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b4ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b4ba530"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b4ba6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b4ba850"/>
        <function-ref name="get" scoped="" ref="0x7efd7b4ba9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b4bab70"/>
        <function-ref name="set" scoped="" ref="0x7efd7b4bad00"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b4a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7b4a5de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7b4a5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b4a4180"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b4a4310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b4a44a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b4a4630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b4a47c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b4a4950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b4a4ae0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b4a4c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b4a4e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b4a3020"/>
        <function-ref name="set" scoped="" ref="0x7efd7b4a31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b4a3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b4a34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b4a3760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b4a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7b4a6b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7b4a6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b4a5020"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b4a51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b4a5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b4a54d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7b4a5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b4a57f0"/>
        <function-ref name="set" scoped="" ref="0x7efd7b4a5980"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b4a5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7b4a0930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7b4a0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b4a0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b4a0e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7b49f020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b49f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b49f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7b49f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b49f660"/>
        <function-ref name="get" scoped="" ref="0x7efd7b49f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7b49f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7b49fb10"/>
        <function-ref name="set" scoped="" ref="0x7efd7b49fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7b49fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7b49e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7b49e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b49e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7b4a1710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7b4a1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7b4a1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7b4a1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7b4a1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7b4a0020"/>
        <function-ref name="get" scoped="" ref="0x7efd7b4a01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7b4a0340"/>
        <function-ref name="set" scoped="" ref="0x7efd7b4a04d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7b4a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b491640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b491640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b2e4c40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b2e61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b2e4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b2e6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b2e3590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b2e3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b2e6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b2e7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b2e4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b2e7860"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b2e7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efd7b488610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b488610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b485c40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b4861e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b485020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b486ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b483590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b483110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b486660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b487390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b485630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b487860"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b487d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efd7b47f1d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efd7b47f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b47b630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b47dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b47c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b47c550"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b47a020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b47bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b47c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b47fdc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b47b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b47d2e0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b47d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efd7b475a80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efd7b475a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b4786f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b480400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b480400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b480780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd7b383020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd7b383020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b381870"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b382840"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7b381220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b382d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7b381d30"/>
        <function-ref name="start" scoped="" ref="0x7efd7b383e30"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b382380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b384760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b384760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b384ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd793b9ce0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd793b9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd793b6670"/>
        <function-ref name="fired" scoped="" ref="0x7efd793b7550"/>
        <function-ref name="startAt" scoped="" ref="0x7efd793b6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd793b7a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd793b6b30"/>
        <function-ref name="start" scoped="" ref="0x7efd793b8b60"/>
        <function-ref name="stop" scoped="" ref="0x7efd793b7090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd793b9490" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd793b9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd793b9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efd793a05d0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efd793a05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd793a0950"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd793a0ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd793a0c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd793a0e00"/>
        <function-ref name="fired" scoped="" ref="0x7efd7939f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efd793a4c50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efd793a4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd793a2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd793a21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd793a2340"/>
        <function-ref name="get" scoped="" ref="0x7efd793a24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd793a2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd793a27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd793a2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd793a2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efd793a2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd793a2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd793a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efd793a12b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd793a12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd793a1630"/>
        <function-ref name="getControl" scoped="" ref="0x7efd793a17c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd793a1950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd793a1ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd793a1c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd793a1e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd793a0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd793a01b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd793a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efd7b453ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7b453ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7b451020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7b4511b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7b451340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7b4514d0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b451660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efd7b4564d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b4564d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b456850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b4569e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b456b70"/>
        <function-ref name="get" scoped="" ref="0x7efd7b456d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b455020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b4551b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b455340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b4554d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b455660"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b4557f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b455980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efd7b454280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7b454280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7b454600"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7b454790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b454920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7b454ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7b454c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b454dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7b453020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7b4531b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7b453340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efd79396440" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efd79396440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd793967c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd79396950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd79396ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd79396c70"/>
        <function-ref name="fired" scoped="" ref="0x7efd79396e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efd79399910" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efd79399910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd79399c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd79399e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd79398020"/>
        <function-ref name="get" scoped="" ref="0x7efd793981b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd79398340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd793984d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd79398660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd793987f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd79398980"/>
        <function-ref name="setMode" scoped="" ref="0x7efd79398b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd79398ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd7939d720" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd7939d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79399020"/>
        <function-ref name="fired" scoped="" ref="0x7efd7939b020"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7939b9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7939b4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd793994e0"/>
        <function-ref name="start" scoped="" ref="0x7efd7939c5b0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7939cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7939ee60" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7939ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7939d210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efd79397020" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd79397020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd793973a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd79397530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd793976c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd79397850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd793979e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd79397b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd79397d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd79396020"/>
        <function-ref name="setControl" scoped="" ref="0x7efd793961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efd7b401020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7b401020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b401e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b3fc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b3fc340"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b3fccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7efd7b3f8020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efd7b3f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b3f8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b3f7800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b3f7340"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b3f7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efd7b3e52c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7b3e52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7b3e5640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7b3e57d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7b3e5960"/>
        <function-ref name="get" scoped="" ref="0x7efd7b3e5af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7b3e5c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b3e5e10"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7b3e3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b3e31b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b3e3340"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7b3e34d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7b3e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efd7b3f30a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7b3f30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b3e6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b3e69a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b3e64e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b3e6e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efd7b3c2540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efd7b3c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b3c13d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b3c1d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b3c1890"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b3c0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efd7b3c50f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7b3c50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b3c4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b3c49a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b3c44e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b3c4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd793b3140" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd793b3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd793b0b30"/>
        <function-ref name="fired" scoped="" ref="0x7efd793b29f0"/>
        <function-ref name="startAt" scoped="" ref="0x7efd793b04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd793b0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd793af020"/>
        <function-ref name="start" scoped="" ref="0x7efd793b2020"/>
        <function-ref name="stop" scoped="" ref="0x7efd793b2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efd793adb90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efd793adb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd793a94e0"/>
        <function-ref name="fired" scoped="" ref="0x7efd793aa4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efd793aae60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd793aa9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd793a99a0"/>
        <function-ref name="start" scoped="" ref="0x7efd793ab9d0"/>
        <function-ref name="stop" scoped="" ref="0x7efd793aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efd793af690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd793af690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd793ae5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd793ad020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd793aea70"/>
        <function-ref name="overflow" scoped="" ref="0x7efd793ad4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7efd7b34e490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7efd7b34e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b34e810"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b34e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7efd7b3521d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd7b3521d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b34fb30"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b3509f0"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7b34f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b34f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7b34e020"/>
        <function-ref name="start" scoped="" ref="0x7efd7b350020"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b350530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b358cf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b358cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b353220"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b3557c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b354590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b354110"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b353b20"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b3536a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b355c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b357940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b354ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b357e10"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b355340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7efd7b2fee80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7efd7b2fee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b2fc220"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b2fc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7efd7b303c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7efd7b303c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b2fe110"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b3006a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b2ff4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b2ff020"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b2fea10"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b2fe590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b300b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b301860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b2ffab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b301d30"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b300220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b309690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b309690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b304cf0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b306260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b304090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b306ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b303680"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b3031e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b306700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b308390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b3046c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b308880"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b308d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efd7b2facf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efd7b2facf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b2f0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efd7b2ef020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7b2ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b2efe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7b2ee800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7b2ee340"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7b2eecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b2e1020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b2e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b2dd630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b2e0a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b2de920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b2de4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b2dc020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b2ddab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b2de020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b2e1c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b2dd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b2e0110"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b2e05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7efd7b2d74e0" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7b2d74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7b2d7860"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7b2d79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7efd7b2d5370" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7efd7b2d5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b2d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b2db4f0" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b2db4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b2db870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7efd7b2d04e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7b2d04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7b2d0860"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7b2d09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7efd7b2d1390" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7efd7b2d1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b2d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b2d4a90" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b2d4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7b2d4e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7efd7b2b3e60" loc="72:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7efd7b2b3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7efd7b2c1210"/>
        <function-ref name="isRoot" scoped="" ref="0x7efd7b2c13a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7efd7b2c1530"/>
        <function-ref name="hasParent" scoped="" ref="0x7efd7b2c16c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b2c1850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7efd7b2c19e0"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b2c1b70"/>
        <function-ref name="getEtx" scoped="" ref="0x7efd7b2c1d00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7efd7b2c0020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7efd7b2c01b0"/>
        <function-ref name="isParent" scoped="" ref="0x7efd7b2c0340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7efd7b2c04d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b2c0660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7efd7b2c08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7efd7b2b1a80" loc="76:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7efd7b2b1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b2b1e00"/>
        <function-ref name="recv" scoped="" ref="0x7efd7b2b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7b2c0bb0" loc="73:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7b2c0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7b2b1020"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b2b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7efd7b2bd3b0" loc="71:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7efd7b2bd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b2bd730"/>
        <function-ref name="recv" scoped="" ref="0x7efd7b2bd8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7efd7b255720" loc="91:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7b255720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7efd7b255aa0"/>
        <function-ref name="initiate" scoped="" ref="0x7efd7b255c30"/>
        <function-ref name="linkResult" scoped="" ref="0x7efd7b255dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7b262a50" loc="89:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7b262a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7b262dd0"/>
        <function-ref name="changed" scoped="" ref="0x7efd7b268020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7b2681b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7b268340"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7b2684d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7b268660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7b2687f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7efd7b270c70" loc="86:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7efd7b270c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b272020"/>
        <function-ref name="recv" scoped="" ref="0x7efd7b2721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7efd7b2448a0" loc="93:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7b2448a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7efd7b254660"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7efd7b244db0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7efd7b254020"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7efd7b2541b0"/>
        <function-ref name="matchContext" scoped="" ref="0x7efd7b254340"/>
        <function-ref name="getPrefix" scoped="" ref="0x7efd7b244c20"/>
        <function-ref name="getContext" scoped="" ref="0x7efd7b2544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7efd7b24d5f0" loc="92:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7efd7b24d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7efd7b24d970"/>
        <function-ref name="OCP" scoped="" ref="0x7efd7b24db00"/>
        <function-ref name="objectSupported" scoped="" ref="0x7efd7b24dc90"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b24de20"/>
        <function-ref name="resetRank" scoped="" ref="0x7efd7b259020"/>
        <function-ref name="getOCP" scoped="" ref="0x7efd7b2591b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7efd7b259340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7efd7b2594d0"/>
        <function-ref name="getParent" scoped="" ref="0x7efd7b259660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7efd7b2597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7efd7b276800" loc="80:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd7b276800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7efd7b276b80"/>
        <function-ref name="isRoot" scoped="" ref="0x7efd7b276d10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7efd7b275020"/>
        <function-ref name="hasParent" scoped="" ref="0x7efd7b2751b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b275340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7efd7b2754d0"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b275660"/>
        <function-ref name="getEtx" scoped="" ref="0x7efd7b2757f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7efd7b275980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7efd7b275b10"/>
        <function-ref name="isParent" scoped="" ref="0x7efd7b275ca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7efd7b275e30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b274020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7efd7b2742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7efd7b270580" loc="83:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7efd7b270580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7b270900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7efd7b271760" loc="88:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7efd7b271760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7efd7b271ae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b26eb10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7efd7b26eca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7efd7b26e020"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b26e1b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7efd7b26e340"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b26e4d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7efd7b26e660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7efd7b271e00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7efd7b26e7f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7efd7b26e980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7efd7b271c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7efd7b25a580" loc="90:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7b25a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7efd7b25a900"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7efd7b25aa90"/>
        <function-ref name="delRoute" scoped="" ref="0x7efd7b25ac20"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7efd7b25adb0"/>
        <function-ref name="addRoute" scoped="" ref="0x7efd7b267020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7efd7b26bcc0" loc="87:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7efd7b26bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7efd7b2710a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7efd7b271230"/>
        <function-ref name="findTLV" scoped="" ref="0x7efd7b2713c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7efd7b1fa380" loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7efd7b1fa380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b1fa800"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b1fa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7b274570" loc="81:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7b274570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7b2748f0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b274a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7efd7b274dc0" loc="82:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7efd7b274dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b273180"/>
        <function-ref name="recv" scoped="" ref="0x7efd7b273310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7efd7b16c080" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7efd7b16c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7efd7b16c400"/>
        <function-ref name="setRoot" scoped="" ref="0x7efd7b16c590"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7efd7b16c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7efd7b16b320" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7efd7b16b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7efd7b16b6a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b16a670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7efd7b16a800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7efd7b16bb50"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b16bce0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7efd7b16be70"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b16a030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7efd7b16a1c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7efd7b16b9c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7efd7b16a350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7efd7b16a4e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7efd7b16b830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7b16c9e0" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7b16c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7b16cd60"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b16b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7efd7b087880" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7efd7b087880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7efd7b087c00"/>
        <function-ref name="setRoot" scoped="" ref="0x7efd7b087d90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7efd7b085020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7efd7b083ab0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7efd7b083ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b083e30"/>
        <function-ref name="recv" scoped="" ref="0x7efd7b082020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7efd7b06fa10" loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7b06fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7efd7b06e020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7efd7b06e1b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7efd7b06e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7efd7b06bac0" loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7efd7b06bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b06be40"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b06a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7efd7b07d730" loc="56:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7efd7b07d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b079c40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b07b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b079020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b07bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b078590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b078110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b07b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b07c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b079630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b07c860"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b07cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efd7b073e00" loc="58:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7b073e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7b0721c0"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7b072350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7efd7b0823d0" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7efd7b0823d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b07e870"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b081e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b080c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b080780"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b07d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b07ecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b080300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b081020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b07e260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b0814f0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b0819c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7efd7b06aad0" loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7efd7b06aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b06ae50"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b069020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7b070270" loc="60:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7b070270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7b0705f0"/>
        <function-ref name="changed" scoped="" ref="0x7efd7b070780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7b070910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7b070aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7b070c30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7b070dc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7b06f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7efd7b0692f0" loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7efd7b0692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b069670"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b069800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7efd7b083310" loc="52:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7efd7b083310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7b083690"/>
        <function-ref name="recv" scoped="" ref="0x7efd7b083820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7efd7b06ca40" loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7b06ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7efd7b06b7f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7efd7b06b020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7efd7b06b1b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7efd7b06b340"/>
        <function-ref name="matchContext" scoped="" ref="0x7efd7b06b4d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7efd7b06cdc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7efd7b06b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7efd7b0725e0" loc="59:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd7b0725e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7efd7b072960"/>
        <function-ref name="isRoot" scoped="" ref="0x7efd7b072af0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7efd7b072c80"/>
        <function-ref name="hasParent" scoped="" ref="0x7efd7b072e10"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b071020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7efd7b0711b0"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b071340"/>
        <function-ref name="getEtx" scoped="" ref="0x7efd7b0714d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7efd7b071660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7efd7b0717f0"/>
        <function-ref name="isParent" scoped="" ref="0x7efd7b071980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7efd7b071b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b071ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7efd7b070020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7efd7b06e590" loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7efd7b06e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7efd7b06e910"/>
        <function-ref name="OCP" scoped="" ref="0x7efd7b06eaa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7efd7b06ec30"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b06edc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7efd7b06c020"/>
        <function-ref name="getOCP" scoped="" ref="0x7efd7b06c1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7efd7b06c340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7efd7b06c4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7efd7b06c660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7efd7b06c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7efd7b06a2f0" loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7efd7b06a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b06a670"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b06a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7efd7b069ad0" loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7efd7b069ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7b069e50"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7b068020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7efd7b078ae0" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7efd7b078ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b073110"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b0765b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b0744a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b074020"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b073a10"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b073590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b076a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b077750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b074ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b077c20"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b076130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7efd7b085a10" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7efd7b085a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7efd7b085d90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7efd7b084e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7efd7b083020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7efd7b084340"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7b0844d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7efd7b084660"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7b0847f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7efd7b084980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7efd7b084b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7efd7b084ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7b084020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7efd7b0841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7efd7b06f2b0" loc="61:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7efd7b06f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7b06f630"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b06f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7b085270" loc="48:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7b085270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7b0855f0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b085780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b062140" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b062140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b05e630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b061b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b05f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b05f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b05d020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b05eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b05f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b062d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b05e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b061220"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b0616f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b05cb00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b05cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b057110"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b0595b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b0584a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b058020"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b057a10"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b057590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b059a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b05b750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b058ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b05bc20"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b059130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7b0554e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7b0554e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7b051a20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7b052020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7b052da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7b052920"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7b0504a0"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7b050020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7b0524a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7b054110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7b051410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7b0545e0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7b054ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7efd7b04f8d0" loc="30:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7b04f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7b04fc50"/>
        <function-ref name="changed" scoped="" ref="0x7efd7b04fde0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7b04b020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7b04b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7b04b340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7b04b4d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7b04b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7efd7b049020" loc="31:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7b049020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7efd7b0493a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7efd7b03e800" loc="36:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7b03e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7efd7b03eb80"/>
        <function-ref name="changed" scoped="" ref="0x7efd7b03ed10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7b043020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7b0431b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7b043340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7efd7b045020" loc="32:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7b045020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7b0453a0"/>
        <function-ref name="changed" scoped="" ref="0x7efd7b045530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7b0456c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7b045850"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7b0459e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7b045b70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7b045d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7efd7b0444a0" loc="33:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7b0444a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7efd7b044820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7efd7b048690" loc="3:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7b048690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7efd7b048a10"/>
        <function-ref name="changed" scoped="" ref="0x7efd7b048ba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7b048d30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7b001020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7b0011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7efd7affdda0" loc="8:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7affdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efd7affc180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7efd7afefb80" loc="10:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afefb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efd7affb020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efd7affb1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efd7affb340"/>
        <function-ref name="syncDone" scoped="" ref="0x7efd7affb4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efd7affb660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7affb7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efd7affb980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efd7affbb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efd7affbca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efd7affbe30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7affa020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7affa1b0"/>
        <function-ref name="sync" scoped="" ref="0x7efd7affa340"/>
        <function-ref name="getChannel" scoped="" ref="0x7efd7affa5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efd7affa760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7efd7affe300" loc="5:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7affe300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7efd7affe680"/>
        <function-ref name="changed" scoped="" ref="0x7efd7affe810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7affe9a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7affeb30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7affecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7b001c50" loc="4:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7b001c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7affe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7efd7afdc020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7afdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efd7afdc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7efd7afd17e0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afd17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efd7afd1b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efd7afd1cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efd7afd1e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7efd7afd0030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efd7afd01c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7afd0350"/>
        <function-ref name="setChannel" scoped="" ref="0x7efd7afd04e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efd7afd0670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efd7afd0800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efd7afd0990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7afd0b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7afd0cb0"/>
        <function-ref name="sync" scoped="" ref="0x7efd7afd0e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7efd7afcc120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efd7afcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7efd7afc31b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7efd7afc31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afc3da0"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7afc2260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7efd7afc5d90" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efd7afc5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efd7afcb180"/>
        <function-ref name="rfOff" scoped="" ref="0x7efd7afcb310"/>
        <function-ref name="rxOn" scoped="" ref="0x7efd7afcb4a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7efd7afcb630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efd7afcb7c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efd7afcb950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efd7afcbae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efd7afcbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7afcd980" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7afcd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7afcdd00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7afd1020"/>
        <function-ref name="request" scoped="" ref="0x7efd7afd11b0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7afd1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7afd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7efd7afbd9f0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efd7afbd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efd7afbdd70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efd7afbc020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efd7afbc1b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7efd7afbc340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efd7afbc4d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7afbc660"/>
        <function-ref name="setChannel" scoped="" ref="0x7efd7afbc7f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efd7afbc980"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efd7afbcb10"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efd7afbcca0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7afbce30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7afbb020"/>
        <function-ref name="sync" scoped="" ref="0x7efd7afbb1b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7efd7afbb440"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efd7afbb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7efd7af9c8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7af9c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7af9cc60"/>
        <function-ref name="write" scoped="" ref="0x7efd7af9cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7efd7afb7450" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7afb7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efd7afb77d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7efd7afb7e40" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7efd7afb7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7afb46e0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7afb56b0"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7afb4090"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7afb5b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7afb4ba0"/>
        <function-ref name="start" scoped="" ref="0x7efd7afb6ca0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7afb51f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7efd7afa05f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7afa05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afa0970"/>
        <function-ref name="write" scoped="" ref="0x7efd7afa0b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7efd7afb1380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7efd7afb1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7afb1700"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7afb1890"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7afb1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7afb1bb0"/>
        <function-ref name="get" scoped="" ref="0x7efd7afb1d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7afb0020"/>
        <function-ref name="set" scoped="" ref="0x7efd7afb01b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7afb0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7efd7afbacd0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7efd7afbacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afb8940"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7afb8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7efd7af8a820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7efd7af8a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7af8aba0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7af8ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7efd7af9b1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efd7af9b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7af9b540"/>
        <function-ref name="write" scoped="" ref="0x7efd7af9b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7efd7af9ba70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7af9ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7af9bdf0"/>
        <function-ref name="write" scoped="" ref="0x7efd7af9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7efd7afa53d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efd7afa53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afa5750"/>
        <function-ref name="write" scoped="" ref="0x7efd7afa58e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7efd7afa6810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efd7afa6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efd7afa6b90"/>
        <function-ref name="changed" scoped="" ref="0x7efd7afa6d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7efd7afad020"/>
        <function-ref name="setAddress" scoped="" ref="0x7efd7afad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efd7afb20e0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efd7afb20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7afb2460"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7afb25f0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7afb2780"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7afb2910"/>
        <function-ref name="get" scoped="" ref="0x7efd7afb2aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7afb2c30"/>
        <function-ref name="set" scoped="" ref="0x7efd7afb2dc0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7afb1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7efd7af99120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7af99120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7af996a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7efd7afb06a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7efd7afb06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7afb0a20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7afb0bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7afb0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7afaf020"/>
        <function-ref name="get" scoped="" ref="0x7efd7afaf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7afaf340"/>
        <function-ref name="set" scoped="" ref="0x7efd7afaf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7afaf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7afbe610" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7afbe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7afbe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7efd7af9c020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7af9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7af9c3a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7af9c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7efd7af99a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efd7af99a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7af99dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efd7af981d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efd7af981d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7af98550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7af986e0"/>
        <function-ref name="request" scoped="" ref="0x7efd7af98870"/>
        <function-ref name="granted" scoped="" ref="0x7efd7af98a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7af98b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7efd7af96d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7efd7af96d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7af95180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7af95310"/>
        <function-ref name="request" scoped="" ref="0x7efd7af954a0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7af95630"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7af957c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7efd7afbb8d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efd7afbb8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efd7afbbc50"/>
        <function-ref name="rfOff" scoped="" ref="0x7efd7afbbde0"/>
        <function-ref name="rxOn" scoped="" ref="0x7efd7afba020"/>
        <function-ref name="startVReg" scoped="" ref="0x7efd7afba1b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efd7afba340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efd7afba4d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efd7afba660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efd7afba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7efd7afa5c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efd7afa5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afa00a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7afa0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7efd7af9eb00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efd7af9eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7af9ee80"/>
        <function-ref name="write" scoped="" ref="0x7efd7afa5030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7efd7af972b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efd7af972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7af97630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7af95a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7af95a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7af95e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7af94020"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7af941b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7af94340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7af944d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7af94660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7af947f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7af94e30"/>
        <function-ref name="set" scoped="" ref="0x7efd7af94980"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7af94b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7af94ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7efd7af8b940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7efd7af8b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7af8bcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7af8be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7afbec80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7afbec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7afbd0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7afbd230"/>
        <function-ref name="request" scoped="" ref="0x7efd7afbd3c0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7afbd550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7afbd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7efd7afa9520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efd7afa9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afa98a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7afa9a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7efd7afa1a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efd7afa1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7afa9020"/>
        <function-ref name="write" scoped="" ref="0x7efd7afa91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7efd7afae0e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7efd7afae0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7afae460"/>
        <function-ref name="disable" scoped="" ref="0x7efd7afae5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efd7afae780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efd7afae910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7efd7af96020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7efd7af96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7af963a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7af96530"/>
        <function-ref name="request" scoped="" ref="0x7efd7af966c0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7af96850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7af969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7efd7af979c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efd7af979c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7af97d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7af137e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7af137e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7af13b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7efd7af0f220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af0f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7af0db30"/>
        <function-ref name="fired" scoped="" ref="0x7efd7af0ea60"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7af0d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7af0d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7af0b020"/>
        <function-ref name="start" scoped="" ref="0x7efd7af0e090"/>
        <function-ref name="stop" scoped="" ref="0x7efd7af0e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7af09260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7af09260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7af095e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7efd7af09af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7efd7af09af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7aecf390"/>
        <function-ref name="fired" scoped="" ref="0x7efd7aed0360"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7aed0ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7aed0820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7aecf850"/>
        <function-ref name="start" scoped="" ref="0x7efd7aed1970"/>
        <function-ref name="stop" scoped="" ref="0x7efd7aed1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd7925d2a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd7925d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7925ab30"/>
        <function-ref name="fired" scoped="" ref="0x7efd7925caa0"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7925a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7925a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd79259020"/>
        <function-ref name="start" scoped="" ref="0x7efd7925c0d0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7925c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7925ea10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7925ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7925ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd792552a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd792552a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79253b30"/>
        <function-ref name="fired" scoped="" ref="0x7efd79254aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7efd792534e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79253020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd79252020"/>
        <function-ref name="start" scoped="" ref="0x7efd792540d0"/>
        <function-ref name="stop" scoped="" ref="0x7efd792545e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd79256a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd79256a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd79256d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efd7923dc10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efd7923dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7923c020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd7923c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd7923c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd7923c4d0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7923c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efd7923f1b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efd7923f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7923f530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7923f6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7923f850"/>
        <function-ref name="get" scoped="" ref="0x7efd7923f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7923fb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7923fd00"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7923e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7923e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7923e340"/>
        <function-ref name="setMode" scoped="" ref="0x7efd7923e4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd7923e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efd7923e8f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7923e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7923ec70"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7923ee00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7923d020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7923d1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7923d340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7923d4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7923d660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7923d7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7923d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efd79233a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efd79233a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd79233e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7efd79232020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efd792321b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efd79232340"/>
        <function-ref name="fired" scoped="" ref="0x7efd792324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efd79235020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efd79235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd792353a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd79235530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd792356c0"/>
        <function-ref name="get" scoped="" ref="0x7efd79235850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd792359e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd79235b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efd79235d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd79234020"/>
        <function-ref name="overflow" scoped="" ref="0x7efd792341b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efd79234340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efd792344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd7923ada0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd7923ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79236670"/>
        <function-ref name="fired" scoped="" ref="0x7efd79237610"/>
        <function-ref name="startAt" scoped="" ref="0x7efd79236020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79237ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd79236b30"/>
        <function-ref name="start" scoped="" ref="0x7efd79239bf0"/>
        <function-ref name="stop" scoped="" ref="0x7efd79237150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7923a510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7923a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7923a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efd79234760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd79234760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd79234ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7efd79234c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd79234e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd79233020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd792331b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd79233340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd792334d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd79233660"/>
        <function-ref name="setControl" scoped="" ref="0x7efd792337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efd7aef3080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7aef3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7aef2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7aef29a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7aef24e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7aef2e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efd7aeea0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efd7aeea0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7aee9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7aee99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7aee94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7aee9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efd7aeeecd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7aeeecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7aeedb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7aeec550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7aeec090"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7aeeca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efd792505f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efd792505f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7924de50"/>
        <function-ref name="fired" scoped="" ref="0x7efd7924ee00"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7924d800"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7924d340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7924c340"/>
        <function-ref name="start" scoped="" ref="0x7efd7924e430"/>
        <function-ref name="stop" scoped="" ref="0x7efd7924e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efd7924ad20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efd7924ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79246670"/>
        <function-ref name="fired" scoped="" ref="0x7efd79247550"/>
        <function-ref name="startAt" scoped="" ref="0x7efd79246020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79247a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd79246b30"/>
        <function-ref name="start" scoped="" ref="0x7efd79248b60"/>
        <function-ref name="stop" scoped="" ref="0x7efd79247090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efd7924c9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7924c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7924b7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7924a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7924bca0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7924a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7efd7aec8090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7efd7aec8090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec8410"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec85a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec8730"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec88c0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec8a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec8be0"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec8d70"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7efd7aec7390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7efd7aec7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec7710"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec7bc0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec6020"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec61b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7efd7aec66a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7efd7aec66a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec6a20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec6bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec5020"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec5340"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec54d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7efd7aecae60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efd7aecae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec9210"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec93a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec9530"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec96c0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec9850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec99e0"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec9b70"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7efd7aec4ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7efd7aec4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec3230"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec3550"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec3870"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec3a00"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7efd7af10b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7efd7af10b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aeca020"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aeca1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aeca340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aeca4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aeca660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aeca7f0"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeca980"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aecab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7efd7aec59b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7efd7aec59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec4020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec4340"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec4660"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec47f0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aec02f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aec02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec0670"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec0800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aec0990"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec0b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec0cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aec0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aebf020"/>
        <function-ref name="get" scoped="" ref="0x7efd7aebf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aebf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aebf4d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7aebf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aebf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aebf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aebfc10"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aebfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aec1020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aec1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aec13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aec1530"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aec16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aec1850"/>
        <function-ref name="get" scoped="" ref="0x7efd7aec19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aec1b70"/>
        <function-ref name="set" scoped="" ref="0x7efd7aec1d00"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aec0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aebcde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aebcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aebb180"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aebb310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aebb4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aebb630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aebb7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aebb950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aebbae0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aebbc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aebbe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aeba020"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aeba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aeba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aeba760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aebdb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aebdb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aebc020"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aebc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aebc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aebc4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aebc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aebc7f0"/>
        <function-ref name="set" scoped="" ref="0x7efd7aebc980"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aebcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aeb7930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aeb7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aeb7cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aeb7e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aeb5020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aeb51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aeb5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aeb54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aeb5660"/>
        <function-ref name="get" scoped="" ref="0x7efd7aeb57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aeb5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aeb5b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeb5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aeb5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aeb4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aeb42b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeb4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aeb8710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aeb8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aeb8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aeb8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aeb8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aeb7020"/>
        <function-ref name="get" scoped="" ref="0x7efd7aeb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aeb7340"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeb74d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeb7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aeb1480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aeb1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aeb1800"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aeb1990"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aeb1b20"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aeb1cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aeb1e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aeb0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aeb01b0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aeb0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aeb04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aeb0660"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeb07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aeb0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aeb0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aeb0da0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aeb21d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aeb21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aeb2550"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aeb26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aeb2870"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aeb2a00"/>
        <function-ref name="get" scoped="" ref="0x7efd7aeb2b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aeb2d20"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeb1020"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aeac020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aeac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aeac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aeac530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aeac6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aeac850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aeac9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aeacb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aeacd00"/>
        <function-ref name="get" scoped="" ref="0x7efd7aeab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aeab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aeab340"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aeab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aeab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aeaba80"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aeaed70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aeaed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aead180"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aead310"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aead4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aead630"/>
        <function-ref name="get" scoped="" ref="0x7efd7aead7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aead950"/>
        <function-ref name="set" scoped="" ref="0x7efd7aeadae0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aeadc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aea8de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aea8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aea7180"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aea7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aea74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aea7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aea77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aea7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aea7ae0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aea7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aea7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aea6020"/>
        <function-ref name="set" scoped="" ref="0x7efd7aea61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aea6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aea64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aea6760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aea68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aea9b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aea9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aea8020"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aea81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aea8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aea84d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7aea8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aea87f0"/>
        <function-ref name="set" scoped="" ref="0x7efd7aea8980"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aea8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efd7aea3930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efd7aea3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aea3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aea3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7aea2020"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aea21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aea2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7aea24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aea2660"/>
        <function-ref name="get" scoped="" ref="0x7efd7aea27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7aea2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7aea2b10"/>
        <function-ref name="set" scoped="" ref="0x7efd7aea2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7aea2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7aea1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7aea12b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aea1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efd7aea4710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7aea4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7aea4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7aea4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7aea4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7aea3020"/>
        <function-ref name="get" scoped="" ref="0x7efd7aea31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7aea3340"/>
        <function-ref name="set" scoped="" ref="0x7efd7aea34d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7aea3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7efd7ae8d150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7efd7ae8d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efd7ae8d4d0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae8d660"/>
        <function-ref name="captured" scoped="" ref="0x7efd7ae8d7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efd7ae8d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7efd7ae8dd60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7efd7ae8dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7ae8a180"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae8a310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efd7ae8a4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efd7ae8a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7efd7ae8aa20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efd7ae8aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7ae8ada0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae87020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efd7ae871b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efd7ae87340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7efd7ae718f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7efd7ae718f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efd7ae71c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efd7ae71e00"/>
        <function-ref name="captured" scoped="" ref="0x7efd7ae70020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7ae701b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7ae70340"/>
        <function-ref name="setEdge" scoped="" ref="0x7efd7ae704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efd7ae84a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efd7ae84a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efd7ae84da0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae72020"/>
        <function-ref name="captured" scoped="" ref="0x7efd7ae721b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efd7ae72340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efd7ae725d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efd7ae725d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efd7ae72950"/>
        <function-ref name="getControl" scoped="" ref="0x7efd7ae72ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efd7ae72c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efd7ae72e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efd7ae71020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efd7ae711b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efd7ae71340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efd7ae714d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efd7ae71660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7efd7ae707a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efd7ae707a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7ae70b20"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7ae70cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7ae70e40"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7ae6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7ae6f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7ae6f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7ae6f4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ae6f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7ae6f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7ae6f980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ae6fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7ae6fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7ae6fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7ae6e120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7ae6e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efd7ae618a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efd7ae618a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae61c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae61db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae60020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae601b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae60340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efd7ae57a30" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efd7ae57a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae57db0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae56020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae561b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae56340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae564d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efd7ae5e8a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efd7ae5e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae5ec20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae5edb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae5d020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae5d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae5d340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae5d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efd7ae5c8a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efd7ae5c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae5cc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae5cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae5b020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae5b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae5b340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efd7ae678a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efd7ae678a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae67c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae67db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae62020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae621b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae62340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efd7ae598a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efd7ae598a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae59d20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae58020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae581b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae58340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae584d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae58660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efd7ae608a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efd7ae608a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae60c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae60db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae5f020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae5f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae5f340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae5f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efd7ae56a30" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efd7ae56a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae56db0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae55020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae551b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae55340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae554d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efd7ae638f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efd7ae638f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae63c70"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae63e00"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae68020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae681b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae68340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efd7ae5b8a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efd7ae5b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae5bc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae5bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae5a020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae5a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae5a340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae5a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efd7ae628a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efd7ae628a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae62c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae62db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae61020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae611b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae61340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efd7ae58a30" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efd7ae58a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae58db0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae57020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae571b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae57340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae574d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efd7ae5f8a0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efd7ae5f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae5fc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae5fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae5e020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae5e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae5e340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae5e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efd7ae5d8a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efd7ae5d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae5dc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae5ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae5c020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae5c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae5c340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efd7ae688a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efd7ae688a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae68c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae68db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae67020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae671b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae67340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efd7ae5a8a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efd7ae5a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae5ac20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae5adb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae59020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae591b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae59340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efd7ae4d8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efd7ae4d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae4dc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae4ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae4c020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae4c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae4c340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efd7ae43a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efd7ae43a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae43db0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae42020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae421b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae42340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae424d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efd7ae4a8a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efd7ae4a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae4ac20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae4adb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae49020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae491b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae49340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efd7ae488a0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efd7ae488a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae48c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae48db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae47020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae471b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae47340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efd7ae4f8a0" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efd7ae4f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae4fc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae4fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae4e020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae4e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae4e340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efd7ae458a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efd7ae458a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae45d20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae44020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae441b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae44340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae444d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efd7ae4c8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efd7ae4c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae4cc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae4cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae4b020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae4b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae4b340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efd7ae42a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efd7ae42a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae42db0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae41020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae411b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae41340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae414d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae41660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efd7ae54810" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efd7ae54810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae54b90"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae54d20"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae51020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae511b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae51340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efd7ae478a0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efd7ae478a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae47c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae47db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae46020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae461b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae46340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efd7ae4e8a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efd7ae4e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae4ec20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae4edb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae4d020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae4d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae4d340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae4d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efd7ae44a30" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efd7ae44a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae44db0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae43020"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae431b0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae43340"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae434d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae43660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efd7ae4b8a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efd7ae4b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae4bc20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae4bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae4a020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae4a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae4a340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efd7ae498a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efd7ae498a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae49c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae49db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae48020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae481b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae48340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efd7ae518a0" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efd7ae518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae51c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae51db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae4f020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae4f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae4f340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae4f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efd7ae468a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efd7ae468a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ae46c20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ae46db0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ae45020"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ae451b0"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ae45340"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ae454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efd7ad6e610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efd7ad6e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ad6e990"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ad6eb20"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ad6ecb0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ad6ee40"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ad61020"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ad611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efd7ad6fa30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efd7ad6fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7ad6fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ad6e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efd7ad6e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efd7ad6e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efd7ad5f610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efd7ad5f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7ad5f990"/>
        <function-ref name="fired" scoped="" ref="0x7efd7ad5fb20"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ad5fcb0"/>
        <function-ref name="edge" scoped="" ref="0x7efd7ad5fe40"/>
        <function-ref name="enable" scoped="" ref="0x7efd7ad5e020"/>
        <function-ref name="getValue" scoped="" ref="0x7efd7ad5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efd7ad60a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efd7ad60a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7ad60df0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7ad5f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efd7ad5f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efd7ad5f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efd7a90ce50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a90ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90a410"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efd7a915160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efd7a915160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a9154e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efd7a90fe50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a90fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90e210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efd7a909880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a909880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a909c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a909d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efd7a8ff0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efd7a8ff0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ff420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ff5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efd7a9080a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efd7a9080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a908420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9085b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efd7a8f3500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a8f3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f3880"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efd7a8f6500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a8f6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f6880"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efd7a914490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a914490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a914810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efd7a8fc880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efd7a8fc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fcc00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efd7a8f7500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a8f7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f7880"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efd7a90ee50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efd7a90ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90d210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efd7a90de50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a90de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90c210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efd7a901880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a901880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a901c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a901d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efd7a9050a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efd7a9050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a905420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9055b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efd7a908880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a908880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a908c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a908d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7a917a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a917a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7a917e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7a916020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7a9161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efd7a913e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a913e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a9121c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efd7a912490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efd7a912490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a912910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efd7a8fac80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a8fac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f90a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efd7a912be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a912be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a910020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efd7a8f7ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a8f7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f60a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efd7a913160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a913160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a9134e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efd7a8fc0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efd7a8fc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fc420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efd7a90d670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a90d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90d9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efd7a90e670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a90e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90e9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efd7a916ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a916ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a916e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efd7a8fd0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a8fd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fd420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efd7a8ff880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efd7a8ff880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ffc00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ffd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efd7a8fd880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a8fd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fdc00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efd7a8f5ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a8f5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f30a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efd7a8f6ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a8f6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f50a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efd7a905880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efd7a905880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a905c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a905d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efd7a8fe0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efd7a8fe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fe420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fe5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efd7a8f8ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a8f8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f70a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efd7a907880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a907880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a907c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a907d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efd7a8f3ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a8f3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a8f20a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a8f2230"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f23c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a8f2550"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a8f26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efd7a916480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a916480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a916800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efd7a90f670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efd7a90f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90f9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efd7a90c670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a90c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90c9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efd7a9000a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a9000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a900420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9005b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efd7a9070a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a9070a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a907420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9075b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efd7a900880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a900880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a900c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a900d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efd7a90a870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a90a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a90abf0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a90ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efd7a9157b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efd7a9157b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a915b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efd7a9090a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a9090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a909420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9095b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7a919e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a919e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a9171c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a917350"/>
        <function-ref name="request" scoped="" ref="0x7efd7a9174e0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a917670"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a917800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efd7a9102f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a9102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a910670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efd7a90f020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efd7a90f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a90f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efd7a8f8500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efd7a8f8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f8880"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efd7a8f9ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a8f9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f80a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efd7a9137b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a9137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a913b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efd7a8f9500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a8f9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f9880"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efd7a8f5500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efd7a8f5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8f5880"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efd7a9010a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a9010a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a901420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9015b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efd7a8fe880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efd7a8fe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fec00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efd7a915e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efd7a915e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a9141c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efd7a914ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a914ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a914e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efd7a9060a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a9060a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a906420"/>
        <function-ref name="write" scoped="" ref="0x7efd7a9065b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efd7a910940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efd7a910940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a910cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efd7a906880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efd7a906880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a906c00"/>
        <function-ref name="write" scoped="" ref="0x7efd7a906d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efd7a8fa0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efd7a8fa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8fa820"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8fa9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efd7a8f29b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a8f29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a8f2d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a8f1020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8f11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a8f1340"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a8f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7efd7ad1e630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7efd7ad1e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7ad1e9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7ad1eb40"/>
        <function-ref name="write" scoped="" ref="0x7efd7ad1ecd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7ad1ee60"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7ad1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7ad20670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7ad209f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7ad20b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7ad20d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7efd7ad1d8c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7efd7ad1d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7ad1dc40"/>
        <function-ref name="write" scoped="" ref="0x7efd7ad1ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7efd7ad1c6f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7efd7ad1c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7ad1ca70"/>
        <function-ref name="write" scoped="" ref="0x7efd7ad1cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7ad23950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7ad23950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ad23cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ad23e60"/>
        <function-ref name="request" scoped="" ref="0x7efd7ad20020"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ad201b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ad20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7efd7ad1b510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7efd7ad1b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7ad1b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7efd7ad05680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ad05680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7ad05a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7ad05b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7efd7ad15bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7efd7ad15bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7ad14020"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7ad141b0"/>
        <function-ref name="write" scoped="" ref="0x7efd7ad14340"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7ad144d0"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7ad14660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7ad1a920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7ad1a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7ad1aca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7ad1ae30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7ad17020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7efd7ad0e080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efd7ad0e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efd7ad0e400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7efd7ad01b90" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7efd7ad01b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd7ad0c020"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd7ad0c1b0"/>
        <function-ref name="isState" scoped="" ref="0x7efd7ad0c340"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd7ad0c4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7efd7ad0c660"/>
        <function-ref name="forceState" scoped="" ref="0x7efd7ad0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efd7ad11400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efd7ad11400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ad11780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ad11910"/>
        <function-ref name="request" scoped="" ref="0x7efd7ad11aa0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ad11c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ad11dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7efd7ad13020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7efd7ad13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7ad133a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7ad13530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7efd7ad13db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7efd7ad13db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7ad12180"/>
        <function-ref name="write" scoped="" ref="0x7efd7ad12310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7ad0ca70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7ad0ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7ad0cdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7ad06020"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7ad061b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7ad06340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7ad064d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ad06660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7ad067f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7ad06e30"/>
        <function-ref name="set" scoped="" ref="0x7efd7ad06980"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7ad06b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7ad06ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7ad17810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7ad17810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ad17b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ad17d20"/>
        <function-ref name="request" scoped="" ref="0x7efd7ad15020"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ad151b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ad15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7efd7acfcbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7efd7acfcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7acfb020"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7acfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7efd7ad12ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7efd7ad12ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7ad11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd7aca1770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd7aca1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd7aca1af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd7aca1c80"/>
        <function-ref name="isState" scoped="" ref="0x7efd7aca1e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd7ac99020"/>
        <function-ref name="requestState" scoped="" ref="0x7efd7ac991b0"/>
        <function-ref name="forceState" scoped="" ref="0x7efd7ac99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd7ac9c1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd7ac9c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd7ac9c550"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd7ac9c6e0"/>
        <function-ref name="isState" scoped="" ref="0x7efd7ac9c870"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd7ac9ca00"/>
        <function-ref name="requestState" scoped="" ref="0x7efd7ac9cb90"/>
        <function-ref name="forceState" scoped="" ref="0x7efd7ac9cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7ac98020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7ac98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7ac983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd7ac98b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd7ac98b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd7ac97020"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd7ac971b0"/>
        <function-ref name="isState" scoped="" ref="0x7efd7ac97340"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd7ac974d0"/>
        <function-ref name="requestState" scoped="" ref="0x7efd7ac97660"/>
        <function-ref name="forceState" scoped="" ref="0x7efd7ac977f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efd7a940020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efd7a940020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a9403a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a940530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efd7a9418f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efd7a9418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efd7a941c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7ac7fc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7ac7fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a941020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a9411b0"/>
        <function-ref name="request" scoped="" ref="0x7efd7a941340"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a9414d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a941660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd791658f0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd791658f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd79165c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd79165e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efd791632b0" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efd791632b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79163630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd791637c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efd79163a50" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd79163a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd79163dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efd791640c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efd791640c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efd79164440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79167c30" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79167c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79165020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd791651b0"/>
        <function-ref name="request" scoped="" ref="0x7efd79165340"/>
        <function-ref name="granted" scoped="" ref="0x7efd791654d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79165660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efd791646d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efd791646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efd79164a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efd79164be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7efd79164d70"/>
        <function-ref name="write" scoped="" ref="0x7efd79163020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efd7ac195e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7ac195e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd7ac19960"/>
        <function-ref name="configure" scoped="" ref="0x7efd7ac19af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efd7ac16510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ac16510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7ac16890"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7ac16a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efd7ac13600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd7ac13600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd7ac13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efd7ac19dd0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efd7ac19dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efd7ac18180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efd7ac14370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efd7ac14370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ac146f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ac14880"/>
        <function-ref name="request" scoped="" ref="0x7efd7ac14a10"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ac14ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ac14d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7ac1da20" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7ac1da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ac1dda0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ac1a020"/>
        <function-ref name="request" scoped="" ref="0x7efd7ac1a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ac1a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ac1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efd7ac18480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efd7ac18480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efd7ac18800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efd7ac18990"/>
        <function-ref name="splitRead" scoped="" ref="0x7efd7ac18b20"/>
        <function-ref name="write" scoped="" ref="0x7efd7ac18cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efd7ac0f6a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd7ac0f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7ac0fa20"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7ac0fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efd7ab9ec40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7ab9ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd7ab9d020"/>
        <function-ref name="configure" scoped="" ref="0x7efd7ab9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efd7ab9c700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efd7ab9c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7ab9caa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7ab9cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efd7ab9be00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efd7ab9be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd7ab9a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efd7ab9d440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efd7ab9d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efd7ab9d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efd7ab9a490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efd7ab9a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd7ab9a810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd7ab9a9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd7ab9ab30"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd7ab9acc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd7ab9ae50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd7ab99020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd7ab991b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd7ab99340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd7ab994d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd7ab99660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd7ab997f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd7ab99980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd7ab99b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd7ab99da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd7ab98020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd7ab981b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd7ab98340"/>
        <function-ref name="isUart" scoped="" ref="0x7efd7ab984d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd7ab98660"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd7ab987f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd7ab98980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd7ab98b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd7ab98ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd7ab98e30"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7ab97020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd7ab973b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd7ab97540"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd7ab976d0"/>
        <function-ref name="tx" scoped="" ref="0x7efd7ab97860"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd7ab979f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd7ab97b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd7ab97d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd7ab96020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd7ab961b0"/>
        <function-ref name="rx" scoped="" ref="0x7efd7ab96340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd7ab964d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd7ab96660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd7ab967f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd7ab96980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd7ab96b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7ab945a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7ab945a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7ab94920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7ab94ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7ab94c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7ab94dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7ab93020"/>
        <function-ref name="get" scoped="" ref="0x7efd7ab931b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7ab93340"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7ab93980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ab93660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7ab934d0"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7ab937f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efd7ab9b060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efd7ab9b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ab9b400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ab9b590"/>
        <function-ref name="request" scoped="" ref="0x7efd7ab9b720"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ab9b8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ab9ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7ab9fe80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7ab9fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7ab9e240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7ab9e3d0"/>
        <function-ref name="request" scoped="" ref="0x7efd7ab9e560"/>
        <function-ref name="granted" scoped="" ref="0x7efd7ab9e6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7ab9e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efd7ab9da50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efd7ab9da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efd7ab9ddd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efd7ab9c020"/>
        <function-ref name="splitRead" scoped="" ref="0x7efd7ab9c1b0"/>
        <function-ref name="write" scoped="" ref="0x7efd7ab9c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efd7ab96de0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd7ab96de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7ab94180"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7ab94310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7efd7ab93c50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7efd7ab93c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7ab92020"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7ab921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7efd7ab838a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efd7ab838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7ab83c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efd7ab863b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd7ab863b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7ab86730"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7ab868c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efd7ab8d860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd7ab8d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd7ab8dbe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd7ab8dd70"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd7ab8a020"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd7ab8a1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd7ab8a340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd7ab8a4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd7ab8a660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd7ab8a7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd7ab8a980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd7ab8ab10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd7ab8aca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd7ab8ae30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd7ab89020"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd7ab892b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd7ab89440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd7ab895d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd7ab89760"/>
        <function-ref name="isUart" scoped="" ref="0x7efd7ab898f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd7ab89a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd7ab89c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd7ab89da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd7ab88020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd7ab881b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd7ab88340"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7ab884d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd7ab88860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd7ab889f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd7ab88b80"/>
        <function-ref name="tx" scoped="" ref="0x7efd7ab88d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd7ab87020"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd7ab871b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd7ab87340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd7ab874d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd7ab87660"/>
        <function-ref name="rx" scoped="" ref="0x7efd7ab877f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd7ab87980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd7ab87b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd7ab87ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd7ab87e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd7ab86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efd7ab4a670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efd7ab4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7ab4a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7ab4ab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7ab4ad10"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7ab48020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7ab481b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7ab48340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7ab484d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ab48660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7ab487f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7ab48980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ab48b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7ab48ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7ab48e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7ab47120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7ab472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efd7ab7ddc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efd7ab7ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7ab7c180"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7ab7c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efd7ab47670" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efd7ab47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7ab479f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7ab47b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7ab47d10"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7ab46020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7ab461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7ab46340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7ab464d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ab46660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7ab467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7ab46980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ab46b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7ab46ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7ab46e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7ab45120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7ab452b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efd7ab45670" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efd7ab45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7ab459f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7ab45b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7ab45d10"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7ab44020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7ab441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7ab44340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7ab444d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ab44660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7ab447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7ab44980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ab44b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7ab44ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7ab44e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7ab43120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7ab432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efd7ab81020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efd7ab81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd7ab813a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd7ab81530"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd7ab816c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd7ab81850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd7ab819e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd7ab81b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd7ab81d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd7ab80020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd7ab801b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd7ab80340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd7ab804d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd7ab80660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd7ab807f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd7ab80a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd7ab80c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd7ab80da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd7ab7f020"/>
        <function-ref name="isUart" scoped="" ref="0x7efd7ab7f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd7ab7f340"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd7ab7f4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd7ab7f660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd7ab7f7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd7ab7f980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd7ab7fb10"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7ab7fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd7ab7e220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd7ab7e3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd7ab7e540"/>
        <function-ref name="tx" scoped="" ref="0x7efd7ab7e6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd7ab7e860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd7ab7e9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd7ab7eb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd7ab7ed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd7ab7d020"/>
        <function-ref name="rx" scoped="" ref="0x7efd7ab7d1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd7ab7d340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd7ab7d4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd7ab7d660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd7ab7d7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd7ab7d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7efd7ab535b0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7efd7ab535b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efd7ab53930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efd7ab53ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efd7ab53c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efd7ab53de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efd7ab7a020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efd7ab7a1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efd7ab7a340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efd7ab7a4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7ab7a660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efd7ab7a7f0"/>
        <function-ref name="getData" scoped="" ref="0x7efd7ab7a980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efd7ab7ab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efd7ab7aca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efd7ab79020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efd7ab791b0"/>
        <function-ref name="getIV" scoped="" ref="0x7efd7ab79340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efd7ab794d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efd7ab79660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efd7ab797f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efd7ab79980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efd7ab79b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efd7ab79ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efd7ab79e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efd7ab52020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efd7ab521b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efd7ab52540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efd7ab526d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efd7ab52860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efd7ab529f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efd7ab52b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efd7ab52d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efd7ab51020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efd7ab511b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efd7ab51340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efd7ab514d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efd7ab51660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efd7ab517f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efd7ab51980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efd7ab51b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efd7ab51ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efd7ab51e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efd7ab50020"/>
        <function-ref name="setData" scoped="" ref="0x7efd7ab501b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efd7ab50340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efd7ab504d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efd7ab50660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efd7ab507f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efd7ab50980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efd7ab50b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efd7ab4f420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efd7ab4f5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efd7ab4f740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efd7ab4f8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efd7ab4fa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efd7ab4fbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efd7ab4fd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efd7ab4e020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efd7ab4e1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efd7ab4e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efd7ab4c670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efd7ab4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7ab4c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7ab4cb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7ab4cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7ab4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7ab4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7ab4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7ab4b4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ab4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7ab4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7ab4b980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ab4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7ab4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7ab4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7ab4a120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7ab4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efd7ab7c750" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7ab7c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7ab7cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efd7ab4e700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efd7ab4e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7ab4ea80"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7ab4ec10"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7ab4eda0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7ab4d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7ab4d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7ab4d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7ab4d4d0"/>
        <function-ref name="get" scoped="" ref="0x7efd7ab4d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7ab4d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7ab4d980"/>
        <function-ref name="set" scoped="" ref="0x7efd7ab4db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7ab4dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7ab4de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7ab4c120"/>
        <function-ref name="clr" scoped="" ref="0x7efd7ab4c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd7915b2c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7915b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd7915b640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd7915b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7efd79152440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efd79152440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd791527c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd7914b760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7914b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd7914bae0"/>
        <function-ref name="configure" scoped="" ref="0x7efd7914bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7efd79152a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efd79152a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efd79152dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efd79151020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efd791511b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efd79151340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efd791514d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efd79151660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efd791517f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efd79151980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd79151b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efd79151ca0"/>
        <function-ref name="getData" scoped="" ref="0x7efd79151e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efd79150020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efd791501b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efd79150440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efd791505d0"/>
        <function-ref name="getIV" scoped="" ref="0x7efd79150760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efd791508f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efd79150a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efd79150c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efd79150da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efd7914f020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efd7914f1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efd7914f340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efd7914f4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efd7914f660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efd7914f9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efd7914fb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efd7914fd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efd7914e020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efd7914e1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efd7914e340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efd7914e4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efd7914e660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efd7914e7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efd7914e980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efd7914eb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efd7914eca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efd7914ee30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efd7914d020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efd7914d1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efd7914d340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efd7914d4d0"/>
        <function-ref name="setData" scoped="" ref="0x7efd7914d660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efd7914d7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efd7914d980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efd7914db10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efd7914dca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efd7914de30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efd7914c020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efd7914c5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efd7914c740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efd7914c8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efd7914ca60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efd7914cbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efd7914cd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efd7914b020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efd7914b1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efd7914b340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efd7914b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efd79155c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd79155c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79152020"/>
        <function-ref name="txDone" scoped="" ref="0x7efd791521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7915c640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7915c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7915c9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7915cb50"/>
        <function-ref name="request" scoped="" ref="0x7efd7915cce0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7915ce70"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7915b030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efd791592b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd791592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd79159630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd791597c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd79159950"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd79159ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd79159c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd79159e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd79158020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd791581b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd79158340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd791584d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd79158660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd791587f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd79158980"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd79158c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd79158da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd79157020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd791571b0"/>
        <function-ref name="isUart" scoped="" ref="0x7efd79157340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd791574d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd79157660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd791577f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd79157980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd79157b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd79157ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd79157e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd79156220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd791563b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd79156540"/>
        <function-ref name="tx" scoped="" ref="0x7efd791566d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd79156860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd791569f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd79156b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd79156d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd79155020"/>
        <function-ref name="rx" scoped="" ref="0x7efd791551b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd79155340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd791554d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd79155660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd791557f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd79155980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd7915ba60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7915ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd7915bde0"/>
        <function-ref name="userId" scoped="" ref="0x7efd79159020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd7aaa28a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7aaa28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd7aaa2c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd7aaa2db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd7aaa0020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7aaa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd7aaa03a0"/>
        <function-ref name="configure" scoped="" ref="0x7efd7aaa0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efd7aaa8a80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efd7aaa8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7aaa8e00"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7aaa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7aaa35c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7aaa35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7aaa3940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7aaa3ad0"/>
        <function-ref name="request" scoped="" ref="0x7efd7aaa3c60"/>
        <function-ref name="granted" scoped="" ref="0x7efd7aaa3df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7aaa2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efd7aaa59a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7aaa59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7aaa5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd7aaa1130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aaa1130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd7aaa14b0"/>
        <function-ref name="userId" scoped="" ref="0x7efd7aaa1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efd7aa8b4b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aa8b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd7aa8b830"/>
        <function-ref name="userId" scoped="" ref="0x7efd7aa8b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efd7aa9e5c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efd7aa9e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7aa9e960"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7aa9eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efd7aa8ce70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efd7aa8ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7aa8b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efd7aa8c020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd7aa8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7aa8c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efd7aa8c690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efd7aa8c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd7aa8ca10"/>
        <function-ref name="txDone" scoped="" ref="0x7efd7aa8cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd7aa11bf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd7aa11bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd7aa10020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd7aa101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd7aa0f930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd7aa0f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd7aa0fcd0"/>
        <function-ref name="configure" scoped="" ref="0x7efd7aa0fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efd7aa10400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd7aa10400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7aa10780"/>
        <function-ref name="requested" scoped="" ref="0x7efd7aa10910"/>
        <function-ref name="granted" scoped="" ref="0x7efd7aa10aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7aa10c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd7aa10dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7aa12e60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7aa12e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7aa11230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7aa113c0"/>
        <function-ref name="request" scoped="" ref="0x7efd7aa11550"/>
        <function-ref name="granted" scoped="" ref="0x7efd7aa116e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7aa11870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd7aa0f060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd7aa0f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd7aa0f3e0"/>
        <function-ref name="userId" scoped="" ref="0x7efd7aa0f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd790df140" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd790df140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd790df4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efd790df750" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efd790df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efd790dfad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efd790dfc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efd790dfdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd790dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd790db850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd790db850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd790dbbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd790dbd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd790d9590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd790d9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd790d9930"/>
        <function-ref name="configure" scoped="" ref="0x7efd790d9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efd790d9d50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd790d9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efd790d8100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efd790d8290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efd790d8420"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd790d85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efd790da020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd790da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd790da3a0"/>
        <function-ref name="requested" scoped="" ref="0x7efd790da530"/>
        <function-ref name="granted" scoped="" ref="0x7efd790da6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd790da850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd790da9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd790d8800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd790d8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd790d8b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd790d8d10"/>
        <function-ref name="led1On" scoped="" ref="0x7efd790d7020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd790d71b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd790d7340"/>
        <function-ref name="get" scoped="" ref="0x7efd790d74d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd790d7660"/>
        <function-ref name="led0On" scoped="" ref="0x7efd790d7ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd790d7980"/>
        <function-ref name="led2On" scoped="" ref="0x7efd790d77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd790d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd790dc970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd790dc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd790dcd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd790db020"/>
        <function-ref name="request" scoped="" ref="0x7efd790db1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efd790db340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd790db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd790dac30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd790dac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd790d9020"/>
        <function-ref name="userId" scoped="" ref="0x7efd790d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efd790d6020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efd790d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd790d63a0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd790d6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7efd7aa07880" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efd7aa07880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efd7aa07c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efd7aa07d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efd7aa04020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efd7aa041b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efd7aa04340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efd7aa044d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efd7aa04660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efd7aa047f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7aa04980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efd7aa04b10"/>
        <function-ref name="getData" scoped="" ref="0x7efd7aa04ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efd7aa04e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efd7aa03020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efd7aa032b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efd7aa03440"/>
        <function-ref name="getIV" scoped="" ref="0x7efd7aa035d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efd7aa03760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efd7aa038f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efd7aa03a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efd7aa03c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efd7aa03da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efd7aa02020"/>
        <function-ref name="isI2C" scoped="" ref="0x7efd7aa021b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efd7aa02340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efd7aa024d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efd7aa02860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efd7aa029f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efd7aa02b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efd7aa02d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efd7aa01020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efd7aa011b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efd7aa01340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efd7aa014d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efd7aa01660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efd7aa017f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efd7aa01980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efd7aa01b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efd7aa01ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efd7aa01e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efd7aa00020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efd7aa001b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efd7aa00340"/>
        <function-ref name="setData" scoped="" ref="0x7efd7aa004d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efd7aa00660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efd7aa007f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efd7aa00980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efd7aa00b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efd7aa00ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efd7aa00e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efd7a9ff420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efd7a9ff5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efd7a9ff740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efd7a9ff8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efd7a9ffa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efd7a9ffbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efd7a9ffd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efd7a9fe020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efd7a9fe1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efd7a9fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7efd7a9f4250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7efd7a9f4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd7a9f45d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd7a9f4760"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd7a9f48f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd7a9f4a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd7a9f4c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd7a9f4da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd7a9f3020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd7a9f31b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd7a9f3340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd7a9f34d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd7a9f3660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd7a9f37f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd7a9f3980"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd7a9f3c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd7a9f3da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd7a9f2020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd7a9f21b0"/>
        <function-ref name="isUart" scoped="" ref="0x7efd7a9f2340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd7a9f24d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd7a9f2660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd7a9f27f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd7a9f2980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd7a9f2b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd7a9f2ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd7a9f2e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd7a9f1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd7a9f13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd7a9f1540"/>
        <function-ref name="tx" scoped="" ref="0x7efd7a9f16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd7a9f1860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd7a9f19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd7a9f1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd7a9f1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd7a9f0020"/>
        <function-ref name="rx" scoped="" ref="0x7efd7a9f01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd7a9f0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd7a9f04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd7a9f0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd7a9f07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd7a9f0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efd7a9eecb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efd7a9eecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a9ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a9ed230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7a9ed3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a9ed550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a9ed6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7a9ed870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a9eda00"/>
        <function-ref name="get" scoped="" ref="0x7efd7a9edb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7a9edd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7a9ec020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a9ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7a9ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7a9ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7a9ec760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a9ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7efd7a9fb430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7efd7a9fb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efd7a9fb7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efd7a9fb940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efd7a9fbad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efd7a9fbc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efd7a9fbdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efd7a9fa020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efd7a9fa1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efd7a9fa340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efd7a9fa4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efd7a9fa660"/>
        <function-ref name="getData" scoped="" ref="0x7efd7a9fa7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efd7a9fa980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efd7a9fab10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efd7a9fada0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efd7a9f9020"/>
        <function-ref name="getIV" scoped="" ref="0x7efd7a9f91b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efd7a9f9340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efd7a9f94d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efd7a9f9660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efd7a9f97f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efd7a9f9980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efd7a9f9b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7efd7a9f9ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efd7a9f9e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efd7a9f8020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efd7a9f83b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efd7a9f8540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efd7a9f86d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efd7a9f8860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efd7a9f89f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efd7a9f8b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efd7a9f8d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efd7a9f7020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efd7a9f71b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efd7a9f7340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efd7a9f74d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efd7a9f7660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efd7a9f77f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efd7a9f7980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efd7a9f7b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efd7a9f7ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efd7a9f7e30"/>
        <function-ref name="setData" scoped="" ref="0x7efd7a9f6020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efd7a9f61b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efd7a9f6340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efd7a9f64d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efd7a9f6660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efd7a9f67f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efd7a9f6980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efd7a9f5020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efd7a9f51b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efd7a9f5340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efd7a9f54d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efd7a9f5660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efd7a9f57f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efd7a9f5980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efd7a9f5b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efd7a9f5ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efd7a9f5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efd7a9f0d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efd7a9f0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a9ef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a9ef270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd7a9ef400"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a9ef590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a9ef720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd7a9ef8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a9efa40"/>
        <function-ref name="get" scoped="" ref="0x7efd7a9efbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd7a9efd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd7a9ee020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a9ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd7a9ee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd7a9ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd7a9ee760"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a9ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efd7a8d9c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a8d9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d8210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efd7a8e4da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efd7a8e4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efd7a8ddb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a8ddb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8db020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efd7a8d7670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a8d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d79f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efd7a8d0e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efd7a8d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ce210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efd7a8d7e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efd7a8d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d6210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efd7a8c32f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a8c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c3670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efd7a8c52f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a8c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c5670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efd7a8e1120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a8e1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efd7a8cb670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efd7a8cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cb9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efd7a8c62f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a8c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c6670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efd7a8dbc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efd7a8dbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8da020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efd7a8dac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a8dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d9020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efd7a8d1670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a8d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d19f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efd7a8d3e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efd7a8d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d2210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efd7a8d6670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a8d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d69f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7a8e5760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a8e5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7a8e5ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7a8e5c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7a8e5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efd7a8e0aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a8e0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efd7a8df120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efd7a8df120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8df5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efd7a8caa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a8caa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cadf0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efd7a8df870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a8df870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8dfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efd7a8c6ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a8c6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c6e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efd7a8e1dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a8e1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efd7a8cce50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efd7a8cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cb210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efd7a8da480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a8da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8da800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efd7a8db480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a8db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8db800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8db990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efd7a8e4750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a8e4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efd7a8cde50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a8cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cc210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efd7a8ce670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efd7a8ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efd7a8cc670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a8cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efd7a8c4ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a8c4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c4e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efd7a8c5ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a8c5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c5e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efd7a8d2670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efd7a8d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d29f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efd7a8cee50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efd7a8cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cd210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efd7a8c8ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a8c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c8e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efd7a8d4670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a8d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d49f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efd7a8c3ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a8c3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a8c3e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a8c2020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a8c2340"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a8c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efd7a8e4100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a8e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efd7a8dd370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efd7a8dd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8dd6f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8dd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efd7a8d9480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a8d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d9800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efd7a8d1e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a8d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d0210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efd7a8d6e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a8d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d4210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efd7a8d0670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a8d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d09f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efd7a8d8670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a8d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d89f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efd7a8e3450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efd7a8e3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efd7a8d8e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a8d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d7210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7a8e6a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a8e6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a8e6e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a8e5020"/>
        <function-ref name="request" scoped="" ref="0x7efd7a8e51b0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a8e5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a8e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efd7a8de020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a8de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efd7a8decc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efd7a8decc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8dd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efd7a8c82f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efd7a8c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c8670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efd7a8c9ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a8c9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c9e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efd7a8e0450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a8e0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efd7a8c92f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a8c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c9670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efd7a8c42f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efd7a8c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8c4670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efd7a8d2e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a8d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d1210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efd7a8cd670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efd7a8cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efd7a8e3aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efd7a8e3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efd7a8e1770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a8e1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8e1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efd7a8d4e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a8d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d3210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efd7a8de670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efd7a8de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8de9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efd7a8d3670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efd7a8d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8d39f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efd7a8cbe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efd7a8cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ca610"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ca7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efd7a8c27a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a8c27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a8c2b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a8c2cb0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8c2e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a8c1020"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a8c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efd7a8adc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a8adc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ab210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efd7a8b7da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efd7a8b7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efd7a8b0b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a8b0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8af020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efd7a8aa670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a8aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8aa9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efd7a8a3e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efd7a8a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a2210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efd7a8aae50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efd7a8aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a9210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efd7a8962f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a8962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a896670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a896800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efd7a8992f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a8992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a899670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a899800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efd7a8b5120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a8b5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efd7a89e670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efd7a89e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89e9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efd7a89a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a89a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89a670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efd7a8afc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efd7a8afc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ae020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efd7a8aec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a8aec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ad020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efd7a8a4670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a8a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a49f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efd7a8a7e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efd7a8a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a5210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efd7a8a9670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a8a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a99f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7a8b8760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a8b8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7a8b8ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7a8b8c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7a8b8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efd7a8b4aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a8b4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efd7a8b2120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efd7a8b2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efd7a89da70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a89da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89ddf0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efd7a8b2870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a8b2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efd7a89aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a89aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89ae50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a899020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efd7a8b5dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a8b5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efd7a8a0e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efd7a8a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89e210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efd7a8ae480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a8ae480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ae800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ae990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efd7a8af480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a8af480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8af800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8af990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efd7a8b7750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a8b7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efd7a8a1e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a8a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a0210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efd7a8a2670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efd7a8a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a29f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efd7a8a0670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a8a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a09f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efd7a897ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a897ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a897e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a896020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efd7a899ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a899ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a899e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a897020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efd7a8a5670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efd7a8a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a59f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efd7a8a2e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efd7a8a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a1210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efd7a89bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a89bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89be50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efd7a8a8670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a8a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a89f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efd7a896ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a896ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a896e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a895020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8951b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a895340"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a8954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efd7a8b7100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a8b7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efd7a8b0370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efd7a8b0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8b06f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8b0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efd7a8ad480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a8ad480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ad800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efd7a8a4e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a8a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a3210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efd7a8a9e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a8a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a8210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efd7a8a3670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a8a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a39f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efd7a8ab670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a8ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8ab9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efd7a8b6450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efd7a8b6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efd7a8abe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a8abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8aa210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7a8ba9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a8ba9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a8bad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a8b8020"/>
        <function-ref name="request" scoped="" ref="0x7efd7a8b81b0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a8b8340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a8b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efd7a8b1020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a8b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efd7a8b1cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efd7a8b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efd7a89b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efd7a89b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89b670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efd7a89cad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a89cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89ce50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efd7a8b4450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a8b4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efd7a89c2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a89c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89c670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efd7a8972f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efd7a8972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a897670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a897800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efd7a8a5e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a8a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a4210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efd7a8a1670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efd7a8a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a19f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efd7a8b6aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efd7a8b6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efd7a8b5770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a8b5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efd7a8a8e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a8a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a7210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efd7a8b1670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efd7a8b1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a8b19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efd7a8a7670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efd7a8a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a8a79f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a8a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efd7a89ee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efd7a89ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a89d610"/>
        <function-ref name="write" scoped="" ref="0x7efd7a89d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efd7a8957a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a8957a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a895b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a895cb0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a895e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a894020"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a8941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7efd7a88db20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efd7a88db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efd7a88a020"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a88a1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7efd7a88a340"/>
        <function-ref name="setAddress" scoped="" ref="0x7efd7a88a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7efd7a868020" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7efd7a868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7efd7a8683a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7efd7a868530"/>
        <function-ref name="startDAO" scoped="" ref="0x7efd7a8686c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7efd7a867020" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7efd7a867020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a8673a0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a867530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a86d6f0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a86d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a86da70"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a86dc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7efd7a79a270" loc="57:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7efd7a79a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7efd7a79a5f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7efd7a79a780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7efd7a79a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7efd7a79f0f0" loc="55:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7efd7a79f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a79c260"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a79d660"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a79fce0"/>
        <function-ref name="put" scoped="" ref="0x7efd7a79dae0"/>
        <function-ref name="size" scoped="" ref="0x7efd7a79d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7efd7a7a7bb0" loc="52:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7efd7a7a7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a7a5020"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a7a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efd7a7a7410" loc="51:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7a7a7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7a7a7790"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7a7a7920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7efd7a7972f0" loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7efd7a7972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a797670"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a797800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7efd7a7b2ae0" loc="49:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7efd7a7b2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a7ad110"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a7af5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a7ae4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a7ae020"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a7ada10"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a7ad590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a7afa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a7b1750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a7aeab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a7b1c20"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a7af130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7efd7a7a45a0" loc="54:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7efd7a7a45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7efd7a7a24a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7efd7a7a0260"/>
        <function-ref name="element" scoped="" ref="0x7efd7a7a08d0"/>
        <function-ref name="full" scoped="" ref="0x7efd7a7a3680"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a7a2020"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd7a7a2b50"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a7a3200"/>
        <function-ref name="size" scoped="" ref="0x7efd7a7a3b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7a7a5400" loc="53:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7a7a5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7a7a5780"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a7a5910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7a7a5aa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7a7a5c30"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7a7a5dc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7a7a4020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7a7a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7efd7a797ad0" loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7efd7a797ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a797e50"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a796020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7efd7a7b84b0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7efd7a7b84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7efd7a7b8830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7efd7a7b89c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7efd7a7b8b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7efd7a7b7720" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7efd7a7b7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a7b3c40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a7b41e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a7b3020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a7b4ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a7b2590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a7b2110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a7b4660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a7b6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a7b3630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a7b6860"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a7b6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7efd7a7ac020" loc="50:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7efd7a7ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a7a8630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a7aaa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a7a9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a7a94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a7a7020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a7a8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a7a9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a7acc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a7a8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a7aa110"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a7aa5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7efd7a79c980" loc="56:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7efd7a79c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7efd7a79cd00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7efd7a79be30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7efd7a79a020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7efd7a79b340"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd7a79b4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7efd7a79b660"/>
        <function-ref name="getRank" scoped="" ref="0x7efd7a79b7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7efd7a79b980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7efd7a79bb10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7efd7a79bca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd7a79b020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7efd7a79b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7efd7a79ab60" loc="58:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7efd7a79ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7efd7a799020"/>
        <function-ref name="delTLV" scoped="" ref="0x7efd7a7991b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7efd7a799340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7efd7a799590" loc="59:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a799590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7efd7a799910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7efd7a799aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7efd7a799c30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7efd7a799dc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7efd7a797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a7b8da0" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a7b8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a7b7180"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a7b7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7a792bd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7a792bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a78d110"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a7906a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a78f4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a78f020"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a78da10"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a78d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a790b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a791860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a78fab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a791d30"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a790220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7a78b560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7a78b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a787a20"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a789020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a789da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a789920"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a7864a0"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a786020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a7894a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a78a1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a787410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a78a680"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a78ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7a784020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7a784020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a780630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a783a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a782920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a7824a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a77f020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a780ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a782020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a784c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a780020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a783110"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a7835e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a77b510" loc="31:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a77b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a77b890"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a77ba20"/>
        <function-ref name="start" scoped="" ref="0x7efd7a77bbb0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a77bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7efd7a7766e0" loc="36:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7a7766e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7efd7a776a60"/>
        <function-ref name="initiate" scoped="" ref="0x7efd7a776bf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7efd7a776d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7efd7a774930" loc="35:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7efd7a774930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7efd7a774cb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7efd7a774e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7efd7a77ad40" loc="33:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7efd7a77ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a7790e0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a779270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7efd7a7759d0" loc="41:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7efd7a7759d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a775d50"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a773020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7efd7a779560" loc="34:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a779560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7efd7a7798e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7efd7a779a70"/>
        <function-ref name="delRoute" scoped="" ref="0x7efd7a779c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7efd7a779d90"/>
        <function-ref name="addRoute" scoped="" ref="0x7efd7a778020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7efd7a775130" loc="40:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a775130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a7754b0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a775640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a77a540" loc="32:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a77a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a77a8c0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a77aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7a770a10" loc="17:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7a770a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7a770d90"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a76f020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7a76f1b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7a76f340"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7a76f4d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7a76f660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7a76f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7a76ebf0" loc="20:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a76ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a76d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a76d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a76d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a76d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a76d660"/>
        <function-ref name="get" scoped="" ref="0x7efd7a76d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a76d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a76c020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a76db10"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a76dca0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a76de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7efd7a76fae0" loc="18:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7efd7a76fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a76fe60"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a76e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7efd7a76e2d0" loc="19:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7efd7a76e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7efd7a76e650"/>
        <function-ref name="delTLV" scoped="" ref="0x7efd7a76e7e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7efd7a76e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a7701d0" loc="14:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a7701d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a770550"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a7706e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7efd7a755890" loc="22:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7efd7a755890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7efd7a755c10"/>
        <function-ref name="initiate" scoped="" ref="0x7efd7a755da0"/>
        <function-ref name="linkResult" scoped="" ref="0x7efd7a754020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7efd7a7511d0" loc="28:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7efd7a7511d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a751550"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a7516e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a751870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7efd7a74b790" loc="31:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd7a74b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7efd7b80e110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a748860"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a74acb0"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a74a3b0"/>
        <function-ref name="put" scoped="" ref="0x7efd7a748170"/>
        <function-ref name="size" scoped="" ref="0x7efd7a74a830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7efd7a733e40" loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7efd7a733e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a7311e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a731370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7efd7a756a50" loc="21:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7efd7a756a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7efd7a756dd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7efd7a755020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7efd7a754a90" loc="24:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7efd7a754a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a754e10"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a752020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7a7522a0" loc="25:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7a7522a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7a752620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7a751b20" loc="29:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7a751b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7a750020"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a7501b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7a750340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7a7504d0"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7a750660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7a7507f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7a750980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7efd7a7471c0" loc="34:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7efd7a7471c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a743630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a746c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a7449d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a744550"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a742020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a743ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a7440d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a747db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a743020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a7462e0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a7467b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7efd7a771d20" loc="20:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a771d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7efd7a7560e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7efd7a756270"/>
        <function-ref name="delRoute" scoped="" ref="0x7efd7a756400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7efd7a756590"/>
        <function-ref name="addRoute" scoped="" ref="0x7efd7a756720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7efd7a750c30" loc="30:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7efd7a750c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7efd7a74b020"/>
        <function-ref name="delTLV" scoped="" ref="0x7efd7a74b1b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7efd7a74b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a754290" loc="23:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a754290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a754610"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a7547a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7efd7a6c4020" loc="11:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7efd7a6c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6c43a0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6c4530"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a6c46c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7efd7a6bd720" loc="15:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7efd7a6bd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6bdaa0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6bdc30"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a6bddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7efd7a6c5020" loc="10:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7efd7a6c5d00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7efd7a6c5530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7efd7a6c56c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7efd7a6c5850"/>
        <function-ref name="matchContext" scoped="" ref="0x7efd7a6c59e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7efd7a6c53a0"/>
        <function-ref name="getContext" scoped="" ref="0x7efd7a6c5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a6c4980" loc="12:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a6c4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a6c4d00"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a6c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7efd7a6c2da0" loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7efd7a6c2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6ba180"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6ba310"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a6ba4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7efd7a6ad300" loc="45:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7efd7a6ad300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7efd7a6ad780"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a6ad910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7a6adaa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7a6adc30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7a6addc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efd7a6b0450" loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7a6b0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7a6b07d0"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7a6b0960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7efd7a6af900" loc="43:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7efd7a6af900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6afc80"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6afe10"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a6ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7efd7a6b70a0" loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7efd7a6b70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6b7420"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6b75b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7a6ae2d0" loc="44:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7a6ae2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7a6ae650"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a6ae7e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7a6ae970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7a6aeb00"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7a6aec90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7a6aee20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7a6ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7efd7a6b8060" loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7efd7a6b8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6b83e0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6b8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7efd7a6ba7a0" loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a6ba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7efd7a6b94d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7efd7a6bacb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7efd7a6bae40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7efd7a6b9020"/>
        <function-ref name="matchContext" scoped="" ref="0x7efd7a6b91b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7efd7a6bab20"/>
        <function-ref name="getContext" scoped="" ref="0x7efd7a6b9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7efd7a6b78a0" loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7efd7a6b78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6b7c20"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6b7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7efd7a6b8860" loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7efd7a6b8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a6b8be0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a6b8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7efd7a6b5270" loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7efd7a6b5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a6b26e0"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a6b4cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a6b3a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a6b35f0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a6b0020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a6b2b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a6b3170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a6b5e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a6b20d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a6b4360"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a6b4830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7efd7a6b0c50" loc="42:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7efd7a6b0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7efd7a6af020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7efd7a6af1b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7efd7a6af340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7efd7a6af4d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7efd7a6af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7efd7a67a380" loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7efd7a67a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a67a700"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a67a890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a6b9790" loc="30:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a6b9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a6b9b10"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a6b9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a61fa30" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a61fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a61fdd0"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a5e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7efd7a619280" loc="50:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7efd7a619280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a619600"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a619790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd7a6182d0" loc="54:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd7a6182d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd7a618650"/>
        <function-ref name="changed" scoped="" ref="0x7efd7a6187e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd7a618970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd7a618b00"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7a618c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7a618e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7a617020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7a6172a0" loc="55:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a6172a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a617620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a6177b0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a617940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a617ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a617c60"/>
        <function-ref name="get" scoped="" ref="0x7efd7a617df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a616020"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a616660"/>
        <function-ref name="set" scoped="" ref="0x7efd7a6161b0"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a616340"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a6164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7efd7a619a80" loc="53:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a619a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a619e00"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a618020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7efd78fa69f0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7efd78fa69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78fa6d70"/>
        <function-ref name="recv" scoped="" ref="0x7efd78fa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd78fa61f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd78fa61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78fa6590"/>
        <function-ref name="recv" scoped="" ref="0x7efd78fa6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a5e89b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a5e89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a5e8d50"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a5e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7efd78f9b820" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7efd78f9b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78f9bba0"/>
        <function-ref name="recv" scoped="" ref="0x7efd78f9bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd78f9b020" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd78f9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78f9b3c0"/>
        <function-ref name="recv" scoped="" ref="0x7efd78f9b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a5e69b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a5e69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a5e6d50"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a5e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7efd78f90020" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7efd78f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78f903a0"/>
        <function-ref name="recv" scoped="" ref="0x7efd78f90530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd78f916a0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd78f916a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78f91a40"/>
        <function-ref name="recv" scoped="" ref="0x7efd78f91bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7a5e49b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7a5e49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a5e4d50"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a5e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7efd78f865e0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7efd78f865e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78f86960"/>
        <function-ref name="recv" scoped="" ref="0x7efd78f86af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd78f88db0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd78f88db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78f86180"/>
        <function-ref name="recv" scoped="" ref="0x7efd78f86310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7a5e17b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7a5e17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a5dec40"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a5df260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a5de020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a5dfb60"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a5dc590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a5dc110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a5df6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a5e0400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a5de630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a5e08d0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a5e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a5ca020" loc="35:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a5ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a5ca3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a5ca530"/>
        <function-ref name="start" scoped="" ref="0x7efd7a5ca6c0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a5ca850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7efd7a5c8020" loc="37:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7efd7a5c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7efd7a5d08c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7efd7a5cf090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7a5c7170"/>
        <function-ref name="get" scoped="" ref="0x7efd7a5c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7efd7a5caaf0" loc="36:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7efd7a5caaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a5cae70"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a5c9030"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a5c91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7a5c2230" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7a5c2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7a5c25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efd7a5c2870" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a5c2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a5c2bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a5c2d80"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a5c1020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a5c11b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a5c1340"/>
        <function-ref name="get" scoped="" ref="0x7efd7a5c14d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a5c1660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a5c1ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a5c17f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a5c1980"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a5c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a5a96d0" loc="43:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a5a96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a5a9a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a5a9be0"/>
        <function-ref name="start" scoped="" ref="0x7efd7a5a9d70"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a5a8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7efd7a5835f0" loc="68:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7efd7a5835f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a581710"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a582b10"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a582210"/>
        <function-ref name="put" scoped="" ref="0x7efd7a581020"/>
        <function-ref name="size" scoped="" ref="0x7efd7a582690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7efd7a5a7940" loc="49:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7efd7a5a7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7efd7a5d08c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7efd7a5cf090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7a5a5a70"/>
        <function-ref name="get" scoped="" ref="0x7efd7a5a5560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7efd7a5a4060" loc="53:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7efd7a5a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a5a43e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a5a4570"/>
        <function-ref name="start" scoped="" ref="0x7efd7a5a4700"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a5a4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7efd7a5a8d60" loc="47:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7efd7a5a8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a5a7180"/>
        <function-ref name="recv" scoped="" ref="0x7efd7a5a7310"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a5a74a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7efd7a597020" loc="62:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7efd7a597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7efd7a5973a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7efd7a597530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7efd7a587cb0" loc="64:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efd7a587cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efd7a5930a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efd7a593230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efd7a5933c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efd7a593550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7a5a8720" loc="44:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7a5a8720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7a5a8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7efd7a57dc50" loc="70:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7efd7a57dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7efd7a57aae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7efd7a579880"/>
        <function-ref name="element" scoped="" ref="0x7efd7a577020"/>
        <function-ref name="full" scoped="" ref="0x7efd7a57bce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a57a660"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd7a5791d0"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a57b860"/>
        <function-ref name="size" scoped="" ref="0x7efd7a57a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7efd7a577900" loc="73:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7efd7a577900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a573e80"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a5754a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a573260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a575da0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a5727a0"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a572320"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a575920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a576560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a573870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a576a30"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a575020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7efd7a2fa6e0" loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7efd7a2fa6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a2faa60"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a2fabf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7efd7a5a14e0" loc="60:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7a5a14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7efd7a598340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7efd7a5a19f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7efd7a5a1b80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7efd7a5a1d10"/>
        <function-ref name="matchContext" scoped="" ref="0x7efd7a598020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7efd7a5a1860"/>
        <function-ref name="getContext" scoped="" ref="0x7efd7a5981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7efd7a593a10" loc="67:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7efd7a593a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
            <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a585c00"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a585090"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a58c750"/>
        <function-ref name="put" scoped="" ref="0x7efd7a585510"/>
        <function-ref name="size" scoped="" ref="0x7efd7a58cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7a572bc0" loc="75:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a572bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a571020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a5711b0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a571340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a5714d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a571660"/>
        <function-ref name="get" scoped="" ref="0x7efd7a5717f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a571980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a570020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a571b10"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a571ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a571e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7efd7a5a20f0" loc="56:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7efd7a5a20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a5a2470"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a5a2600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a5a2790"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a5a2920"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a5a2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7efd7a5a4bd0" loc="55:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efd7a5a4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7a5a3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd7a5a31b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a5a3340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a5a34d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd7a5a3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7efd7a596020" loc="63:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efd7a596020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efd7a5963a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efd7a596530"/>
        <function-ref name="getRetries" scoped="" ref="0x7efd7a5966c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efd7a596850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efd7a5969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7efd7a57f150" loc="69:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7efd7a57f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a57d260"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd7a57e660"/>
        <function-ref name="empty" scoped="" ref="0x7efd7a57fd40"/>
        <function-ref name="put" scoped="" ref="0x7efd7a57eae0"/>
        <function-ref name="size" scoped="" ref="0x7efd7a57e1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7efd7a5a2e20" loc="57:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7efd7a5a2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a5a11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a2cb420" loc="19:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2cb420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a2cb7a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a2cb930"/>
        <function-ref name="start" scoped="" ref="0x7efd7a2cbac0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a2cbc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efd7a2c7a30" loc="23:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efd7a2c7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a2c7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efd7a2c8020" loc="21:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efd7a2c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7a2c83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd7a2c8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2c86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a2c8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd7a2c89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efd7a2c8d00" loc="22:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efd7a2c8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a2c70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2c7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a2c73c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a2c7550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a2c76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a2c6b40" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2c6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a2c3020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a2c31b0"/>
        <function-ref name="start" scoped="" ref="0x7efd7a2c3340"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a2c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efd7a2aa170" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a2aa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efd7a2aa4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efd7a2b3470" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efd7a2b3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efd7a2b37f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efd7a2b3980"/>
        <function-ref name="getRetries" scoped="" ref="0x7efd7a2b3b10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efd7a2b3ca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efd7a2b3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efd7a2b4640" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a2b4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd7a2b49c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd7a2b4b50"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd7a2b4ce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd7a2b4e70"/>
        <function-ref name="getPower" scoped="" ref="0x7efd7a2bc030"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd7a2bc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efd7a2bfd10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efd7a2bfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a2be0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2be270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a2be400"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a2be590"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a2be720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efd7a2aa7f0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efd7a2aa7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efd7a2aab70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efd7a2aad00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efd7a2b3020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efd7a2b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efd7a2c0820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efd7a2c0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a2c0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efd7a2bb080" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd7a2bb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd7a2bb400"/>
        <function-ref name="noAck" scoped="" ref="0x7efd7a2bb590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd7a2bb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7a2c3d00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a2c3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a2c20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a2c2230"/>
        <function-ref name="request" scoped="" ref="0x7efd7a2c23c0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a2c2550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a2c26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efd7a2c2a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efd7a2c2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a2c2d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2c0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a2c01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a2c0340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a2c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efd7a2bf020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efd7a2bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7a2bf3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd7a2bf530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2bf6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a2bf850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd7a2bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efd7a2bea90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efd7a2bea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a2bee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a2aeb20" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2aeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a2a8020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a2a81b0"/>
        <function-ref name="start" scoped="" ref="0x7efd7a2a8340"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a2a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efd7a29d230" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a29d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efd7a29d5b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efd7a29d740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efd7a29d8d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efd7a29da60"/>
        <function-ref name="setCca" scoped="" ref="0x7efd7a29dbf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efd7a29dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd7a2a8790" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd7a2a8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a2a8b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2a8ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a2a8e30"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a2a7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a2a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd7a2a7490" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd7a2a7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a2a7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd7a2a6d90" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd7a2a6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7a29b180"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7a29b310"/>
        <function-ref name="start" scoped="" ref="0x7efd7a29b4a0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a29b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efd7a29a650" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a29a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efd7a29a9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efd7a29ab60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efd7a29acf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efd7a29ae80"/>
        <function-ref name="setCca" scoped="" ref="0x7efd7a299030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efd7a2991c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7efd7a296e00" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7efd7a296e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efd7a2951c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efd7a295350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efd7a2954e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efd7a295670"/>
        <function-ref name="setCca" scoped="" ref="0x7efd7a295800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efd7a295990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efd7a28cb00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a28cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd7a28ce80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd7a28b030"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd7a28b1c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd7a28b350"/>
        <function-ref name="getPower" scoped="" ref="0x7efd7a28b4e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd7a28b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7efd7a296080" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7efd7a296080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a296400"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a296590"/>
        <function-ref name="modify" scoped="" ref="0x7efd7a296720"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a2968b0"/>
        <function-ref name="resend" scoped="" ref="0x7efd7a296a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd7a29b8f0" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd7a29b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a29bc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a29be00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a29a020"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a29a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a29a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efd7a295c60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd7a295c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd7a28d020"/>
        <function-ref name="rand32" scoped="" ref="0x7efd7a28d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7efd7a2973e0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7efd7a2973e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a297760"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a2978f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd7a284130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a284130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a2844b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd7a284640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd7a2847d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7efd7a2981a0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efd7a2981a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efd7a298520"/>
        <function-ref name="rfOff" scoped="" ref="0x7efd7a2986b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7efd7a298840"/>
        <function-ref name="startVReg" scoped="" ref="0x7efd7a2989d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efd7a298b60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efd7a298cf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efd7a298e80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efd7a297030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7a28d470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a28d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a28d7f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a28d980"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a28db10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a28dca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a28de30"/>
        <function-ref name="get" scoped="" ref="0x7efd7a28c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a28c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a28c7f0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a28c340"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a28c4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a28c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efd7a2994b0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a2994b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a299830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a2999c0"/>
        <function-ref name="request" scoped="" ref="0x7efd7a299b50"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a299ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a299e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7efd7a284b90" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7efd7a284b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd7a28a0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd7a28a230"/>
        <function-ref name="isState" scoped="" ref="0x7efd7a28a3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd7a28a550"/>
        <function-ref name="requestState" scoped="" ref="0x7efd7a28a6e0"/>
        <function-ref name="forceState" scoped="" ref="0x7efd7a28a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7efd7a27f5d0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7efd7a27f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a27f950"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a27fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7efd7a281660" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7efd7a281660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a2819e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a281b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7efd7a282730" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7efd7a282730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a282ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a282c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efd7a234020" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a234020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efd7a2343a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efd7a234530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efd7a2346c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efd7a234850"/>
        <function-ref name="setCca" scoped="" ref="0x7efd7a2349e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efd7a234b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7efd7a233ca0" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7efd7a233ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efd7a2320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7efd7a235300" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7efd7a235300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a235680"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a235810"/>
        <function-ref name="modify" scoped="" ref="0x7efd7a2359a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a235b30"/>
        <function-ref name="resend" scoped="" ref="0x7efd7a235cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a2389b0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a2389b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a238d30"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7efd7a232470" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7efd7a232470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efd7a2327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efd7a227cf0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efd7a227cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efd7a2260a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efd7a226230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efd7a2263c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efd7a226550"/>
        <function-ref name="setCca" scoped="" ref="0x7efd7a2266e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efd7a226870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7efd7a21e200" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efd7a21e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efd7a21d7c0"/>
        <function-ref name="clear" scoped="" ref="0x7efd7a214020"/>
        <function-ref name="isValid" scoped="" ref="0x7efd7a21d090"/>
        <function-ref name="set" scoped="" ref="0x7efd7a214750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7efd7a201990" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a201990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a201d10"/>
        <function-ref name="write" scoped="" ref="0x7efd7a200020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7efd7a200380" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a200380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a200700"/>
        <function-ref name="write" scoped="" ref="0x7efd7a200890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7efd7a226c90" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7efd7a226c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efd7a2250a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7efd7a204e60" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a204e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a203210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7efd7a2121e0" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7efd7a2121e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efd7a212560"/>
        <function-ref name="disable" scoped="" ref="0x7efd7a2126f0"/>
        <function-ref name="captured" scoped="" ref="0x7efd7a212880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efd7a212a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7efd7a224020" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7efd7a224020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a221870"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a223840"/>
        <function-ref name="startAt" scoped="" ref="0x7efd7a221220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a223d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efd7a221d30"/>
        <function-ref name="start" scoped="" ref="0x7efd7a224e30"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a223380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efd7a220210" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a220210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd7a220590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd7a220720"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd7a2208b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd7a220a40"/>
        <function-ref name="getPower" scoped="" ref="0x7efd7a220bd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd7a220d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7efd7a206d80" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a206d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a205180"/>
        <function-ref name="write" scoped="" ref="0x7efd7a205310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7efd7a2056b0" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a2056b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a205a30"/>
        <function-ref name="write" scoped="" ref="0x7efd7a205bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7efd7a1f9780" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a1f9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a1f9b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efd7a1f9c90"/>
        <function-ref name="sfd" scoped="" ref="0x7efd7a1f9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd7a227020" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd7a227020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7a2273a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a227530"/>
        <function-ref name="modify" scoped="" ref="0x7efd7a2276c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd7a227850"/>
        <function-ref name="resend" scoped="" ref="0x7efd7a2279e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7efd7a2074e0" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a2074e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7a207860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7a2079f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7a207b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7efd7a2035c0" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a2035c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a203940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efd7a20e080" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efd7a20e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a20e400"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a20e590"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a20e720"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a20e8b0"/>
        <function-ref name="get" scoped="" ref="0x7efd7a20ea40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a20ebd0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a20ed60"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a209020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7a228020" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7a228020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7a2283a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd7a21f0c0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a21f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a21f440"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd7a21f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd7a21f760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7efd7a20b570" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a20b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a20b8f0"/>
        <function-ref name="isSet" scoped="" ref="0x7efd7a20ba80"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a20bc10"/>
        <function-ref name="set" scoped="" ref="0x7efd7a20bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7efd7a203d00" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a203d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a202410"/>
        <function-ref name="write" scoped="" ref="0x7efd7a2025a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efd7a2086e0" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efd7a2086e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a208a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a208bf0"/>
        <function-ref name="request" scoped="" ref="0x7efd7a208d80"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a207020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a2071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7efd7a212d60" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7efd7a212d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a211210"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a2113a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a211530"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a2116c0"/>
        <function-ref name="get" scoped="" ref="0x7efd7a211850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a2119e0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a211b70"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a211d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7efd7a200bf0" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a200bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1ff020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7efd7a1ff530" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a1ff530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1ff8b0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1ffa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7efd7a204020" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a204020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a2043a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7efd7a209370" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7efd7a209370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a2096f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a209880"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a209a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a209ba0"/>
        <function-ref name="get" scoped="" ref="0x7efd7a209d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a208020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a2081b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a208340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7a1fe110" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a1fe110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a1fe490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a1fe620"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a1fe7b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a1fe940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a1fead0"/>
        <function-ref name="get" scoped="" ref="0x7efd7a1fec60"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a1fedf0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a1fd4d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a1fd020"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a1fd1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a1fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7efd7a2010c0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a2010c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a201440"/>
        <function-ref name="write" scoped="" ref="0x7efd7a2015d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a2286a0" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a2286a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a228a20"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a228bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7efd7a206020" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a206020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a2063a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a206530"/>
        <function-ref name="write" scoped="" ref="0x7efd7a2066c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a206850"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a2069e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7efd7a204730" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efd7a204730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a204ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7efd7a202930" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efd7a202930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a202cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7efd7a2254b0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7efd7a2254b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efd7a225830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efd7a15dc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a15dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15c210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efd7a167020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efd7a167020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efd7a161c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a161c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15f020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efd7a15b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a15b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15b9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efd7a154e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efd7a154e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a152210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efd7a15be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efd7a15be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a159210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efd7a1472f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a1472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a147670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a147800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efd7a1492f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a1492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a149670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a149800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efd7a165370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a165370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1656f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efd7a14f670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efd7a14f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14f9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efd7a14a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a14a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14a670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efd7a15fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efd7a15fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15e020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efd7a15ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a15ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15d020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efd7a155670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a155670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1559f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a155b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efd7a157e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efd7a157e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a156210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efd7a159670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a159670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1599f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a159b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7a1698f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a1698f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7a169c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7a169e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7a168020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efd7a164d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a164d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1630a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efd7a163370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efd7a163370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efd7a14ea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a14ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14edf0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efd7a163ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a163ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a163e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efd7a14aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a14aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14ae50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efd7a164060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a164060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1643e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efd7a150e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efd7a150e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14f210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efd7a15e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a15e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15e800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efd7a15f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a15f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15f800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efd7a168940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a168940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a168cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efd7a151e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a151e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a150210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efd7a152670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efd7a152670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1529f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a152b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efd7a150670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a150670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1509f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a150b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efd7a148ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a148ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a148e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a147020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efd7a149ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a149ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a149e50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a148020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efd7a156670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efd7a156670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1569f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a156b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efd7a152e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efd7a152e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a151210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efd7a14bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a14bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14be50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efd7a158670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a158670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1589f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a158b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efd7a147ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a147ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a147e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a146020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1461b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a146340"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a1464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efd7a1682f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a1682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a168670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efd7a161490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efd7a161490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a161810"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1619a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efd7a15d480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a15d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15d800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efd7a155e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a155e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a154210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efd7a159e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a159e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a158210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efd7a154670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a154670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1549f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a154b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efd7a15c670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a15c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15c9f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efd7a167670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efd7a167670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1679f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efd7a15ce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a15ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a15b210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a15b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7a16ac30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a16ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a169020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a1691b0"/>
        <function-ref name="request" scoped="" ref="0x7efd7a169340"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a1694d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a169660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efd7a162160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a162160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1624e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efd7a162e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efd7a162e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1611c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efd7a14b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efd7a14b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14b670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efd7a14dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a14dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14de50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efd7a1646b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a1646b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a164a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efd7a14d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a14d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14d670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efd7a1482f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efd7a1482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a148670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a148800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efd7a156e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a156e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a155210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efd7a151670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efd7a151670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1519f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a151b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efd7a167cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efd7a167cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a1650a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efd7a1659c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a1659c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a165d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efd7a158e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a158e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a157210"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efd7a1627b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efd7a1627b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a162b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efd7a157670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efd7a157670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a1579f0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a157b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efd7a14fe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efd7a14fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a14e610"/>
        <function-ref name="write" scoped="" ref="0x7efd7a14e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efd7a1467a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a1467a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a146b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a146cb0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a146e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a145020"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a1451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7efd7a139df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a139df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a1361c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efd7a136350"/>
        <function-ref name="sfd" scoped="" ref="0x7efd7a1364e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd7a1367c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd7a1367c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a136b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7efd7a135020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7efd7a135020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efd7a1353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a1395c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a1395c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a139940"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a139ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7efd7a12e380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7efd7a12e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a12e700"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a12e890"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a12ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a12ebb0"/>
        <function-ref name="get" scoped="" ref="0x7efd7a12ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a12d020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a12d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a12d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7efd7a127b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efd7a127b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efd7a126020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efd7a1261b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efd7a126340"/>
        <function-ref name="syncDone" scoped="" ref="0x7efd7a1264d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efd7a126660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efd7a1267f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efd7a126980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efd7a126b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efd7a126ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efd7a126e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efd7a125020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efd7a1251b0"/>
        <function-ref name="sync" scoped="" ref="0x7efd7a125340"/>
        <function-ref name="getChannel" scoped="" ref="0x7efd7a1255d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efd7a125760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7efd7a10f9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7efd7a10f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd7a10fd50"/>
        <function-ref name="runTask" scoped="" ref="0x7efd7a10e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7efd7a125d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efd7a125d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efd7a122330"/>
        <function-ref name="clear" scoped="" ref="0x7efd7a122a60"/>
        <function-ref name="isValid" scoped="" ref="0x7efd7a123ba0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a121210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7efd7a12d6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7efd7a12d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a12da30"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a12dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a12dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a12c020"/>
        <function-ref name="get" scoped="" ref="0x7efd7a12c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a12c340"/>
        <function-ref name="set" scoped="" ref="0x7efd7a12c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a12c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7efd7a120cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a120cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a11e0a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a11e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7efd7a11e590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a11e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a11e910"/>
        <function-ref name="write" scoped="" ref="0x7efd7a11eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7efd7a11d6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a11d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a11da50"/>
        <function-ref name="write" scoped="" ref="0x7efd7a11dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efd7a128330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a128330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd7a1286b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd7a128840"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd7a1289d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd7a128b60"/>
        <function-ref name="getPower" scoped="" ref="0x7efd7a128cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd7a128e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7efd7a131550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efd7a131550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a1318d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efd7a131a60"/>
        <function-ref name="sfd" scoped="" ref="0x7efd7a131bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7efd7a1293a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efd7a1293a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a129720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efd7a12f020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efd7a12f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd7a12f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efd7a12f530"/>
        <function-ref name="toggle" scoped="" ref="0x7efd7a12f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd7a12f850"/>
        <function-ref name="get" scoped="" ref="0x7efd7a12f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd7a12fb70"/>
        <function-ref name="set" scoped="" ref="0x7efd7a12fd00"/>
        <function-ref name="clr" scoped="" ref="0x7efd7a12e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7efd7a11c020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a11c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a11c3a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a11c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7a132620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7a132620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7a1329a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd7a1271e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a1271e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a127560"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd7a1276f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd7a127880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd7a130020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd7a130020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd7a1303a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efd7a12b6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efd7a12b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a12ba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a12bbf0"/>
        <function-ref name="request" scoped="" ref="0x7efd7a12bd80"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a12a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a12a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7efd7a11ee00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a11ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a11d1c0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a11d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7efd7a12a530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a12a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a12a8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a12aa40"/>
        <function-ref name="write" scoped="" ref="0x7efd7a12abd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a12ad60"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a129020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7efd7a11c8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a11c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a11ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7efd7a1307c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7efd7a1307c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efd7a130b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd7a11b150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd7a11b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd7a11b4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd7a11b660"/>
        <function-ref name="led1On" scoped="" ref="0x7efd7a11b7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd7a11b980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd7a11bb10"/>
        <function-ref name="get" scoped="" ref="0x7efd7a11bca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd7a11be30"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd7a11a4d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a11a020"/>
        <function-ref name="led0On" scoped="" ref="0x7efd7a11a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd7a11a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7efd7a1203e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a1203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a120760"/>
        <function-ref name="write" scoped="" ref="0x7efd7a1208f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7efd7a121b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a121b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a120020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7efd7a12ca50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efd7a12ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd7a12cdd0"/>
        <function-ref name="disable" scoped="" ref="0x7efd7a12b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efd7a12b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efd7a12b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7efd7a129ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a129ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a128020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd7a132ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd7a132ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd7a1310a0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a131230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efd7a0afa70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a0afa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efd7a0afdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efd7a0b3670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd7a0b39f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd7a0b3b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd7a0b3d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd7a0b0020"/>
        <function-ref name="getPower" scoped="" ref="0x7efd7a0b01b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd7a0b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efd7a0ae550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efd7a0ae550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efd7a0adb00"/>
        <function-ref name="clear" scoped="" ref="0x7efd7a0ab2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7efd7a0ad3d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a0ab9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7efd7a0af0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0af0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a0af440"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd7a0af5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd7a0af760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7efd7a0a6480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a0a6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a0a6800"/>
        <function-ref name="isSet" scoped="" ref="0x7efd7a0a6990"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a0a6b20"/>
        <function-ref name="set" scoped="" ref="0x7efd7a0a6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efd7a0aa660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efd7a0aa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efd7a0a9ce0"/>
        <function-ref name="clear" scoped="" ref="0x7efd7a0a7460"/>
        <function-ref name="isValid" scoped="" ref="0x7efd7a0a95b0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a0a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efd7a0b06e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efd7a0b06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd7a0b0a60"/>
        <function-ref name="noAck" scoped="" ref="0x7efd7a0b0bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd7a0b0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efd7a09e020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efd7a09e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efd7a09e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efd7a0a5d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd7a0a5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd7a0a10e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd7a0a1270"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd7a0a1400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd7a0a1590"/>
        <function-ref name="getPower" scoped="" ref="0x7efd7a0a1720"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd7a0a18b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efd7a0954a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd7a0954a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd7a095820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd7a0959b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a095b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd7a095cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd7a095e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efd7a09ea80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efd7a09ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efd7a09c020"/>
        <function-ref name="clear" scoped="" ref="0x7efd7a09c750"/>
        <function-ref name="isValid" scoped="" ref="0x7efd7a09d8d0"/>
        <function-ref name="set" scoped="" ref="0x7efd7a09ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7efd7a0a0640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd7a0a0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd7a0a09c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd7a0a0b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd7a0a0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7efd7a0978b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efd7a0978b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a097c30"/>
        <function-ref name="isSet" scoped="" ref="0x7efd7a097dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd7a095020"/>
        <function-ref name="set" scoped="" ref="0x7efd7a0951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7efd7a0943b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7efd7a0943b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a093020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7efd7a0936e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7efd7a0936e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a0923d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efd7a09baf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efd7a09baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efd7a0980d0"/>
        <function-ref name="clear" scoped="" ref="0x7efd7a098800"/>
        <function-ref name="isValid" scoped="" ref="0x7efd7a099970"/>
        <function-ref name="set" scoped="" ref="0x7efd7a097020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efd7a0a1c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efd7a0a1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd7a0a0020"/>
        <function-ref name="noAck" scoped="" ref="0x7efd7a0a01b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd7a0a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efd7a044cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efd7a044cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a042980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efd7a041020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd7a041020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd7a041e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd7a040800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd7a040340"/>
        <function-ref name="overflow" scoped="" ref="0x7efd7a040cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd7a03d0b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd7a03d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd7a039630"/>
        <function-ref name="fired" scoped="" ref="0x7efd7a03bb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd7a03a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd7a03a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd7a038020"/>
        <function-ref name="gett0" scoped="" ref="0x7efd7a039ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd7a03a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd7a03dca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd7a039020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd7a03b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7efd7a03b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efd7a027620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efd7a027620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a027ba0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a027d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efd7a032940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efd7a032940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a032cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efd7a02b620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efd7a02b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a02b9a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a02bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efd7a025060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efd7a025060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0253e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a025570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efd7a01e840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efd7a01e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01ebc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efd7a025840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efd7a025840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a025bc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a025d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efd7a012c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efd7a012c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a011020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efd7a015c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efd7a015c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a013020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efd7a031cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efd7a031cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a0300a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efd7a019060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efd7a019060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0193e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a019570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efd7a016c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efd7a016c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a015020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efd7a02a620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efd7a02a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a02a9a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a02ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efd7a028620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efd7a028620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0289a0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a028b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efd7a01f060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efd7a01f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01f3e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efd7a021840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efd7a021840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a021bc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a021d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efd7a024060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efd7a024060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0243e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a024570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efd7a0332b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efd7a0332b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efd7a033630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efd7a0337c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efd7a033950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efd7a02e6b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efd7a02e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efd7a02ed00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efd7a02ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efd7a018480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efd7a018480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a018800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a018990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efd7a02d490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efd7a02d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efd7a015480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efd7a015480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a015800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a015990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efd7a0309c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efd7a0309c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a030d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efd7a01a840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efd7a01a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01abc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efd7a02ae00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efd7a02ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0281c0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a028350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efd7a02be00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efd7a02be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a02a1c0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a02a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efd7a0322f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efd7a0322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a032670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efd7a01c840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efd7a01c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01cbc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efd7a01d060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efd7a01d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01d3e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efd7a01a060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efd7a01a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01a3e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efd7a012480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efd7a012480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a012800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a012990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efd7a013480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efd7a013480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a013800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a013990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efd7a020060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efd7a020060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0203e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a020570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efd7a01d840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efd7a01d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01dbc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efd7a016480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efd7a016480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a016800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a016990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efd7a023060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efd7a023060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0233e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a023570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efd7a011480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efd7a011480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a011800"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a011990"/>
        <function-ref name="write" scoped="" ref="0x7efd7a011b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a011cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a011e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efd7a033c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efd7a033c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a032020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efd7a02ce00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efd7a02ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a02b1c0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a02b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efd7a028e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efd7a028e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0271c0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a027350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efd7a01f840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efd7a01f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01fbc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efd7a024840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efd7a024840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a024bc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a024d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efd7a01e060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efd7a01e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01e3e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efd7a026060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efd7a026060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0263e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a026570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efd7a031020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efd7a031020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a0313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efd7a026840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efd7a026840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a026bc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a026d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd7a034520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd7a034520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd7a0348a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd7a034a30"/>
        <function-ref name="request" scoped="" ref="0x7efd7a034bc0"/>
        <function-ref name="granted" scoped="" ref="0x7efd7a034d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd7a033020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efd7a02dae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efd7a02dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efd7a02c7b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efd7a02c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efd7a017c60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efd7a017c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a016020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efd7a017480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efd7a017480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a017800"/>
        <function-ref name="write" scoped="" ref="0x7efd7a017990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efd7a02e060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efd7a02e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efd7a018c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efd7a018c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a017020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efd7a013c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efd7a013c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a012020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efd7a020840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efd7a020840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a020bc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a020d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efd7a01c060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efd7a01c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a01c3e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a01c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efd7a031670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efd7a031670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a0319f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efd7a030370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efd7a030370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a0306f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efd7a023840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efd7a023840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a023bc0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a023d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efd7a02c160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efd7a02c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efd7a02c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efd7a021060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efd7a021060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a0213e0"/>
        <function-ref name="write" scoped="" ref="0x7efd7a021570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efd7a019840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efd7a019840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efd7a018020"/>
        <function-ref name="write" scoped="" ref="0x7efd7a0181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efd7a010160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efd7a010160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efd7a0104e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efd7a010670"/>
        <function-ref name="write" scoped="" ref="0x7efd7a010800"/>
        <function-ref name="beginRead" scoped="" ref="0x7efd7a010990"/>
        <function-ref name="readDone" scoped="" ref="0x7efd7a010b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd79fe9390" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd79fe9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79fe9710"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79fe98a0"/>
        <function-ref name="isState" scoped="" ref="0x7efd79fe9a30"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79fe9bc0"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79fe9d50"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79fe8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79fdfb50" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79fdfb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79fde020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79fde1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79fde340"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79fde4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79fde660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79fe2dd0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79fe2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79fdf180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79fdf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79fdf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79fdf630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79fdf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79fd6b40" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79fd6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79fd5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79fd51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79fd5340"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79fd54d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79fd5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79fd7660" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79fd7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79fd79e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79fd7b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79fd7d00"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79fd6020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79fd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efd79fd4760" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efd79fd4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efd79fd4ae0"/>
        <function-ref name="rand32" scoped="" ref="0x7efd79fd4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd79fd6430" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd79fd6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd79fd67b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd79fd3020" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79fd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd79fd33a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd79fd3530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd79fd36c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7efd79fd58f0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd79fd58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79fd5c70"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79fd5e00"/>
        <function-ref name="isState" scoped="" ref="0x7efd79fd4020"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79fd41b0"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79fd4340"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79fd44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd79fd8690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd79fd8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79fd8a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79fd8ba0"/>
        <function-ref name="isState" scoped="" ref="0x7efd79fd8d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79fc2020"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79fc21b0"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79fc2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efd79fbb950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efd79fbb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79fbbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79fbfaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79fbfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79fbfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7efd79fbb200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7efd79fbb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79fbb580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efd79fb63f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efd79fb63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79fb6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd79fb7b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd79fb7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd79fb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79fbae30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79fbae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79fb71e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd79fb6a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79fb6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd79fb6df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd79fb5020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd79fb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7efd79fb7570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7efd79fb7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79fb78f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efd79f88020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efd79f88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f883a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79f886b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79f886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f88a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f88bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f88d50"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f87020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79f8c8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79f8c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f8cc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f8cdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f8b020"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f8b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efd79f8bc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efd79f8bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f8a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f8a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f8a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f8a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f8a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79f8b5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79f8b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f8b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79f8dbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79f8dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79f8c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79f8c1b0"/>
        <function-ref name="request" scoped="" ref="0x7efd79f8c340"/>
        <function-ref name="granted" scoped="" ref="0x7efd79f8c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79f8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efd79f8aa50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efd79f8aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f8add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efd79f89170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efd79f89170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd79f894f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd79f89680"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f89810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f899a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd79f89b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79f7ed70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79f7ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f7d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f7d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f7d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f7d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f7d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efd79f7db10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efd79f7db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7efd79f4fdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7efd79f4fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79f4d180"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79f4d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efd79f7c2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd79f7c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd79f7c670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd79f7c800"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd79f7c990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd79f7cb20"/>
        <function-ref name="getPower" scoped="" ref="0x7efd79f7ccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd79f7ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efd79f80a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efd79f80a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f80da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f7f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f7f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f7f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efd79f7bb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd79f7bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efd79f7a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efd79f7a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efd79f7a340"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd79f7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd79f7b170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79f7b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f7b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd79f7b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd79f7b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efd79f80370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efd79f80370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f806f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79f827b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79f827b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79f82b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79f82cc0"/>
        <function-ref name="request" scoped="" ref="0x7efd79f82e50"/>
        <function-ref name="granted" scoped="" ref="0x7efd79f81020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79f811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efd79f814d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efd79f814d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f81850"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f819e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f81b70"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f81d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efd79f7f840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efd79f7f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f7fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efd79f7e020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efd79f7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd79f7e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd79f7e530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f7e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f7e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd79f7e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd79f2fdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd79f2fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd79f2d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efd79f2d410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efd79f2d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efd79f2d790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efd79f2d920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efd79f2dab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd79f2dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd79f22b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd79f22b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79f21020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79f211b0"/>
        <function-ref name="start" scoped="" ref="0x7efd79f21340"/>
        <function-ref name="stop" scoped="" ref="0x7efd79f214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79f20860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79f20860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f20be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f20d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f1f020"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f1f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f1f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efd79f1f690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efd79f1f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f1fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79f26ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79f26ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f230a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f23230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f233c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f23550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efd79f22080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efd79f22080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efd79f22400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efd79f22590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efd79f22720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efd79f228b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7efd79f21800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7efd79f21800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79f21b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79f21d10"/>
        <function-ref name="isState" scoped="" ref="0x7efd79f20020"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79f201b0"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79f20340"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79f204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7efd79f1fd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7efd79f1fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79f1e180"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79f1e310"/>
        <function-ref name="start" scoped="" ref="0x7efd79f1e4a0"/>
        <function-ref name="stop" scoped="" ref="0x7efd79f1e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79f23980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79f23980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79f23d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efd79f1b2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efd79f1b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efd79f1b650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efd79f1b7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efd79f1b970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efd79f1bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd79f1d580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd79f1d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79f1d900"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79f1da90"/>
        <function-ref name="isState" scoped="" ref="0x7efd79f1dc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79f1ddb0"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79f1c020"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79f1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79f0dd70" loc="47:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79f0dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f0c180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f0c310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f0c4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f0c630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f0c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79f0f2a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79f0f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f0f620"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f0f7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f0f940"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f0fad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f0fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efd79f0d020" loc="43:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efd79f0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efd79f0d3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efd79f0d530"/>
        <function-ref name="getRetries" scoped="" ref="0x7efd79f0d6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efd79f0d850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efd79f0d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79f08dd0" loc="47:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79f08dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f07180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f07310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f074a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f07630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f077c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7efd79efd2a0" loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7efd79efd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79efd620"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79efd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7efd79f05650" loc="50:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7efd79f05650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79f02c40"/>
        <function-ref name="fired" scoped="" ref="0x7efd79f031e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd79f02020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd79f03ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd79f00590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd79f00110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79f03660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd79f04390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd79f02630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd79f04860"/>
        <function-ref name="stop" scoped="" ref="0x7efd79f04d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79f0b3a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79f0b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79f0b720"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f0b8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79f0ba40"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79f0bbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79f0bd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7efd79f07af0" loc="48:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7efd79f07af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79f07e70"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79f06030"/>
        <function-ref name="isState" scoped="" ref="0x7efd79f061c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79f06350"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79f064e0"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79f06670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efd79f00a30" loc="51:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efd79f00a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efd79f00db0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efd79eff020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efd79eff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7efd79f069a0" loc="49:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79f069a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd79f06d20"/>
        <function-ref name="noAck" scoped="" ref="0x7efd79f05020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd79f051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efd79f08080" loc="43:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efd79f08080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efd79f08400"/>
        <function-ref name="setRetries" scoped="" ref="0x7efd79f08590"/>
        <function-ref name="getRetries" scoped="" ref="0x7efd79f08720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efd79f088b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efd79f08a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efd79ed2350" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efd79ed2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efd79ed26d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efd79ed2860"/>
        <function-ref name="isState" scoped="" ref="0x7efd79ed29f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efd79ed2b80"/>
        <function-ref name="requestState" scoped="" ref="0x7efd79ed2d10"/>
        <function-ref name="forceState" scoped="" ref="0x7efd79ed1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd79ed0750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd79ed0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79ecdc40"/>
        <function-ref name="fired" scoped="" ref="0x7efd79ece1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd79ecd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd79eceae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd79ecb590"/>
        <function-ref name="gett0" scoped="" ref="0x7efd79ecb110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79ece660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd79ecf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd79ecd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd79ecf860"/>
        <function-ref name="stop" scoped="" ref="0x7efd79ecfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efd7a2c9dd0" loc="11:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efd7a2c9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efd79eb9180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efd79eb9310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efd79eb94a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efd79eb9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efd79eb8670" loc="13:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79eb8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd79eb89f0"/>
        <function-ref name="noAck" scoped="" ref="0x7efd79eb8b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd79eb8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efd79eb98f0" loc="12:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efd79eb98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efd79eb9c70"/>
        <function-ref name="setRetries" scoped="" ref="0x7efd79eb9e00"/>
        <function-ref name="getRetries" scoped="" ref="0x7efd79eb8020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efd79eb81b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efd79eb8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7efd79eb3020" loc="12:../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7efd79eb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7efd79eb33a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7efd79eb3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efd79eaec70" loc="10:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efd79eaec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efd79ead020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efd79ead1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7efd79ead340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efd79ead4d0"/>
        <function-ref name="getPower" scoped="" ref="0x7efd79ead660"/>
        <function-ref name="getLqi" scoped="" ref="0x7efd79ead7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7efd79eae450" loc="9:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7efd79eae450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7efd79eae7d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7efd79eae960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd79eb4e70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd79eb4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79ea5390"/>
        <function-ref name="fired" scoped="" ref="0x7efd79ea7970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd79ea6720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd79ea62a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd79ea5c90"/>
        <function-ref name="gett0" scoped="" ref="0x7efd79ea5810"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79ea7df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd79eb1a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd79ea6d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd79ea7020"/>
        <function-ref name="stop" scoped="" ref="0x7efd79ea74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd79e9da40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd79e9da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
            <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79e77b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79e77020"/>
        <function-ref name="empty" scoped="" ref="0x7efd79e79670"/>
        <function-ref name="put" scoped="" ref="0x7efd79e774a0"/>
        <function-ref name="size" scoped="" ref="0x7efd79e79af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd78ea1210" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd78ea1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
            <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd78e9e330"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd78e9f780"/>
        <function-ref name="empty" scoped="" ref="0x7efd78ea1e00"/>
        <function-ref name="put" scoped="" ref="0x7efd78e9fc00"/>
        <function-ref name="size" scoped="" ref="0x7efd78e9f300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd78ea2af0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd78ea2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd78ea2e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd79e74020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd79e74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79e71110"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79e72550"/>
        <function-ref name="empty" scoped="" ref="0x7efd79e74c10"/>
        <function-ref name="put" scoped="" ref="0x7efd79e729d0"/>
        <function-ref name="size" scoped="" ref="0x7efd79e720d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd78e8fd80" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd78e8fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd78e8ce70"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd78e8c300"/>
        <function-ref name="empty" scoped="" ref="0x7efd78e8d9a0"/>
        <function-ref name="put" scoped="" ref="0x7efd78e8c780"/>
        <function-ref name="size" scoped="" ref="0x7efd78e8de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd78e8f690" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd78e8f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd78e8fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7efd79e6d850" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd79e6d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7efd7b277d00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7efd79e516e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7efd79e4f490"/>
        <function-ref name="element" scoped="" ref="0x7efd79e4fb00"/>
        <function-ref name="full" scoped="" ref="0x7efd79e52900"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79e51260"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd79e51d90"/>
        <function-ref name="empty" scoped="" ref="0x7efd79e52480"/>
        <function-ref name="size" scoped="" ref="0x7efd79e52d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd79e4c020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd79e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79e49110"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79e4a550"/>
        <function-ref name="empty" scoped="" ref="0x7efd79e4cc10"/>
        <function-ref name="put" scoped="" ref="0x7efd79e4a9d0"/>
        <function-ref name="size" scoped="" ref="0x7efd79e4a0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd78e70020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd78e70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd78e6d110"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd78e6f550"/>
        <function-ref name="empty" scoped="" ref="0x7efd78e70c10"/>
        <function-ref name="put" scoped="" ref="0x7efd78e6f9d0"/>
        <function-ref name="size" scoped="" ref="0x7efd78e6f0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd78e71900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd78e71900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd78e71c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd79e40440" loc="11:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd79e40440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79e407c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79e40950"/>
        <function-ref name="start" scoped="" ref="0x7efd79e40ae0"/>
        <function-ref name="stop" scoped="" ref="0x7efd79e40c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7efd79e3b1a0" loc="16:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7efd79e3b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79e3b520"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79e3b6b0"/>
        <function-ref name="start" scoped="" ref="0x7efd79e3b840"/>
        <function-ref name="stop" scoped="" ref="0x7efd79e3b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7efd79e3bdd0" loc="17:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7efd79e3bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79e3a180"/>
        <function-ref name="stop" scoped="" ref="0x7efd79e3a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd79e3a5c0" loc="18:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd79e3a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd79e3a940"/>
        <function-ref name="changed" scoped="" ref="0x7efd79e3aad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd79e3ac60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd79e3adf0"/>
        <function-ref name="setSource" scoped="" ref="0x7efd79e39020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd79e391b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd79e39340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7efd79e3d8c0" loc="15:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7efd79e3d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79e3dc40"/>
        <function-ref name="stop" scoped="" ref="0x7efd79e3ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7efd79e3d020" loc="14:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd79e3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79e3d3a0"/>
        <function-ref name="stop" scoped="" ref="0x7efd79e3d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7efd79e20020" loc="15:../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7efd79e20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7efd79e203a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7efd79e20530"/>
        <function-ref name="findTLV" scoped="" ref="0x7efd79e206c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd79e07a40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd79e07a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7efd7b80e110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79e05b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79e05020"/>
        <function-ref name="empty" scoped="" ref="0x7efd79e06670"/>
        <function-ref name="put" scoped="" ref="0x7efd79e054a0"/>
        <function-ref name="size" scoped="" ref="0x7efd79e06af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd78e55d10" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd78e55d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7efd7b80e110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd78e52e10"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd78e522a0"/>
        <function-ref name="empty" scoped="" ref="0x7efd78e54940"/>
        <function-ref name="put" scoped="" ref="0x7efd78e52720"/>
        <function-ref name="size" scoped="" ref="0x7efd78e54dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd78e55620" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd78e55620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd78e559a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efd79e02970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efd79e02970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7ba1bdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efd7b841200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efd79dfee80"/>
        <function-ref name="fired" scoped="" ref="0x7efd79e004a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efd79dfe260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efd79e00da0"/>
        <function-ref name="getdt" scoped="" ref="0x7efd79dfd7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7efd79dfd320"/>
        <function-ref name="isRunning" scoped="" ref="0x7efd79e00920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efd79e015a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efd79dfe870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efd79e01a70"/>
        <function-ref name="stop" scoped="" ref="0x7efd79e00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7efd79df2ae0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd79df2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7efd79def990"/>
        <function-ref name="enqueue" scoped="" ref="0x7efd79dee740"/>
        <function-ref name="element" scoped="" ref="0x7efd79deedb0"/>
        <function-ref name="full" scoped="" ref="0x7efd79df0bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79def510"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd79dee090"/>
        <function-ref name="empty" scoped="" ref="0x7efd79df0750"/>
        <function-ref name="size" scoped="" ref="0x7efd79def090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd79dea4a0" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd79dea4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79de8570"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd79de99d0"/>
        <function-ref name="empty" scoped="" ref="0x7efd79de90d0"/>
        <function-ref name="put" scoped="" ref="0x7efd79de9e50"/>
        <function-ref name="size" scoped="" ref="0x7efd79de9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7efd78e33020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7efd78e33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7efd7b75b020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7efd7b75b4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd78e30110"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd78e32550"/>
        <function-ref name="empty" scoped="" ref="0x7efd78e33c10"/>
        <function-ref name="put" scoped="" ref="0x7efd78e329d0"/>
        <function-ref name="size" scoped="" ref="0x7efd78e320d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd78e34900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd78e34900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd78e34c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7efd79ddf540" loc="8:../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7efd79ddf540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7efd79ddf8c0"/>
        <function-ref name="OCP" scoped="" ref="0x7efd79ddfa50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7efd79ddfbe0"/>
        <function-ref name="getRank" scoped="" ref="0x7efd79ddfd70"/>
        <function-ref name="resetRank" scoped="" ref="0x7efd79ddc020"/>
        <function-ref name="getOCP" scoped="" ref="0x7efd79ddc1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7efd79ddc340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7efd79ddc4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7efd79ddc660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7efd79ddc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7efd79dd5260" loc="43:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7efd79dd5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79dd55e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7efd79dd59b0" loc="44:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7efd79dd59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7efd79dd5d30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7efd79dd4020"/>
        <function-ref name="startDAO" scoped="" ref="0x7efd79dd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7efd79ddb360" loc="40:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7efd79ddb360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7efd79ddb6e0"/>
        <function-ref name="OCP" scoped="" ref="0x7efd79ddb870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7efd79ddba00"/>
        <function-ref name="getRank" scoped="" ref="0x7efd79ddbb90"/>
        <function-ref name="resetRank" scoped="" ref="0x7efd79ddbd20"/>
        <function-ref name="getOCP" scoped="" ref="0x7efd79dd8020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7efd79dd81b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7efd79dd8340"/>
        <function-ref name="getParent" scoped="" ref="0x7efd79dd84d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7efd79dd8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7efd79dd78b0" loc="42:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7efd79dd78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7efd79dd7c30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd79dd6ca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7efd79dd6e30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7efd79dd61b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd79dd6340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7efd79dd64d0"/>
        <function-ref name="getRank" scoped="" ref="0x7efd79dd6660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7efd79dd67f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7efd79dd6020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7efd79dd6980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7efd79dd6b10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7efd79dd7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7efd79dd8990" loc="41:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7efd79dd8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7efd79dd8d10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7efd79dd7020"/>
        <function-ref name="delRoute" scoped="" ref="0x7efd79dd71b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7efd79dd7340"/>
        <function-ref name="addRoute" scoped="" ref="0x7efd79dd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7efd79dd4540" loc="45:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7efd79dd4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7efd79dd48c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7efd79dd4a50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7efd79dd4be0"/>
        <function-ref name="hasParent" scoped="" ref="0x7efd79dd4d70"/>
        <function-ref name="validInstance" scoped="" ref="0x7efd79dd3020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7efd79dd31b0"/>
        <function-ref name="getRank" scoped="" ref="0x7efd79dd3340"/>
        <function-ref name="getEtx" scoped="" ref="0x7efd79dd34d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7efd79dd3660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7efd79dd37f0"/>
        <function-ref name="isParent" scoped="" ref="0x7efd79dd3980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7efd79dd3b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7efd79dd3ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7efd79dd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd79d99840" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd79d99840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79d99be0"/>
        <function-ref name="recv" scoped="" ref="0x7efd79d99d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7efd78e1fae0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7efd78e1fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78e1fe60"/>
        <function-ref name="recv" scoped="" ref="0x7efd78e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd78e1f2e0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd78e1f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78e1f680"/>
        <function-ref name="recv" scoped="" ref="0x7efd78e1f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd79d825c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd79d825c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79d82940"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79d82ad0"/>
        <function-ref name="start" scoped="" ref="0x7efd79d82c60"/>
        <function-ref name="stop" scoped="" ref="0x7efd79d82df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efd79d7e600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd79d7e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79d7e980"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79d7eb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79d7eca0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79d7ee30"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79d7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efd79d7de10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd79d7de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd79d7c1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd79d7c350"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79d7c4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79d7c670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd79d7c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79d7d800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79d7d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79d7db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd79d6c300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd79d6c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd79d6c680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd79d6c810"/>
        <function-ref name="led1On" scoped="" ref="0x7efd79d6c9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd79d6cb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd79d6ccc0"/>
        <function-ref name="get" scoped="" ref="0x7efd79d6ce50"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd79d68020"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd79d68660"/>
        <function-ref name="set" scoped="" ref="0x7efd79d681b0"/>
        <function-ref name="led0On" scoped="" ref="0x7efd79d68340"/>
        <function-ref name="led2On" scoped="" ref="0x7efd79d684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efd79d7a800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79d7a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd79d7ab80"/>
        <function-ref name="noAck" scoped="" ref="0x7efd79d7ad10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd79d6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efd79d7b020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efd79d7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efd79d7b3a0"/>
        <function-ref name="source" scoped="" ref="0x7efd79d7b530"/>
        <function-ref name="address" scoped="" ref="0x7efd79d7b6c0"/>
        <function-ref name="destination" scoped="" ref="0x7efd79d7b850"/>
        <function-ref name="setSource" scoped="" ref="0x7efd79d7b9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efd79d7bb70"/>
        <function-ref name="type" scoped="" ref="0x7efd79d7bd00"/>
        <function-ref name="setType" scoped="" ref="0x7efd79d7a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efd79d7a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efd79d7a340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efd79d7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efd79d0b4a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efd79d0b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79d0b820"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79d0b9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79d0bb40"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79d0bcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79d0be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efd79d0a120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efd79d0a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79d0a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efd79d66300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd79d66300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79d666a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79d66830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79d669c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79d66b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79d66ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efd79d0dd60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd79d0dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd79d0c180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd79d0c310"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79d0c4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79d0c630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd79d0c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79d0f0d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79d0f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79d0f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efd79d0ca10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efd79d0ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd79d0cd90"/>
        <function-ref name="noAck" scoped="" ref="0x7efd79d0b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd79d0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efd79d0f6c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efd79d0f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efd79d0fa40"/>
        <function-ref name="source" scoped="" ref="0x7efd79d0fbd0"/>
        <function-ref name="address" scoped="" ref="0x7efd79d0fd60"/>
        <function-ref name="destination" scoped="" ref="0x7efd79d0d020"/>
        <function-ref name="setSource" scoped="" ref="0x7efd79d0d1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efd79d0d340"/>
        <function-ref name="type" scoped="" ref="0x7efd79d0d4d0"/>
        <function-ref name="setType" scoped="" ref="0x7efd79d0d660"/>
        <function-ref name="isForMe" scoped="" ref="0x7efd79d0d7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efd79d0d980"/>
        <function-ref name="localGroup" scoped="" ref="0x7efd79d0db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd79d08b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd79d08b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79d05020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79d051b0"/>
        <function-ref name="start" scoped="" ref="0x7efd79d05340"/>
        <function-ref name="stop" scoped="" ref="0x7efd79d054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79d04790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79d04790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efd7ba308e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79d04b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79d04ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79d04e30"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79d03020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79d031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd79d08540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd79d08540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd79d088c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79d05c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79d05c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efd7ba308e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79d04020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd79d022b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd79d022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd79d02630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd79d027c0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd79d02950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd79d02ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd79d02c70"/>
        <function-ref name="get" scoped="" ref="0x7efd79d02e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd79d01020"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd79d01660"/>
        <function-ref name="set" scoped="" ref="0x7efd79d011b0"/>
        <function-ref name="led0On" scoped="" ref="0x7efd79d01340"/>
        <function-ref name="led2On" scoped="" ref="0x7efd79d014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7efd79cfd970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efd79cfd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efd7ba308e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efd79cfdcf0"/>
        <function-ref name="offset" scoped="" ref="0x7efd79cfde80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efd79d02030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efd79cfa7c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efd79cfa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd79cfab40"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd79cfacd0"/>
        <function-ref name="start" scoped="" ref="0x7efd79cfae60"/>
        <function-ref name="stop" scoped="" ref="0x7efd79cf9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7efd79c946e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7efd79c946e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79c94a60"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79c94bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7efd79ce8860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7efd79ce8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79ce8be0"/>
        <function-ref name="stop" scoped="" ref="0x7efd79ce8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7efd79ccb4f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7efd79ccb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79ccb870"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79ccba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd79cfa170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd79cfa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd79cfa4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7efd79ce4480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7efd79ce4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7efd79ce4800"/>
        <function-ref name="flush" scoped="" ref="0x7efd79ce4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7efd79c97c70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7efd79c97c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79c96020"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79c961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7efd79cf2020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7efd79cf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7efd79cf23a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7efd79cf2530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7efd79cf26c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7efd79cf2850"/>
        <function-ref name="putData" scoped="" ref="0x7efd79cf29e0"/>
        <function-ref name="putDone" scoped="" ref="0x7efd79cf2b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7efd79cf2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd79cee020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd79cee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd79cee3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd79cee530"/>
        <function-ref name="led1On" scoped="" ref="0x7efd79cee6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd79cee850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd79cee9e0"/>
        <function-ref name="get" scoped="" ref="0x7efd79ceeb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd79ceed00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd79ce84d0"/>
        <function-ref name="set" scoped="" ref="0x7efd79ce8020"/>
        <function-ref name="led0On" scoped="" ref="0x7efd79ce81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd79ce8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7efd79c90a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7efd79c90a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79c90d80"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79c8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7efd79cf3720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7efd79cf3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7efd79cf3aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7efd79cf3c30"/>
        <function-ref name="startSend" scoped="" ref="0x7efd79cf3dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7efd79cf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7efd79cf0c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efd79cf0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7efd79cf7020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7efd79cf71b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7efd79cf7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7efd79bc5020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7efd79bc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79bc53a0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79bc5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd79bcade0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd79bcade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efd7ba308e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79bc91c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79bc9350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd79bc94e0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79bc9670"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79bc9800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7efd79bc5800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7efd79bc5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd79bc5b80"/>
        <function-ref name="runTask" scoped="" ref="0x7efd79bc5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efd79bca6c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efd79bca6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efd7ba308e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efd79bcaa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7efd79bc9c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7efd79bc9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efd7ba308e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efd79bc8020"/>
        <function-ref name="offset" scoped="" ref="0x7efd79bc81b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efd79bc8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd79bc7920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd79bc7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd79bc7ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd79bc7e30"/>
        <function-ref name="led1On" scoped="" ref="0x7efd79bc6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd79bc61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd79bc6340"/>
        <function-ref name="get" scoped="" ref="0x7efd79bc64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd79bc6660"/>
        <function-ref name="led2On" scoped="" ref="0x7efd79bc6ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd79bc6980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd79bc67f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efd79bc6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7efd79bc8e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7efd79bc8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7efd79bc7220"/>
        <function-ref name="nextByte" scoped="" ref="0x7efd79bc73b0"/>
        <function-ref name="startSend" scoped="" ref="0x7efd79bc7540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7efd79bc76d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7efd79bc8590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efd79bc8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7efd79bc8910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7efd79bc8aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7efd79bc8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7efd79bb5d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efd79bb5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79bbe0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efd79bbe270"/>
        <function-ref name="receive" scoped="" ref="0x7efd79bbe400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efd79bbe590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efd79bbe720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efd79bbe8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79bbea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7efd79bc3e00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7efd79bc3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7efd79bc01c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7efd79bc0350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7efd79bc04e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7efd79bc0670"/>
        <function-ref name="putData" scoped="" ref="0x7efd79bc0800"/>
        <function-ref name="putDone" scoped="" ref="0x7efd79bc0990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7efd79bc0b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd79bbecc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd79bbecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd79bbd0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd79bbd230"/>
        <function-ref name="led1On" scoped="" ref="0x7efd79bbd3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd79bbd550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd79bbd6e0"/>
        <function-ref name="get" scoped="" ref="0x7efd79bbd870"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd79bbda00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd79bb31b0"/>
        <function-ref name="set" scoped="" ref="0x7efd79bbdb90"/>
        <function-ref name="led0On" scoped="" ref="0x7efd79bbdd20"/>
        <function-ref name="led2On" scoped="" ref="0x7efd79bb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efd79b96020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efd79b96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79b963a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efd79b96530"/>
        <function-ref name="receive" scoped="" ref="0x7efd79b966c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efd79b96850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efd79b98890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efd79b98890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79b98c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efd79b98da0"/>
        <function-ref name="receive" scoped="" ref="0x7efd79b97020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efd79b971b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efd79b97340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efd79b974d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79b97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd79b98080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd79b98080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79b98400"/>
        <function-ref name="stop" scoped="" ref="0x7efd79b98590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd79a08c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a08c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd79a07020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd79a071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efd79a06440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efd79a06440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79a067c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efd79a06950"/>
        <function-ref name="receive" scoped="" ref="0x7efd79a06ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efd79a06c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efd79a04020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79a04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd79a043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efd79a07440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efd79a07440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79a077c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efd79a07950"/>
        <function-ref name="receive" scoped="" ref="0x7efd79a07ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efd79a07c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efd79a07e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efd79a06020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79a061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79a08020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79a08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79a083a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79a08530"/>
        <function-ref name="request" scoped="" ref="0x7efd79a086c0"/>
        <function-ref name="granted" scoped="" ref="0x7efd79a08850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79a089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efd79b86a30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79b86a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd79b86db0"/>
        <function-ref name="configure" scoped="" ref="0x7efd79b85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efd79b82020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efd79b82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79b823a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efd79b82530"/>
        <function-ref name="receive" scoped="" ref="0x7efd79b826c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efd79b82850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efd79b7f450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79b7f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd79b7f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efd79b85860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efd79b85860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79b85be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efd79b85d70"/>
        <function-ref name="receive" scoped="" ref="0x7efd79b83020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efd79b831b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efd79b83340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efd79b834d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79b83660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efd79b811d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efd79b811d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79b81550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79b816e0"/>
        <function-ref name="request" scoped="" ref="0x7efd79b81870"/>
        <function-ref name="granted" scoped="" ref="0x7efd79b81a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79b81b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79b877a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79b877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79b87b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79b87cb0"/>
        <function-ref name="request" scoped="" ref="0x7efd79b87e40"/>
        <function-ref name="granted" scoped="" ref="0x7efd79b86020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79b861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efd79b7e1d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd79b7e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79b7e550"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79b7e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efd79b13dc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79b13dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd79b12180"/>
        <function-ref name="configure" scoped="" ref="0x7efd79b12310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efd79b11890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efd79b11890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79b11c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efd79b11dc0"/>
        <function-ref name="receive" scoped="" ref="0x7efd79b10020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efd79b101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efd79b0f3e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79b0f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd79b0f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efd79b0fa50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efd79b0fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd79b0fdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd79b0e020"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd79b0e1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd79b0e340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd79b0e4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd79b0e660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd79b0e7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd79b0e980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd79b0eb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd79b0eca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd79b0ee30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd79b0d020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd79b0d1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd79b0d440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd79b0d5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd79b0d760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd79b0d8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7efd79b0da80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd79b0dc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd79b0dda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd79b0c020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd79b0c1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd79b0c340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd79b0c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd79b0c660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd79b0c9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd79b0cb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd79b0cd10"/>
        <function-ref name="tx" scoped="" ref="0x7efd79b0b020"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd79b0b1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd79b0b340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd79b0b4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd79b0b660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd79b0b7f0"/>
        <function-ref name="rx" scoped="" ref="0x7efd79b0b980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd79b0bb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd79b0bca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd79b0be30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd79b0a020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd79b0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efd79b126d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efd79b126d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd79b12a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efd79b12c00"/>
        <function-ref name="receive" scoped="" ref="0x7efd79b12d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efd79b11020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efd79b111b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efd79b11340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd79b114d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efd79b09020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd79b09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79b09e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd79b07800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd79b07340"/>
        <function-ref name="overflow" scoped="" ref="0x7efd79b07cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efd79b105b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efd79b105b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79b10950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79b10ae0"/>
        <function-ref name="request" scoped="" ref="0x7efd79b10c70"/>
        <function-ref name="granted" scoped="" ref="0x7efd79b10e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79b0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79b13020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79b13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79b133c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79b13550"/>
        <function-ref name="request" scoped="" ref="0x7efd79b136e0"/>
        <function-ref name="granted" scoped="" ref="0x7efd79b13870"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79b13a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efd79b0a5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efd79b0a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79b0a950"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79b0aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd79b06120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd79b06120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd79b064a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd79b06630"/>
        <function-ref name="led1On" scoped="" ref="0x7efd79b067c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd79b06950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd79b06ae0"/>
        <function-ref name="get" scoped="" ref="0x7efd79b06c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd79b06e00"/>
        <function-ref name="led2On" scoped="" ref="0x7efd79b054d0"/>
        <function-ref name="set" scoped="" ref="0x7efd79b051b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd79b05020"/>
        <function-ref name="led0On" scoped="" ref="0x7efd79b05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efd79af7860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd79af7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79af7be0"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79af7d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efd79afa500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79afa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79afa880"/>
        <function-ref name="stop" scoped="" ref="0x7efd79afaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efd79afad30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd79afad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd79afd0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd79afd270"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd79afd400"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd79afd590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd79afd720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd79afd8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd79afda40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd79afdbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd79afdd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd79afc020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd79afc1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd79afc340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd79afc4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd79afc760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd79afc8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd79afca80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd79afcc10"/>
        <function-ref name="isUart" scoped="" ref="0x7efd79afcda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd79af9020"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd79af91b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd79af9340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd79af94d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd79af9660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd79af97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efd79af9980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd79af9d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd79af8020"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd79af81b0"/>
        <function-ref name="tx" scoped="" ref="0x7efd79af8340"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd79af84d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd79af8660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd79af87f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd79af8980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd79af8b10"/>
        <function-ref name="rx" scoped="" ref="0x7efd79af8ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd79af8e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd79af7020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd79af71b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd79af7340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd79af74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efd79ae9990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efd79ae9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd79ae9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efd79ae8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd79ae81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd79ae8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd79ae84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd79ae8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd79ae87f0"/>
        <function-ref name="get" scoped="" ref="0x7efd79ae8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd79ae8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd79ae8ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd79ae8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd79ae7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd79ae71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd79ae7440"/>
        <function-ref name="clr" scoped="" ref="0x7efd79ae75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efd79aee130" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efd79aee130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79aee4b0"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79aee640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efd79ae7990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efd79ae7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd79ae7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efd79ae6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd79ae61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd79ae6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd79ae64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd79ae6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd79ae67f0"/>
        <function-ref name="get" scoped="" ref="0x7efd79ae6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd79ae6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd79ae6ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd79ae6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd79ae5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd79ae51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd79ae5440"/>
        <function-ref name="clr" scoped="" ref="0x7efd79ae55d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efd79ae5990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efd79ae5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd79ae5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efd79ae4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd79ae41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd79ae4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd79ae44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd79ae4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd79ae47f0"/>
        <function-ref name="get" scoped="" ref="0x7efd79ae4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd79ae4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd79ae4ca0"/>
        <function-ref name="set" scoped="" ref="0x7efd79ae4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd79ae3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd79ae31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd79ae3440"/>
        <function-ref name="clr" scoped="" ref="0x7efd79ae35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efd79af3550" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efd79af3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd79af38d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd79af3a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd79af3bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd79af3d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd79af2020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd79af21b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd79af2340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd79af24d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd79af2660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd79af27f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd79af2980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd79af2b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd79af2ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd79af1020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd79af11b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd79af1340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd79af14d0"/>
        <function-ref name="isUart" scoped="" ref="0x7efd79af1660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd79af17f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd79af1980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd79af1b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd79af1ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd79af1e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd79af0020"/>
        <function-ref name="getMode" scoped="" ref="0x7efd79af01b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd79af0540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd79af06d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd79af0860"/>
        <function-ref name="tx" scoped="" ref="0x7efd79af09f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd79af0b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd79af0d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd79aef020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd79aef1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd79aef340"/>
        <function-ref name="rx" scoped="" ref="0x7efd79aef4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd79aef660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd79aef7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd79aef980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd79aefb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd79aefca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efd79af6bc0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79af6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79af3020"/>
        <function-ref name="stop" scoped="" ref="0x7efd79af31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efd79aeb990" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efd79aeb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd79aebd10"/>
        <function-ref name="isInput" scoped="" ref="0x7efd79aea020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd79aea1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd79aea340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd79aea4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd79aea660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd79aea7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd79aea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd79aeab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd79aeaca0"/>
        <function-ref name="set" scoped="" ref="0x7efd79aeae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd79ae9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd79ae91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd79ae9440"/>
        <function-ref name="clr" scoped="" ref="0x7efd79ae95d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efd79aeea00" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efd79aeea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efd79aeed80"/>
        <function-ref name="isInput" scoped="" ref="0x7efd79aec020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efd79aec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efd79aec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efd79aec4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efd79aec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efd79aec7f0"/>
        <function-ref name="get" scoped="" ref="0x7efd79aec980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efd79aecb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efd79aecca0"/>
        <function-ref name="set" scoped="" ref="0x7efd79aece30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efd79aeb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efd79aeb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efd79aeb440"/>
        <function-ref name="clr" scoped="" ref="0x7efd79aeb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efd79a66110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efd79a66110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efd7b841640"/>
            <typename><typedef-ref name="T32khz" ref="0x7efd7b8419b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efd79a63020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efd79a639a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efd79a634e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efd79a63e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd78da25d0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd78da25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd78da2950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd78da2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd78d9b7c0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd78d9b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd78d9bb40"/>
        <function-ref name="configure" scoped="" ref="0x7efd78d9bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efd78d9b020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efd78d9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd78d9b3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7efd78d9b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd78da3880" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd78da3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd78da3c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd78da3d90"/>
        <function-ref name="request" scoped="" ref="0x7efd78da2020"/>
        <function-ref name="granted" scoped="" ref="0x7efd78da21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd78da2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efd78da05a0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efd78da05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efd78da0920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efd78da0ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efd78da0c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7efd78da0dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efd78d9f020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efd78d9f1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efd78d9f340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efd78d9f4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efd78d9f660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efd78d9f7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efd78d9f980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efd78d9fb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efd78d9fca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efd78d9e020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efd78d9e1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efd78d9e340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efd78d9e4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7efd78d9e660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efd78d9e7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efd78d9e980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efd78d9eb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efd78d9eca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efd78d9ee30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efd78d9d020"/>
        <function-ref name="getMode" scoped="" ref="0x7efd78d9d1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efd78d9d540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efd78d9d6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efd78d9d860"/>
        <function-ref name="tx" scoped="" ref="0x7efd78d9d9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efd78d9db80"/>
        <function-ref name="disableUart" scoped="" ref="0x7efd78d9dd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efd78d9c020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efd78d9c1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efd78d9c340"/>
        <function-ref name="rx" scoped="" ref="0x7efd78d9c4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efd78d9c660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efd78d9c7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efd78d9c980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efd78d9cb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efd78d9cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd78da2d70" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd78da2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd78da0180"/>
        <function-ref name="userId" scoped="" ref="0x7efd78da0310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd79a48510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a48510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd79a48890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd79a48a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd79a47af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79a47af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd79a47e70"/>
        <function-ref name="configure" scoped="" ref="0x7efd79a46030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efd79a4a510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efd79a4a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79a4a890"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79a4aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79a49280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79a49280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79a49600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79a49790"/>
        <function-ref name="request" scoped="" ref="0x7efd79a49920"/>
        <function-ref name="granted" scoped="" ref="0x7efd79a49ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79a49c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd79a48d20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a48d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd79a470e0"/>
        <function-ref name="userId" scoped="" ref="0x7efd79a47270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efd79a42120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a42120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd79a424a0"/>
        <function-ref name="userId" scoped="" ref="0x7efd79a42630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efd79a44230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efd79a44230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79a445d0"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79a44760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efd79a43ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efd79a43ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd79a43e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efd79a44b60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efd79a44b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efd79a43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efd79a432f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efd79a432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efd79a43670"/>
        <function-ref name="txDone" scoped="" ref="0x7efd79a43800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd79a3fbd0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd79a3fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd79a3e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd79a3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd79a3c930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd79a3c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd79a3ccd0"/>
        <function-ref name="configure" scoped="" ref="0x7efd79a3ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efd79a3e400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd79a3e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79a3e780"/>
        <function-ref name="requested" scoped="" ref="0x7efd79a3e910"/>
        <function-ref name="granted" scoped="" ref="0x7efd79a3eaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79a3ec30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd79a3edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd79a40e30" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd79a40e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79a3f210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd79a3f3a0"/>
        <function-ref name="request" scoped="" ref="0x7efd79a3f530"/>
        <function-ref name="granted" scoped="" ref="0x7efd79a3f6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79a3f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd79a3c060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a3c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd79a3c3e0"/>
        <function-ref name="userId" scoped="" ref="0x7efd79a3c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd78d38ca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd78d38ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd78d360a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efd78d36330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efd78d36330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efd78d366b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efd78d36840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efd78d369d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd78d36b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efd78d333a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efd78d333a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efd78d33740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd78d338d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efd78d31210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efd78d31210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efd78d315b0"/>
        <function-ref name="configure" scoped="" ref="0x7efd78d31740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efd78d319d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd78d319d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efd78d31d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efd78d30020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efd78d301b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd78d30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efd78d33b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd78d33b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd78d32020"/>
        <function-ref name="requested" scoped="" ref="0x7efd78d321b0"/>
        <function-ref name="granted" scoped="" ref="0x7efd78d32340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd78d324d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd78d32660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd78d30590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd78d30590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd78d30910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd78d30aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7efd78d30c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd78d30dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd78d2e020"/>
        <function-ref name="get" scoped="" ref="0x7efd78d2e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd78d2e340"/>
        <function-ref name="led0On" scoped="" ref="0x7efd78d2e980"/>
        <function-ref name="set" scoped="" ref="0x7efd78d2e660"/>
        <function-ref name="led2On" scoped="" ref="0x7efd78d2e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd78d2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efd78d34540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd78d34540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd78d348e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd78d34a70"/>
        <function-ref name="request" scoped="" ref="0x7efd78d34c00"/>
        <function-ref name="granted" scoped="" ref="0x7efd78d34d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd78d33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efd78d328b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd78d328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd78d32c30"/>
        <function-ref name="userId" scoped="" ref="0x7efd78d32dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efd78d2ec50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efd78d2ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd78d2d020"/>
        <function-ref name="runTask" scoped="" ref="0x7efd78d2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efd79a22400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efd79a22400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efd79a22780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efd79a229d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd79a229d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd79a22d50"/>
        <function-ref name="requested" scoped="" ref="0x7efd79a21020"/>
        <function-ref name="granted" scoped="" ref="0x7efd79a211b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd79a21340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd79a214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efd79a37b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd79a37b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79a22020"/>
        <function-ref name="stop" scoped="" ref="0x7efd79a221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efd79a21720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd79a21720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd79a21aa0"/>
        <function-ref name="userId" scoped="" ref="0x7efd79a21c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efd78cfeb00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efd78cfeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efd78cfee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efd78cfd0f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efd78cfd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd78cfd470"/>
        <function-ref name="requested" scoped="" ref="0x7efd78cfd600"/>
        <function-ref name="granted" scoped="" ref="0x7efd78cfd790"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd78cfd920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efd78cfdab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efd78cfe3a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efd78cfe3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd78cfe720"/>
        <function-ref name="stop" scoped="" ref="0x7efd78cfe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efd78cfdd00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efd78cfdd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efd78cfc0a0"/>
        <function-ref name="userId" scoped="" ref="0x7efd78cfc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7efd79a008e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efd79a008e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efd79a00c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efd799ff020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efd799ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efd799ff3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efd799ff530"/>
        <function-ref name="request" scoped="" ref="0x7efd799ff6c0"/>
        <function-ref name="granted" scoped="" ref="0x7efd799ff850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efd799ff9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd79a00080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd79a00080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79a00400"/>
        <function-ref name="stop" scoped="" ref="0x7efd79a00590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7efd799ee8c0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7efd799ee8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efd799eec40"/>
        <function-ref name="offset" scoped="" ref="0x7efd799eedd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efd799eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7efd799da020" loc="9:../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7efd799da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7efd799da3a0"/>
        <function-ref name="bind" scoped="" ref="0x7efd799da530"/>
        <function-ref name="sendtov" scoped="" ref="0x7efd799da6c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7efd799da850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7efd799d47f0" loc="13:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7efd799d47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7efd7a5cb700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7efd7a5cbbd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd799d3990"/>
        <function-ref name="get" scoped="" ref="0x7efd799d3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7efd799d8a20" loc="12:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7efd799d8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7efd799d8da0"/>
        <function-ref name="bind" scoped="" ref="0x7efd799d4020"/>
        <function-ref name="sendtov" scoped="" ref="0x7efd799d41b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7efd799d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7efd799cd850" loc="15:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7efd799cd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7efd7a5cb700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7efd7a5cbbd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd799cc990"/>
        <function-ref name="get" scoped="" ref="0x7efd799cc480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd799cd020" loc="14:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd799cd020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7efd7bf12b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd799cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd799cb600" loc="19:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd799cb600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd799cb980"/>
        <function-ref name="changed" scoped="" ref="0x7efd799cbb10"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd799cbca0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd799cbe30"/>
        <function-ref name="setSource" scoped="" ref="0x7efd799ca020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd799ca1b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd799ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7efd799cf020" loc="13:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7efd799cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7efd799cf3a0"/>
        <function-ref name="bind" scoped="" ref="0x7efd799cf530"/>
        <function-ref name="sendtov" scoped="" ref="0x7efd799cf6c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7efd799cf850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7efd799cce20" loc="18:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd799cce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd799cb1c0"/>
        <function-ref name="recv" scoped="" ref="0x7efd799cb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7efd7997fc80" loc="44:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efd7997fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efd7997e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efd79980020" loc="41:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efd79980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efd799803a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7efd79980650" loc="42:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7efd79980650"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7efd799809d0"/>
        <function-ref name="changed" scoped="" ref="0x7efd79980b60"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7efd79980cf0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7efd79980e80"/>
        <function-ref name="setSource" scoped="" ref="0x7efd7997f030"/>
        <function-ref name="removeAddress" scoped="" ref="0x7efd7997f1c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7efd7997f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7efd7997f620" loc="43:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7efd7997f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7efd7997f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7efd7997e3a0" loc="45:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7efd7997e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7efd7997d1b0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7efd7997e8b0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7efd7997ea40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7efd7997ebd0"/>
        <function-ref name="matchContext" scoped="" ref="0x7efd7997ed60"/>
        <function-ref name="getPrefix" scoped="" ref="0x7efd7997e720"/>
        <function-ref name="getContext" scoped="" ref="0x7efd7997d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7efd79970130" loc="44:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7efd79970130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7efd799704b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7efd79970640"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7efd799707d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efd799838f0" loc="43:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efd799838f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efd79983c70"/>
        <function-ref name="stop" scoped="" ref="0x7efd79983e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd7996e980" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd7996e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd7996ed20"/>
        <function-ref name="recv" scoped="" ref="0x7efd7996d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7efd78cee500" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7efd78cee500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78cee880"/>
        <function-ref name="recv" scoped="" ref="0x7efd78ceea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7efd78cefce0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7efd78cefce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78cee0a0"/>
        <function-ref name="recv" scoped="" ref="0x7efd78cee230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efd798f1870" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd798f1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd798f1bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798f1d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798f0020"/>
        <function-ref name="cancel" scoped="" ref="0x7efd798f01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd798f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efd798f0590" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd798f0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd798f0910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd798f0aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798f0c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798f0dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd798ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efd798ef270" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efd798ef270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efd798ef5f0"/>
        <function-ref name="source" scoped="" ref="0x7efd798ef780"/>
        <function-ref name="address" scoped="" ref="0x7efd798ef910"/>
        <function-ref name="destination" scoped="" ref="0x7efd798efaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7efd798efc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7efd798efdc0"/>
        <function-ref name="type" scoped="" ref="0x7efd798ed020"/>
        <function-ref name="setType" scoped="" ref="0x7efd798ed1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efd798ed340"/>
        <function-ref name="setGroup" scoped="" ref="0x7efd798ed4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efd798ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efd798ed8f0" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efd798ed8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efd798edc70"/>
        <function-ref name="noAck" scoped="" ref="0x7efd798ede00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efd798ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efd78cdf0c0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd78cdf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78cdf440"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd78cdf5d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd78cdf760"/>
        <function-ref name="cancel" scoped="" ref="0x7efd78cdf8f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd78cdfa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7efd78cdfd30" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd78cdfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd78cdd0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd78cdd270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd78cdd400"/>
        <function-ref name="cancel" scoped="" ref="0x7efd78cdd590"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd78cdd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efd78cdd970" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efd78cdd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efd78cddcf0"/>
        <function-ref name="source" scoped="" ref="0x7efd78cdde80"/>
        <function-ref name="address" scoped="" ref="0x7efd78cdc030"/>
        <function-ref name="destination" scoped="" ref="0x7efd78cdc1c0"/>
        <function-ref name="setSource" scoped="" ref="0x7efd78cdc350"/>
        <function-ref name="setDestination" scoped="" ref="0x7efd78cdc4e0"/>
        <function-ref name="type" scoped="" ref="0x7efd78cdc670"/>
        <function-ref name="setType" scoped="" ref="0x7efd78cdc800"/>
        <function-ref name="isForMe" scoped="" ref="0x7efd78cdc990"/>
        <function-ref name="setGroup" scoped="" ref="0x7efd78cdcb20"/>
        <function-ref name="localGroup" scoped="" ref="0x7efd78cdccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd7994bce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd7994bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd799480a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd79948230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd799483c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd79948550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd799486e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efd798fd400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd798fd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd798fd7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798fd930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798fdac0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd798fdc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd798fdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efd798fe580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efd798fe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd798fe920"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798feab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798fec40"/>
        <function-ref name="cancel" scoped="" ref="0x7efd798fedd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd798fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efd798fb720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd798fb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd798fbaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd798fbc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798fbdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798fa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd798fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7efd798fa480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7efd798fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd798fa800"/>
        <function-ref name="runTask" scoped="" ref="0x7efd798fa990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7efd798fac60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7efd798fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd798f9020"/>
        <function-ref name="runTask" scoped="" ref="0x7efd798f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efd798fc060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efd798fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efd798fc3e0"/>
        <function-ref name="source" scoped="" ref="0x7efd798fc570"/>
        <function-ref name="address" scoped="" ref="0x7efd798fc700"/>
        <function-ref name="destination" scoped="" ref="0x7efd798fc890"/>
        <function-ref name="setSource" scoped="" ref="0x7efd798fca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7efd798fcbb0"/>
        <function-ref name="type" scoped="" ref="0x7efd798fcd40"/>
        <function-ref name="setType" scoped="" ref="0x7efd798fb020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efd798fb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efd798fb340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efd798fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7efd798e9760" loc="43:../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd798e9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7efd798c75f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7efd798c6020"/>
        <function-ref name="element" scoped="" ref="0x7efd798c64f0"/>
        <function-ref name="full" scoped="" ref="0x7efd798c9810"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd798c7170"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd798c7a70"/>
        <function-ref name="empty" scoped="" ref="0x7efd798c9390"/>
        <function-ref name="size" scoped="" ref="0x7efd798c9c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efd798bfca0" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efd798bfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7efd798beae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7efd798bd4a0"/>
        <function-ref name="element" scoped="" ref="0x7efd798bd970"/>
        <function-ref name="full" scoped="" ref="0x7efd798c0d40"/>
        <function-ref name="maxSize" scoped="" ref="0x7efd798be660"/>
        <function-ref name="dequeue" scoped="" ref="0x7efd798bd020"/>
        <function-ref name="empty" scoped="" ref="0x7efd798c08c0"/>
        <function-ref name="size" scoped="" ref="0x7efd798be1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efd798bddf0" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efd798bddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efd798bc1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798bc350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798bc4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7efd798bc670"/>
        <function-ref name="sendDone" scoped="" ref="0x7efd798bc800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efd798bca90" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efd798bca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efd798bce10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efd798ba020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efd798ba1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efd798ba340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efd798ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7efd798b6d10" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7efd798b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efd798b50e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efd798b5270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd798c5cc0" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd798c5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd798c20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efd798ba750" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efd798ba750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efd798baad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efd798bac60"/>
        <function-ref name="led1On" scoped="" ref="0x7efd798badf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efd798b9020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efd798b91b0"/>
        <function-ref name="get" scoped="" ref="0x7efd798b9340"/>
        <function-ref name="led1Off" scoped="" ref="0x7efd798b94d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efd798b9b10"/>
        <function-ref name="set" scoped="" ref="0x7efd798b9660"/>
        <function-ref name="led0On" scoped="" ref="0x7efd798b97f0"/>
        <function-ref name="led2On" scoped="" ref="0x7efd798b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7efd798bf400" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7efd798bf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efd798bf780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7efd7989c2a0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7efd7989c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efd7989c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efd7989b5a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efd7989b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efd7989b920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7efd7989bc00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7efd7989bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7efd79897020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efd79892b90" loc="39:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efd79892b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efd7988f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7efd7988f3c0" loc="40:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7efd7988f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efd7988f740"/>
        <function-ref name="stopDone" scoped="" ref="0x7efd7988f8d0"/>
        <function-ref name="start" scoped="" ref="0x7efd7988fa60"/>
        <function-ref name="stop" scoped="" ref="0x7efd7988fbf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efd7ba16270" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7efd7ba1dd70" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7efd7b9e9420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7efd7b9ec700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7efd7b9eace0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7efd7b9ec020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7efd7b9ece70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7efd7b9ed0e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7efd7b9ed7c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7efd7b9ea5c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efd7bb91020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7efd7be56c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7efd7b997020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efd7b999cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7efd7b99b390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efd7b9e2ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efd7b9e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efd7b997890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7efd7b9967b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7efd7b999560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efd7b996020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7efd7b99bb30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7efd7b99a350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7efd7b99ada0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efd7b9e2ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efd7b9e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efd7b99ab20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efd7b9e2ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efd7b9e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efd7b98a0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7efd7b987730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7efd7b9874b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efd7b9862e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efd7b986060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efd7b989ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efd7b9893e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7efd7b98aa90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efd7b98a810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efd7b9913e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7efd7b991d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efd7b991ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7efd7b990790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efd7b990510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7efd7b98e2a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efd7b98e020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efd7b98e990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efd7b9a1810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efd7b99f2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7efd7b99f020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efd7b9a0020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efd7b9a7aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efd7b9a0760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efd7b9a49b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efd7b9a1120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efd7b9a4270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efd7b9a30e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7efd7b9a39f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efd7b9a3770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7efd7b99fcb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7efd7b99fa30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efd7b9601f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7efd7bab4a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7efd7bab11f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7efd7bab42b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7efd7bccd810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efd7bf10020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7efd7bf0f020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7efd7bf10790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7efd7bf04270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7efd7bf04ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7efd7b7be750" loc="43:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7efd7b7cb930" loc="41:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7efd7b7be070" loc="42:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7efd7b7b9020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efd7b7bac50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7efd7b7b7520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efd7b7b72a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efd7b7ba270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efd7b7b9870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efd7b73e0b0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b78ddf0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7efd7b73d2a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b73d020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efd7b738620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b738020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b738350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efd7b7396d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7efd7b73b730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b73b170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b73b4a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efd7b748a60" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b748110" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7efd7b748490" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b7487c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efd7b741620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b741020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b741350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efd7b7426d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efd7b7462a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b746020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd7b7447f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b744210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efd7b744560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7efd7b74e810" loc="47:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7efd7b74e120" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7efd7b750980" loc="41:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7efd7b759820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7efd7b759020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7efd7b7b42c0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7efd7b816140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7efd7b7b57f0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7efd7b816140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efd7b7b5b40" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b7b4020" loc="19:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7efd7b7b5020" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7efd7b7bdc90" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7efd7b7b2130" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7efd7b816140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7efd7b7b4a80" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7efd7b816140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7efd7b7b4e80" loc="22:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7efd7b7b16e0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7efd7b816140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7efd7b7b28c0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7efd7b816140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efd7b7b2c10" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b7b1020" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7efd7b7b1430" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efd7b7bc070" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efd7b7bc880" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b7df4f0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b7df4f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efd7b7d71f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efd7b7dcaa0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7efd7b7da860" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efd7b7da290" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efd7b7da5d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7efd7b7dbaa0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7efd7b7d6270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7efd7b7d7980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efd7b7db2b0" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7efd7b7de0b0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efd7b7dfde0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7efd7b7d8820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efd7b7d8250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efd7b7d8590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7efd7b7deb70" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efd7b7de8f0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efd7b7dc390" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7efd7b74c980" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
              <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b74c020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efd7b74c370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b74c6a0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7efd7b7f0070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7efd7b7f0820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7efd7b7ef030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7efd7b7ed020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7efd7b7ec7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efd7b7e2020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7efd7b7ef7c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efd7b7e2b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efd7b7e2910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7efd7b7f18a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7efd7b7ed800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7efd7b7ec020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7efd7b7c4ba0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7efd7b7c3510" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7efd7b7c3290" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7efd7b7c3c20" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7efd7b7ca030" loc="42:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7efd7b7c7400" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7efd7b7c7180" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7efd7b7c2350" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7efd7b7c8270" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7efd7b7c7be0" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7efd7b7c44a0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7efd7b7c6380" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7efd7b7c66f0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7efd7b7c6a80" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7efd7b7c6e00" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7efd7b7c41e0" loc="51:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7efd7b7c89c0" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7efd7b7caad0" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7efd7b7ca850" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7efd7b7cd900" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efd7b6f3730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efd7b6f3e60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efd7b6f5880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efd7b6f2cf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efd7b6f3020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efd7b6f25b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efd7b6f8a90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efd7b6f5190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efd7b6c8a10" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efd7b6c7190" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7efd7b6c3b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efd7b6c3890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efd7b6ca270" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efd7b6c6070" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7efd7b6c2490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efd7b6c78d0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efd7b6c8270" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7efd7b6c4770" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7efd7b6caa10" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efd7b6cb350" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7efd7b6c67f0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7efd7b6c3020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7efd7b6c4020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efd7b6cba80" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b47ac40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b47ac40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efd7b4755a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b4705d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b4705d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efd7b470810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efd7b46b390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efd7b46d3b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7efd7b46c9d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efd7b46c400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7efd7b46c740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efd7b46db90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7efd7b46bb80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efd7b46f390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efd7b46f110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b470810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efd7b46fbc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7b3ff4f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7b3ff4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efd7b3ff730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b3ff730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efd7b3fe070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7b3ff730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efd7b3fd190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efd7b3fe8f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efd7b3fd8f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7efd7b2d6160" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efd7b2d6160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7efd7b2d6ca0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efd7b2d6160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7efd7b2d6a20" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efd7b2d6160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7efd7b2b4550" loc="102:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7efd7b2bb350" loc="77:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7efd7b2b3020" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7efd7b2b4c60" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7efd7b2b8780" loc="94:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7efd7b2b5df0" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7efd7b2b5b70" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7efd7b2bc4d0" loc="71:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7efd7b2bbda0" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7efd7b2bbb20" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7efd7b2b75a0" loc="97:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7efd7b2b8e60" loc="95:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7efd7b2b5420" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7efd7b2b7d50" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7efd7b2b5190" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7efd7b2b9800" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7efd7b2b9580" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7efd7b2b8020" loc="90:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7efd7b2b3bc0" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7efd7b2b3940" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7efd7b2bcbd0" loc="74:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7efd7b2c29d0" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7b2c2750" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7efd7b2bd020" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7efd7c5c7a20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7efd7b2bf150" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7efd7b2bf490" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7b2bf7d0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7efd7c5c7a20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7efd7b2bfbe0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7efd7b256360" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7efd7b258c70" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7efd7b2560d0" loc="29:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7efd7b2583e0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7efd7b267ce0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7efd7b258150" loc="14:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7efd7b255360" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7efd7b256cc0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7efd7b2550d0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7efd7b269b90" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b269910" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7efd7b2627b0" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7efd7b262530" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7efd7b265c10" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b265990" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7efd7b266660" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b2663e0" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7efd7b265110" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7efd7b266e30" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7efd7b263e70" loc="52:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7efd7b2636c0" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b263440" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7efd7b246e80" loc="23:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7efd7b244600" loc="24:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7efd7b2466b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7efd7b2477b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7b247b00" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7efd7b246020" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7efd7b246400" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7efd7b24bbe0" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7efd7b83ba80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7efd7b83a020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b24b540" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7efd7b24b950" loc="12:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7efd7b83ba80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7efd7b83a020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7efd7b24aab0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b24a4b0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7efd7b24a820" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7efd7b248860" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7efd7b2481f0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7efd7b2485d0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7efd7b247020" loc="20:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7efd7b24f950" loc="27:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7efd7b261b30" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7efd7b2618b0" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7efd7b253c80" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7efd7b253a00" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7efd7b250390" loc="21:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7efd7b250a60" loc="22:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7efd7b253270" loc="11:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7efd7b24d350" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efd7b24d0d0" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7efd7b251420" loc="16:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7efd7b251c10" loc="18:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7efd7b24f1f0" loc="24:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7efd7b2702e0" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7efd7b752ec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7efd7b751520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7efd7b270020" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7efd7b25a2e0" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7efd7b7aea30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7efd7b25a020" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7efd7b25dc40" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7efd7b7aea30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7efd7b25d610" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7efd7b25d970" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7efd7b25ed40" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7efd7b7ae6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7efd7b25eac0" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7efd7b7ae6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7efd7b25c760" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7efd7b7aea30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7efd7b7ae6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7efd7b25c4a0" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7efd7b7ae6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7efd7b25e2d0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7efd7b7ae6f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7efd7b260490" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7efd7b2607f0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7efd7b260c30" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7efd7b25e020" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7efd7b26d7e0" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7efd7b272d90" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7efd7b26d180" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7efd7b26d540" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7efd7b26ba20" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7b26b0d0" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7efd7b26b420" loc="22:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7efd7b26b780" loc="23:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7efd7b26c970" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7efd7b26c020" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7efd7b834770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7efd7b26c370" loc="18:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7efd7b26c6d0" loc="19:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7efd7b047830" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b0475b0" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7efd7b041560" loc="5:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7efd7b83d210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7efd7b03e560" loc="10:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7efd7b040e80" loc="8:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7efd7b83d630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7b040c00" loc="8:../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7efd7b83d630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7efd7b040490" loc="7:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efd7b83e670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7efd7b83da70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7efd7b041cf0" loc="6:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7efd7b83d630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7efd7affda70" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efd7b83e670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7efd7b83edd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7efd7aff0640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7efd7aff0060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7efd7aff03b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7efd7aff1020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7efd7aff3690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7efd7aff3020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7efd7aff3400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7efd7aff9a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efd7aff97c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7efd7aff18a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7efd7aff5540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7efd7aff52c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7efd7aff8b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7efd7aff8910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7efd7afef8a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7efd7aff46b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7efd7aff4430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7efd7afef070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7efd7aff6350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efd7b83e670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7efd7b83edd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7efd7aff6b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7efd7aff9020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7efd7aff81f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7efd7aff5ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efd7afca5c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efd7afca5c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7efd7afcae80" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efd7afc1bd0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efd7afca5c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efd7afc1620" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efd7afc1940" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efd7afca5c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7efd7afc7960" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7efd7afc5a80" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7efd7afc52b0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7efd7afc80e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7efd7afc7120" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7efd7afc6270" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7efd7afc6a90" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7efd7afc8940" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efd7afceb60" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7efd7afcfb60" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7efd7afcf1f0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efd7afce390" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efd7afcd5e0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efd7af9fc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7af9f990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efd7af9e710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7af9e490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7efd7afa7560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7efd7afa64f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7efd7afa7d40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7efd7afa8cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7efd7afa86f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7efd7afa8a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7efd7af9ae40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efd7afa4e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efd7afa4020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7efd7afa4890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7afa4be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efd7afa1610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efd7afa2770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7efd7afa1020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7afa1370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efd7afabc30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efd7afab470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7efd7afacce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7efd7afac420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7efd7ae89bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efd7ae88d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efd7ae885c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efd7ae88340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7efd7ae89350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efd7ae66a60" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efd7ae63540" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efd7ae662d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7efd7ae65cf0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7efd7ae65a70" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7efd7ae69b00" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7efd7ae652b0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7efd7ad52270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7efd7ad52ac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7efd7ad51350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7efd7ad2ab60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ad2a580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7ad2a8d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7efd7ad25dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ad25490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7ad257e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efd7ad25b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efd7ad276b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ad270d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7ad27420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7efd7ad2c730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efd7ba6f020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ad2c150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7ad2c4a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efd7ad282c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ad29930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efd7ad29c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efd7ad28020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efd7ad0bdf0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7efd7ad0b480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7efd7ad0b810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7ad0bb50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd7ad093c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7efd7ad086a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7efd7ad08a30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7ad08d70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efd7ad09110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7efd7ad0fc90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7efd7ad0fa10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7efd7ad017f0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7efd7ad04d40" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7efd7ad01020" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7efd7ad02c70" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7efd7ad024d0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7efd7ad0da80" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7efd7ad0d800" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7efd7ad04560" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7efd7ad042e0" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7efd7ac266f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efd7ac25070" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efd7ac1e710" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efd7ac58020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efd7ac58440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7efd7ac232a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ac23020" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7efd7ac21680" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ac21400" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7efd7ac23b10" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efd7ac202a0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ac20020" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7efd7ac17ca0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7efd7ac17480" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7efd7ac0f2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ac0f020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7efd7ac10780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7efd7abebaf0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7efd7abf7790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7efd7ac04610" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac75080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efd7ac758c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efd7ac04390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac75080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efd7ac758c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7efd7abf9870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7efd7ac01a90" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac70080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efd7ac708c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efd7ac01810" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac70080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efd7ac708c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7efd7abf0e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7efd7abed480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7efd7ac01070" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac72020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7efd7ac727b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7efd7ac002b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac70080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7efd7ac708c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7efd7abfc020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7efd7abfdd30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7efd7abfd610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7efd7abf0740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7efd7ac02840" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac72020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efd7ac727b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efd7ac025c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac72020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efd7ac727b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7efd7abfe420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7efd7abef5d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7efd7abfee00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7efd7abfeb80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7efd7abfb910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7efd7abf90e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7efd7abf2840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7efd7abf4790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7efd7abf87e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7efd7abf0020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7efd7abf6020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7efd7abefcf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efd7abfc800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efd7ac7cdc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7efd7ac77680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7efd7abee4c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7efd7abeb350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7efd7ac00c50" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7efd7ac009d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7efd7abea4d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7abea250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7efd7ac04df0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efd7ac75080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7efd7ac758c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7efd7abf8020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7efd7abf6770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7efd7abf2020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efd7ac47e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efd7ac452b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efd7abf3cf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efd7ac47e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efd7ac452b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7efd7abf32a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efd7ac58020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efd7ac58440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efd7abf3020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efd7ac58020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efd7ac58440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7efd7abead90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7efd7abeecb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7efd7abfb070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7efd7abedbe0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7efd7abf4020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7efd7abf7020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efd7ab83600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7efd7ab5c070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7efd7ab6fb10" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7efd7ab63d50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7ab63ad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7efd7ab76270" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7efd7ab5f350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7efd7ab68cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7efd7ab70c50" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7efd7ab6d9c0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efd7ab71c00" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7efd7ab71980" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7efd7ab72120" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7efd7ab6b790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7efd7ab62c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7efd7ab5d8f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7efd7ab63390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7efd7ab58b60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7efd7ab53270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7efd7ab750e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7efd7ab6b020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7efd7ab6a910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7efd7ab70500" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7efd7ab78020" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7efd7ab64ba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efd7ab64920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7efd7ab7b7d0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7efd7ab61b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7efd7ab5c7d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7efd7ab55350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7efd7ab54a90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7efd7ab5e270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7efd7ab5a020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7efd7ab62520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7efd7ab59bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7efd7ab75800" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7efd7ab66020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7efd7ab59020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7efd7ab5d190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7efd7ab68520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7efd7ab682a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7efd7ab55af0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7efd7ab641f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7efd7ab5fac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7efd7ab78aa0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efd7ac33b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7efd7ac31020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efd7ab78820" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efd7ac33b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7efd7ac31020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7efd7ab6c870" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7efd7ab74980" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efd7ab74700" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7efd7ab6a120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd7ab6be70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7efd7ab583b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7efd7ab71270" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7efd7ab74020" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7efd7ab669e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7efd7ab66760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7efd7ab769a0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7efd7ab5a740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7efd7ab5e9e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7efd7ab61420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7efd7ab67740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7efd7ab674c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7efd7ab6c120" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7efd7ab6f3b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7efd7ab542b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7efd7ab72aa0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efd7ab72820" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7efd7ab57350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7efd7ab6d270" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7efd7ab57b10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7efd7aab6780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7efd7aab5020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efd7aa80900" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7efd7aa7fa20" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efd7aa80070" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efd7aa7f1f0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efd7aa7d390" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7efd7aa73b50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efd7aa7cb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efd7aa738d0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efd7aa7cb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7efd7aa78b80" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7efd7aa756b0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efd7aa7cb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efd7aa75430" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efd7aa7cb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7efd7aa73020" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7efd7aa7cb30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7efd7a844d70" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a844d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efd7a83d0e0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a844d70"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7efd7a8408a0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7efd7a8416b0" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7efd7a83f350" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a844d70"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7efd7a83f0d0" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a844d70"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7efd7a840020" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7efd7a84e020" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a84e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7efd7a84b790" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a84e020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7efd7a8492a0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a84e020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7efd7a849020" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a84e020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7efd7c5bec30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7efd7c5bec30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7efd7a8482a0" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a84e020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7efd7a848020" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7efd7a84c070" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7efd7a84b020" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7efd7a84a390" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd7a84e020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7efd7a84e8d0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7efd7a84c7f0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7efd7a778cb0" loc="43:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7efd7a7745a0" loc="50:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7efd7a74fd30" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7efd7a74f330" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7efd7b819cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7efd7a74f740" loc="19:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7efd7a74fa90" loc="20:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7efd7a74c8e0" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7efd7a74ee70" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efd7a74c210" loc="29:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7efd7a74c640" loc="30:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd7a74e740" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7efd7a74e4c0" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7efd7a6c0740" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7efd7b83ad50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7efd7a6c3d10" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7efd7b83ad50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7efd7a6c0150" loc="19:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7efd7b8031b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7efd7a6c04a0" loc="20:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7efd7a6bd480" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7efd7a6be9d0" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7efd7b816aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efd7a6bed40" loc="29:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7efd7a6bd1e0" loc="30:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7efd7b8055e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd7a6be2a0" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7efd7a6be020" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7efd7b278870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7efd7a5c98f0" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7efd7a5c98f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7efd7a5c6b20" loc="34:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efd7a5c6450" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7efd7a5c98f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7efd7a5c61d0" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7efd7a5c98f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7efd7a595c80" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a595a00" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7efd7a5952a0" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a595020" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7efd7a5882b0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a589bd0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7efd7a588020" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7efd7a587430" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a5871b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7efd7a5893e0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7efd7a58a9e0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7efd7a58a760" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efd7a5a0890" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a5a02d0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7a5a0600" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efd7a599020" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a59b890" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7a59bbc0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efd7a59b020" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efd7a59eb90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a59e910" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd7a59d0c0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a59ca80" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efd7a59cdd0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7efd7a58e680" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a58e400" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7efd7a592770" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a592150" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7efd7a5924e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7efd7a590650" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a5903d0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7efd7a591b70" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a591550" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7efd7a5918e0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7efd7a58d650" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a58d3d0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7efd7a2ac780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a2ac500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7efd7a2b9be0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a2b9600" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7efd7a2b9950" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7efd7a2b43a0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a2b5d50" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7efd7a2b4110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7efd7a2b86e0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7efd7c5b9110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a2b8460" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7efd7a2b52a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a2b5020" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7efd7a2bddd0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a2bdb50" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7efd7a2b62a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a2b6020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7efd7a2b22e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a2b2060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7efd7a2b0510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a2b0290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7efd7a2af680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a2af400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7efd7a29fe40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a29fbc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7efd7a2a0120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a2a1e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7efd7a2a27a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7efd7a2a2520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7efd7a2a4bd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7efd7a2a4950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7efd7a2a12a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7efd7a2a1020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7efd7a29f020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a2a0d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efd7a293040" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a294a50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7efd7a294d80" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efd7a291350" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7efd7a28fc50" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efd7a290e00" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7efd7a28f680" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd7a28f9b0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd7a290600" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efd7a290020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efd7a290370" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7efd7a293ad0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7efd7a293850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7efd7a287ae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a287820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7efd7a287020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7efd7ba6edf0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7efd7ba6c7d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a288be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7efd7a286de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7efd7ba6a3e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7efd7ba682e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a286ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7efd7a233890" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7efd7a21c020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efd7a21c020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efd7a21c260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7a21c260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7efd7a2190b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7a21c260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a21ae00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7efd7a2182a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a218020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7efd7a21ce20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a21cba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efd7a217610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7a21c260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a217020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7efd7a217380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efd7a21c260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7efd7a1f9420" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7efd7a1faa20" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7efd7a1f9190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7efd7a1fa270" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7efd7a1fca00" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efd7a1fc780" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efd7c5b8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7efd7a20fcb0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a20fa30" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7efd7a213c90" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a213a10" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efd7a20cc80" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a20ca00" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efd7a20dca0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd7a20da20" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7efd79d6d840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d6d5c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7efd79d76350" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d760d0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7efd79d79790" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7efd79d782a0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d78020" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7efd79d73c40" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d73660" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efd79d739b0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7efd79d75760" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d75180" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efd79d754d0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efd7ba31560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7efd79d702e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d70060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7efd79d6e680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d6e0d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7efd79d6e3f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efd7ba32d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7efd79d710b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d74e00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7efd79d6ad00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efd79d6a720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7efd79d6aa70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7efd79d69b50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efd7ba31180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7efd79cfd020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd79cfe960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7efd79cfece0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7efd79cff020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7efd79cfe020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efd79cff8b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efd7ba210c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efd7ba206f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7efd79cffc20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7efd79ce4190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7efd79ce79e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7efd79ced270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7efd79cec6c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7efd79cea390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd79cea110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7efd79ceb020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7efd79cedde0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd79cedb60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7efd79ceabf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7efd79ceb8d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7efd79cf6c10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7efd79cf4590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7efd79cf62a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7efd79cf6020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7efd79cf32a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efd79cf3020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7efd79cf1020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7efd79cf1c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efd79cf19c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7efd79cf0730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efd79cf04b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efd79bbfdd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efd79bbf800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd79bbfb40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7efd79bb9ac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efd79bb9840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efd79bb6930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efd79bb6360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd79bb66a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7efd79bb8740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7efd79bb52c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efd79bb4920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd79bb4c60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efd79bb5020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7efd79bb9070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efd79bba720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efd79bbbdb0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efd79bba130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efd79bba480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efd79b945b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efd79b94330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7efd79b94df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efd79b93cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efd79b93700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7efd79b93a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efd7c5b8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7efd79b91b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efd79b89420" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efd7ac47e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efd7ac452b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efd79afb860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efd79afa0e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7efd79a33470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7efd798e8b80" loc="43:../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd798e8b80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7efd798e3350" loc="80:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd798e8b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7efd798e1580" loc="97:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efd7bf0bc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd798e8b80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7efd798e1300" loc="97:../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd798e8b80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7efd798e0020" loc="108:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd798e8b80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7efd798e1d50" loc="108:../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7efd798e5bd0" loc="57:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7efd798e4ba0" loc="72:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7efd798e3b10" loc="88:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7efd798e8b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7efd798e5460" loc="50:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efd7bf13090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7efd798e4390" loc="65:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efd7c5b8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7efd798bf0b0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7efd798c2dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
