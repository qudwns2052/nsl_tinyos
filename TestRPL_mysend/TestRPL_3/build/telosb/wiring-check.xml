<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce3480130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1aa5800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ce34755a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ce1aa6600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ce346c7a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ce1aa5e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ce1aa5e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ce1a36d60"/></to>
    </wire>
    <wire loc="67:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ce352b750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ce374d220"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ce374d220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ce358f590"/></to>
    </wire>
    <wire loc="68:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce34ed8b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce24a3510"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce24a3510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1b68440"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce35170d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3422020"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7f4ce350c820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce31ba640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce31ba640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f4ce34f86b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f4ce2e93320"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f4ce2e93320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f4ce2daea10"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f4ce34f49f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f4ce2e94080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f4ce2e94080"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f4ce2daf880"/></to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce34f2d90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2e949e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce2e949e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2dae270"/></to>
    </wire>
    <wire loc="76:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7f4ce34e7a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f4ce1702020"/></to>
    </wire>
    <wire loc="15:../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f4ce1702020"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f4ce1700a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f4ce3484b50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2592020"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2592020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f4ce24e04b0"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce3509c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce3009020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce3009020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce348fb60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce2ff84e0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce15c35a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce15edcc0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce16f6020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0a60ca0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1a30540"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0b5c900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0b7d620"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0b90900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0bb9690"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0bccaf0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1c57dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1cdfb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1cfe430"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1e5a620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1f50020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce2c3b7e0"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce22d0720"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0e0e140"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce29c0020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce2ce6610"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce2d29c50"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce2ffca90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce31a8400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4ce358fc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4ce3c453a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4ce3c453a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4ce37ef140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4ce35836c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce3750700"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce3750700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce374a910"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce3583dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ce3747060"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ce3729020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ce3729020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce3726020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4ce3747740"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce3749c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f4ce3747e20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce33fac40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce3726020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce3711cb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ce371f6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ce370f3d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ce38c74c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ce370e680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f4ce36cb5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce36086d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f4ce36b9020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce3600b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f4ce36c2700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce360d160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f4ce36a6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35e7cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f4ce36c9aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce360e480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f4ce36ad020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35e7020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f4ce36a3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35cfcb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f4ce36b45a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce35e0220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f4ce36ccb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce365d9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f4ce36a8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35f62f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f4ce36af3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35f7610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f4ce36b85a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce35f8220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f4ce36c1700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce36067a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f4ce36a5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35de2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f4ce36b7be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce35f06d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f4ce36c8890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce3607ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f4ce36dc060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce366b540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f4ce36adda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35df610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f4ce36d20c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce360f020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f4ce36b3a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce35d96d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f4ce36bc6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce3615a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f4ce36a7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35ee7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f4ce36c4cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce3617de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f4ce36ae1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35efac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f4ce36a4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35d77a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f4ce36b50c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce35e9b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f4ce36abb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35d8ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f4ce36a9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce35fecb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f4ce36aaa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35cf020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f4ce36b0570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4ce35fe020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f4ce36b1020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f4ce35d1b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4ce3669450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce366ad80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ce3669aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4ce35caa90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ce3668120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4ce35c7260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce3614930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce366b540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce3612020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce366ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce360c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce366b540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce360b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce366ad80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce3604610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce366b540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce3603c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce366ad80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f4ce36622f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ce3662940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4ce35c79f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ce3660020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4ce35c6240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35fdb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35fb2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35f4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35f37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35ed610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35ecc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35e6b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35e32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35dd160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35dc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35d6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35d4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce35ceb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f4ce35cc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce37ed040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f4ce37e7490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f4ce3bdc3b0"/></to>
    </wire>
    <wire loc="243:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f4ce3438080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce33fac40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce34258d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4ce341a7b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f4ce33fd360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4ce33fd360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce31e2020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4ce3420980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f4ce33fc6a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4ce33fc6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce31ceb90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4ce341fca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f4ce33fb9c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4ce33fb9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce31c9710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce31d12f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f4ce33a2200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f4ce33a2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce327f740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce31cdde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f4ce33a0200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f4ce33a0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce327a100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce31c8930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f4ce339e200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f4ce339e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3276d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4ce33e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3318100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4ce33cf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32e9d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f4ce3386560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32dad10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f4ce3361570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324f100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f4ce3384580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32d5740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f4ce33cb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32de100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f4ce33b7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32afe00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f4ce3392200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3259d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f4ce337e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32ccd10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f4ce336d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce326b100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f4ce3359580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324ad10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4ce33de020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce330a100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f4ce337c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32c7740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4ce33d9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3300740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f4ce33c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32d0100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f4ce33b1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32a1d10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f4ce339c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3270740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f4ce338c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324ad10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4ce33e8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3322d10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4ce33d3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32f2860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f4ce33bf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32c2100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f4ce3388580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32dad10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f4ce3367570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce325d100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f4ce335b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324ad10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f4ce3373580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3284d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f4ce33bb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32b8a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f4ce33a6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3288100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f4ce3396200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3262740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f4ce3365570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3259d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f4ce3379570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3292d10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4ce33e2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3314d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4ce33cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32e4740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f4ce339a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce326b100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f4ce33c9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32dad10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f4ce33b5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32aa740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f4ce3390200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3254740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f4ce3375580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3288100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4ce33f50a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce332c6d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4ce33d7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32fb100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f4ce33c3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32ccd10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f4ce33af200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce329c740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f4ce3371580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32c2100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f4ce336b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3267d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f4ce335f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324ad10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f4ce33aa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3292d10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f4ce336f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32bed10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4ce33e6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce331d740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4ce33d1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32ed270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f4ce33bd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32bed10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f4ce3377580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce328d740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f4ce3363570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3254740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f4ce33b9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32b3460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f4ce33a4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3284d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f4ce3394200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce325d100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4ce33e0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce330f740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f4ce3398200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3267d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4ce33dc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3306d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f4ce33c7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32d5740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f4ce33b3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32a5100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f4ce338e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324f100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4ce33ea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3326100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4ce33d5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32f7d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f4ce33c1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32c7740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f4ce33ad200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3297100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f4ce3380560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32d0100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f4ce3369570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3262740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f4ce3382580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32d0100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f4ce33a8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce328d740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f4ce335d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce324f100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f4ce3357580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce3270740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f4ce338a1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4ce32de100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31a71d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31a71d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce3031690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce31a8400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce30ac760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4ce319da80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ce3022cf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce30ac760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce10e2490"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4ce302bc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce3080cf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ce307a1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce30ab020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ce30ab020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce10db140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce3017020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce3129020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce3129020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce30ed0f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce10e2490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce10c6e60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ce10d5b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce10e2ce0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ce10e2ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce10c5720"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce10d7690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce3129020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce10c1910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce10ccc50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce10ccc50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce10bf020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce10c92b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce10c92b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce10be440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce10c85d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce10c85d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f4ce36b9020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f4ce36b0570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f4ce36b7be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f4ce36ae1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f4ce36b50c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f4ce36ad020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f4ce36b45a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f4ce36adda0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f4ce36b3a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f4ce36abb80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f4ce36b1020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f4ce36aaa20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4ce30eb540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ce3120020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ce3120020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce311b0a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce310d2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f4ce3076490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f4ce3026e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f4ce2ffd370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f4ce2ff9390"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce30034f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce2ffca90"/></to>
    </wire>
    <wire loc="97:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7f4ce2fdbe60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce2f9e800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f4ce2fd9a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce1696980"/></to>
    </wire>
    <wire loc="98:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce2fe8bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2f9c570"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f4ce2fe53b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f4ce2f9cdc0"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f4ce2f98c70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f4ce2fd9a80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7f4ce2f97760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f4ce2e93320"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2f8aa50"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d6d020"/></to>
    </wire>
    <wire loc="104:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce2f7d720"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce249f6e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f4ce2f93cc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f4ce1b48020"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce2f6d8a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23ed020"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23ed020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23e27a0"/></to>
    </wire>
    <wire loc="107:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f4ce2f755f0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f4ce1b07540"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f4ce1b07540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f4ce1b03360"/></to>
    </wire>
    <wire loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7f4ce2f22380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f4ce2dab310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f4ce2fe53b0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7f4ce2dabab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce1ac1840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f4ce2daa3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce2d8a140"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce2d8a140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7f4ce2da5730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce2d84b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce2d84b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce2d9be00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce2d9a5e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7f4ce2fdbe60"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d98270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7f4ce2d972b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2fe8bb0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2d97a10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2592020"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f4ce2da0ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce2d7d4e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce2d7d4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f4ce2d96590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f4ce1b07540"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce2d95a40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23ed020"/></to>
    </wire>
    <wire loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7f4ce2d93ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f4ce2d92ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7f4ce2d912f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7f4ce2d922f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7f4ce2d91ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce2d72020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce2d6c4a0"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d67800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d71690"/></to>
    </wire>
    <wire loc="9:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d71690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d26300"/></to>
    </wire>
    <wire loc="12:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2d25da0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2d04020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2d17b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2cf97e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2cf97e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2ce59f0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f4ce2cec1b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f4ce2ce2cd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce2cedd90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce2ce38d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce2cf5980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2ce6c80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f4ce2cdfe40"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c37220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c37220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c31af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ce2cda0e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ce2bf2e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ce2bf2e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2be5b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4ce2cd9380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f4ce2bee6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4ce2bee6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bd6d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4ce2cd86a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f4ce2becce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f4ce2becce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bcc710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ce2cd60e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ce2bb6d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ce2bb6d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ce2a98a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ce2cc01d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2641e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce2641e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ce2cbf2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f4ce263d7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ce263d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce2cbf9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce263cae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce263cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce2cc1a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce263ead0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce263ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce2cc1120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce263b160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce263b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2cc6b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2631870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2631870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce2ccd3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce262e880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce262e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce2ccdc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce262d0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce262d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2cc55f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2635e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2635e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2cc4020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2634670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2634670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ce2cd1520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f4ce2620500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ce2620500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce2cc9a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce2621ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce2621ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2cc48e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2632e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2632e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ce2cc31c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f4ce2634e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ce2634e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2cc3a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2633e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2633e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f4ce2cbed90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce260ea80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce260ea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f4ce2cbe020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce25e29e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce25e29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ce2cce810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ce25b5b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2cdf450"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2d04020"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f4ce2cb2820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f4ce2cb4940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce2c3b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce2c31260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce2c31260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0f86a10"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c31af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f852a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce0f86a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0f7ea10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f852a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f785f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce0f7ea10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce0f62510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ce0f72d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f7d2a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f7d2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f62da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce0f749b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce2c1b080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce2c1b080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce2c16cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce0f5d020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce0f671b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce0f671b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce0f5c760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce0f668f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce0f668f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce0f5ba80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce0f65c10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce0f65c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4ce2c120f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ce3120020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4ce2bf0090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2be0710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4ce2bef390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bda1d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4ce2bf5b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2be9020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4ce2bed9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bd1b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2be82f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ce33e4020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2be4de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f4ce33b7200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bdf930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4ce33e6020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bd9480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ce33f50a0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bd4020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f4ce33af200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bd0de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4ce33b9200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bcb930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f4ce33b1200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ce2bb6150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4ce2baea20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ce2bb5a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f4ce2a88a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce2b9c5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f4ce36b85a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f4ce2b998f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f4ce36a8a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2b987a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f4ce33b9200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ce2a97610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ce2b898a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f4ce2b898a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f4ce2b758a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ce2a87610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ce2b8b8f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f4ce2b8b8f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f4ce2b7c810"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f4ce2b7fa30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f4ce2b6ba30"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f4ce2b868a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f4ce2b728a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f4ce2b848a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f4ce2b708a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f4ce2b8f8a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f4ce2b788a0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f4ce2b818a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f4ce2b6d8a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f4ce2b888a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f4ce2b748a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f4ce2b7ea30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f4ce2b6aa30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f4ce2b838a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f4ce2b6f8a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f4ce2b8a8a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f4ce2b778a0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f4ce2b80a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f4ce2b6ca30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f4ce2b878a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f4ce2b738a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f4ce2b858a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f4ce2b718a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f4ce2b908a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f4ce2b798a0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f4ce2b828a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f4ce2b6e8a0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ce263d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce262f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ce26270a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ce262e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce261b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce261e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce263c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ce2624880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce261f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce262a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ce262b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2640a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a42920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce263be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ce2638490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce2622c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce2638be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce261fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ce26240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce2633670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce26250a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ce2627880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce2625880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce261dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce261ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ce262b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ce26260a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce2620ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce262d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce261bce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce263e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ce2635670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce2632670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce26280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce2628880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce262f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce26362f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ce2635020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce263b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce2621500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ce261d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce262a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ce2626880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ce263de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce262c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ce2636940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ce262c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ce26220a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce261a9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a3ebb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a3b020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a3bdb0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2a3f810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a3aba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f4ce2a29b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29ca770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce29ca770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ce2a39400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce29a7c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce29a7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce0e8fc30"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ce2a36080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ce29a68f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ce29a68f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ce0e8c0c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce2a2d680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce2666020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce2666020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce0e8b2b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce2a34a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f4ce2a24bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29c0b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce0e8b2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce293e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ce0e8c0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ce2941dd0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce0e8fc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2947a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e8d8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e812c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e812c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce27cc8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4ce2941dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4ce28c5440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce0e8c6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce2940480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce2940480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce28c5a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce293b600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce0e8ba50"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0e73760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce29415e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ce293d370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce0e82640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce0e82640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce27cd5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce29376a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce0e7bc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce0e7bc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ce27d2a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce29415e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce28c6c40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce293e510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce28c4700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce2947a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce28c7e80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce28c3e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce293b600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ce28c3060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4ce293d370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce28bede0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce29376a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4ce28c2490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce28b5860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce28b5860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ce28a9020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce28bd5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f4ce28bbc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ce28ab8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce28a4750"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce28ae3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ce28a5dc0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ce2876700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4ce3388580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4ce2874670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f4ce3384580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ce2872670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4ce3382580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4ce2870670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f4ce337c580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4ce286e670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f4ce337e580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f4ce287b5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4ce2723430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ce0e7a440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce27cf9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ce0e7aa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ce272f880"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ce272f880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f4ce2723430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce0e802b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce28b5860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0e81a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce27cb130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce27cb130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce2737060"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce27ca020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0e73760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce27cc8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce2739bf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce2739bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e0a850"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4ce27d2a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ce27c85c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce27cd5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce273ae60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce273ae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce0e0b970"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce27cf9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce27b4020"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce2737060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0e09c30"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce2737930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce27ca020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce27b34b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce2737060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ce27b4690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce28ae3b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ce27b4e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ce28ab8a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce2738400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce0e09020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0e08590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce2737930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ce0e08d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ce0e0e750"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4ce0e05020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f4ce271c250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ce28a9020"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ce2718d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f4ce3388580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ce2716cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f4ce3382580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2601c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ce260cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2605b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce25ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ce25f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ce25ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce25eb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce25ed2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce260a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ce25f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce25ee2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ce2603c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2602c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce25f9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ce25fbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce25fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce260d760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce2608aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ce2607120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce25f2a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce2607870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce25eead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce260adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ce25f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce2602480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2603480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce260c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce25f5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ce25f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce25f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce25ecad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce25edad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ce25fa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ce25f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce25f0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce25fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce25ebad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce260c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ce2605370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce2601480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce25f9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce25fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce25f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2600670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ce260b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce2600e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce2606020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ce2606cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ce25f02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce25f1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce2608450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce25f12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ce25ec2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce25fae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ce25f5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ce260baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce260a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce25fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ce2606670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ce25fb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ce25f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce25ea7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce25d5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ce25dfda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce25d8b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce25d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ce25cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ce25d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce25be2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce25c12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce25dd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ce25c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce25c22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ce25d7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce25d6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce25cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ce25cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce25d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce25e1760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce25dcaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ce25db120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce25c5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce25db870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce25c2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce25dddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ce25c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce25d6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce25d7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce25df750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce25c9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ce25ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce25c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce25c0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce25c1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ce25ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ce25cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce25c3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce25d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce25bead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce25df100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ce25d8370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce25d5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce25cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce25d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce25cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce25d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ce25de450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce25d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce25d9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ce25d9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ce25c32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce25c4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce25dc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce25c42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ce25c02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce25cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ce25c9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ce25deaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce25dd770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce25d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ce25d9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ce25cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ce25c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce25bd7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f4ce2591020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce1696980"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce2d746f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce24e0da0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7f4ce24cfbb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f4ce2591020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f4ce24df720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce24babd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce24babd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f4ce24d4020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce24b3560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce24b3560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7f4ce24daae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce24ac020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce24ac020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce24cf410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce24cd400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f4ce24c4980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f4ce2e93320"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f4ce24c2270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f4ce2e94080"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce24c1590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce24a1560"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce24a1560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce2499d20"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f4ce24cc5a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f4ce1b1aae0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7f4ce24c70f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce1b124a0"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f4ce1b124a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce0b5b020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f4ce24c2b60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f4ce1b48020"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7f4ce24c02f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7f4ce24c0ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce249f6e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce247d890"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f4ce249c930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f4ce247ea50"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7f4ce24a2d40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7f4ce247ca90"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce249e9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2e949e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce249e9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2d746f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce24a2540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce24981d0"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce1b65020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce249e130"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce1b658c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce249e9d0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7f4ce1b641a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce22f2020"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce22f2020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce22d16d0"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f4ce1b64dd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce23ec980"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce23ec980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce23e1790"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7f4ce2497ae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce247c290"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f4ce24791d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f4ce23ec020"/></to>
    </wire>
    <wire loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f4ce23ec020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f4ce23eada0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f4ce23e5720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f4ce22f2af0"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f4ce22f2af0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f4ce22d0d60"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce2342a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce24981d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce23402d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2479b20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f4ce2478c30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f4ce1b48020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f4ce24962d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f4ce1b48020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce1b635c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f4ce2473790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce1b2fa40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f4ce1b2fa40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce0b7dd10"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7f4ce246f1c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce1b2a970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce1b2a970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f4ce245be40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7f4ce23e0060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce2347a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7f4ce23e0860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce23109b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7f4ce23df0a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce230e9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7f4ce23df8a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce230c9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7f4ce23de270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce23097b0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce23097b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce23d9450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce23d9c50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce2499d20"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f4ce23d7900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f4ce23e5720"/></to>
    </wire>
    <wire loc="39:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce23d62d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce23d5300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d71690"/></to>
    </wire>
    <wire loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7f4ce23a2380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce2347a30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce0cce1f0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f4ce0cce9f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce23109b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce0cc3020"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f4ce0cc3820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce230e9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce0cb96a0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f4ce0cb8020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce230c9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce0cb0db0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f4ce0cae5e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce22f0020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce22cf940"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f4ce22cc060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1ff3420"/></to>
    </wire>
    <wire loc="30:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1ff3420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1feeb40"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ce22ccbd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1ff0020"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1ff0020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1fe7020"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f4ce22ca0f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4ce1ff0d00"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4ce1ff0d00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4ce1feaa00"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4ce22cae20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1fefa30"/></to>
    </wire>
    <wire loc="34:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1fefa30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1fe8820"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ce22be020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1be18f0"/></to>
    </wire>
    <wire loc="21:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1be18f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1fdb470"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce22bf020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce1bdb020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce1bdb020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce1bd6450"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce229abc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce22ea870"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7f4ce229f900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce1bdce70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce1bdce70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7f4ce22b4a10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce1bc5a40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f4ce1bc5a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce0bcb210"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7f4ce22a7150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce1b9c020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f4ce1b9c020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce0bb9d80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7f4ce22ab5f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce1b74020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f4ce1b74020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f4ce0b8f020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f4ce22a5c50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f4ce1b95850"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce22c94e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23e27a0"/></to>
    </wire>
    <wire loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f4ce20226e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1feeb40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1c4ab80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1fe8820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1cb35e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1fe7020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1cb1170"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4ce1feaa00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1cb48e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1c4ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4ce1c47d90"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1fd2170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1dd7a70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1dd7a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1dc7020"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1fdb470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1c36020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1c36020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1c30080"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1fdc640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1dcdd20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1fe7d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1cb3c90"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1cb3c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1ca8a20"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1fd27f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1c4a080"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1c4a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1c432d0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1cb35e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1ca8370"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1fe3080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ce1dd86e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ce1dd86e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ce1dc9c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1febd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce1cb5be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1cb5be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce1cab7b0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1cb48e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4ce1ca94d0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1cb1170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1ca6020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1fe6a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1cb2a50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1cb2a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1ca7840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ce1c47d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1fd6b20"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1fd6b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1fced90"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1cb06b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1d06dd0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1d06dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1cff660"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1d03b50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1c372a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1c372a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1c333a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c36d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1c4ece0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1c4ece0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c48860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c48860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1fd0790"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1fd0790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1fc38f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1cb0020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1c4b980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1c4b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1c47690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1c47690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1ce7aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1ce7aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1ce2e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1ce4950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1fcf490"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1fcf490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1e5f7c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1fc5230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1fc2650"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1e5f7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1e58020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1fc14b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2cf5980"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce1fc01a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce2cedd90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ce1fbf3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce1f609b0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4ce1fbf3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce1e625c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce1e625c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce1e5aca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce1f609b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce1f506a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ce1fbe080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ce1f5d300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ce1f5d300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1f4f020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f4ce1fbee00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1f5c020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1f5c020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1f4fcf0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1fb4b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1fac130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dc8640"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce1fbdc60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f4ce1facb90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce1d0d390"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce1d0d390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce1fb5470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f4ce1fa85d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f4ce1fa9660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f4ce1faa730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ce1f5bca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ce1f4ec90"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ce1f5a470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ce1f4d4b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f4ce1f4c020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c37220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f4ce1f3ad60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f4ce2bf5b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ce1f32080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ce2bf2e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f4ce1f31370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f4ce2bed9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ce1f3a1e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ce2bb6150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ce1f306e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce1e92c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1e92c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1f2f4e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1e918f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1e918f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce1f2c020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4ce1e902f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce1e902f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ce1f2c730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f4ce1e8fcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ce1e8fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1f2ce60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1e8d370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1e8d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1f2b5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1e8cd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1e8cd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1f2d6b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1e86c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1e86c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1f2e020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1e6e7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1e6e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1f2ed80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1e722f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1e722f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1f2bd00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1e87480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1e87480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1f290c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1e84e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1e84e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1f29990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1e83670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1e83670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ce1f2a930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f4ce1e8a7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ce1e8a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1f27530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1e70ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1e70ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce1f28380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4ce1e712f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce1e712f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce1f28bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4ce1e71ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce1e71ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1f1f780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1e62df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1e62df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1e59550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1f48210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1f470c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ce1f46200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ce1dd6550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ce1dd6550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ce1dc7a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1f33570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1dce480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1dce480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1dbf8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce1f26110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce1e85c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ce1e8f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce1e89c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ce1e7ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ce1e83e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1e6f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ce1e77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ce1e87c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce1e7d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ce1e7fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce1e82670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ce1e8b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce1e76a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce1e8bac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1e72ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce1e8c060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ce1e78e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce1e86480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce1e90940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce1e79e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ce1e7b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce1e78670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ce1e7e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ce1e7be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce1e74ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce1e80670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1e6fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ce1e89490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce1e85480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce1e7de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce1e82e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce1e7c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce1e84670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ce1e8f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1e8a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ce1e8ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ce1e742f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce1e75ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1e8c6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce1e752f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ce1e702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce1e7ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ce1e79670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce1e8d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce1e80e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ce1e7f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ce1e77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ce1e5d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ce1e587c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce1e43150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f4ce1e57020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f4ce2bf2e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f4ce1e56380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f4ce2bf0090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f4ce1e556b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f4ce2bef390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ce1e54a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ce2bb5a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4ce1e536e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce1d5c520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1d5c520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1e52530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1d39480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1d39480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1e51ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1d57060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1d57060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ce1e513a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f4ce1d57d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f4ce1d57d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1e50330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1e4f1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ce1e4dd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ce1dd6550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce1e4fb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2cf97e0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1e483e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1d4e840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1d4e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1e48cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1d4d060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1d4d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1e49b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1d55ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1d55ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1e456d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1d3ac60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1d3ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce1e47590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f4ce1d3dc60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f4ce1d3dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce1e47e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f4ce1d3b480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f4ce1d3b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1e44020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1d3d480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1d3d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce1e448b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f4ce1d5bc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f4ce1d5bc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f4ce1e389d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ce1dd2660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ce1dc3af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce1d69020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce2c1b080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4ce1dbc3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ce1d6ccf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4ce1dbb6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4ce319da80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce1d650b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce1d4f620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f4ce1d5a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce1d53620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f4ce1d46840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f4ce1d4d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1d59cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f4ce1d41060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1d3ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f4ce1d52620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1d51620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce1d47060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f4ce1d4a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce1d4c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1d5b2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1d576b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce1d40480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce1d55490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce1d589c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f4ce1d43840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce1d52e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1d53e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce1d5a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce1d44840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f4ce1d45060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce1d43060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1d3a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f4ce1d48060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f4ce1d45840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce1d3e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce1d4b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f4ce1d54e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce1d51e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce1d47840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce1d4c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce1d46060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce1d4e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f4ce1d59020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f4ce1d547b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f4ce1d3fc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce1d3f480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce1d40c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f4ce1d3bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce1d48840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f4ce1d44060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f4ce1d59670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce1d58370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce1d4b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f4ce1d54160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f4ce1d4a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f4ce1d41840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1d38160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1cfeb40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ce1d03b50"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce1cfd8f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce1d00690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce1d00690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4ce1cfc760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1cfb020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ce1ce4200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ce1cdf570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1cde3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1ce4950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1cdea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1ca6d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ce1cb06b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1ca5b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1cb0020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ca42f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1ca3170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ce1ca3b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ce1c56410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f4ce1c77db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f4ce1c49800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce1c45580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce1c45580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c30dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c36d70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f4ce1c2faf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce1bfa350"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f4ce1bfa350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f4ce1c2d650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4ce1bf8750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4ce1bf8750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1c2e9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4ce1dd86e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1c28a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f4ce1c252a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1ff1dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1fd27f0"/></to>
    </wire>
    <wire loc="22:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1be0670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1fe3080"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1bd6c70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce1b00990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce24a1560"/></to>
    </wire>
    <wire loc="30:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f4ce1aff8b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f4ce2e93320"/></to>
    </wire>
    <wire loc="31:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7f4ce1afd260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7f4ce2f98580"/></to>
    </wire>
    <wire loc="32:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f4ce1afd9b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2592020"/></to>
    </wire>
    <wire loc="33:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce1afc540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce2f9e800"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce1ac1840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce0b472e0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f4ce0b47ae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1aaa5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1a30b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1a30b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1a227c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ce1aa6600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ce1a8c300"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1aa5800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1a370d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1aa2800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1a34a10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1aa3020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1a376c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4ce1a30540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4ce1a22170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce1a2a2b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce1a92300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4ce1a334a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1a2c790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1a32120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce1a2dc60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f4ce1a25970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f4ce17168c0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1a2c790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce18f3de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4ce1a2dc60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4ce18f36c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f4ce18f1c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f4ce1a25970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce1a16020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce1a2a2b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce18ef920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce1a2a2b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce18e6cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce1a2a2b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f4ce18f0590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f4ce1a18c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f4ce18f0e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f4ce1a1b720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f4ce1a17020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f4ce18ebe00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f4ce1a10860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce18c1080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce18c1080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce1728080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ce18ddd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ce18c1890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ce18c1890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ce172f440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f4ce19bc6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f4ce19f34f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f4ce19bfc70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f4ce19b8a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f4ce18ed020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f4ce18ed800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ce18be020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ce172e440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ce172e440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ce18aa020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ce172f440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ce18ad860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce172d020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce17288e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1727020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce1730020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1730020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce18af7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1730c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0aca5d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0aca5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1772510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce18a8450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce172d020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0ac37c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce18aea30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ce18a91d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce0acb880"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce0acb880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce1773280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce18a61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce0ac3020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce0ac3020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ce1774510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce18aea30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce183bdc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f4ce18aa020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f4ce1839890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f4ce18ad860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f4ce183a6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce18af7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce183b020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce18373e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce18a8450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f4ce18385b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f4ce18a91d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce18325b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce18a61d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f4ce1837a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce1822d30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce1822d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f4ce181b550"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce1831020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4ce178e110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4ce178e110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ce3120020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4ce182e120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce181f860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ce1816130"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce1822500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce181ebc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f4ce1816a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f4ce3377580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f4ce1814990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f4ce3375580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f4ce1812990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f4ce3373580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f4ce180f990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f4ce336f580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f4ce180d990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f4ce3371580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce0ac85a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce1822d30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0acad70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1772d20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1772d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1767060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce1771af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0ac37c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1772510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1769bd0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1769bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0a5b3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f4ce1774510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f4ce176e230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce1773280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce176ae30"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4ce176ae30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4ce0a5c540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1767060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0a5a8b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ce176d2f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce181f860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce1767930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce1771af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce176c120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1767060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce174a9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce1768400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce1768400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce0a5bb20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce1761b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce1822500"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0a59210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce1767930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ce0a599d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ce0a5f330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4ce0a57c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce0a263a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce1761b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ce0a26b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ce174a400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce0a250f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce174a9d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0a25d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1749720"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce16fd7f0"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce16f6850"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f4ce1700a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f4ce16f7020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce16f4e20"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce24a2540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce16f3600"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ce16a8020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ce374d220"/></to>
    </wire>
    <wire loc="20:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f4ce16a8650"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce16a7620"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce2d72020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce16a7c80"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2d04020"/></to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce16a63a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23ed020"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f4ce1698130"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f4ce2e94080"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce16ab8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2e949e0"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce16ab8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2fe8bb0"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f4ce16ab8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f4ce2d746f0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f4ce1696980"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f4ce0a17ce0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f4ce0a16500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4ce15e7ca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f4ce1611760"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ce15e5df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ce1619870"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ce1619870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ce0a070c0"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ce15e4a90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ce1618590"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ce1618590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ce1aa5e10"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f4ce15c42a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f4ce15e7400"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1617270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1aa3020"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4ce16168f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1aa2800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce0a07d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1673ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ce0a06970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1aa3020"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4ce1673ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4ce1627580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4ce1625400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4ce1aa6600"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1624060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1aa3020"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4ce1623720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4ce1aa5e10"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f4ce1622480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f4ce1622c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f4ce15ded10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f4ce15c3c00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f4ce15c42a0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4ce15bab90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4ce374d220"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f4ce15b73c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1aaa5c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f4ce3544110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f4ce369d890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f4ce369dc30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f4ce369c020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f4ce369c3a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f4ce369c720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f4ce369ca90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f4ce369ce20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f4ce369b200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f4ce369b5d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f4ce365fe70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f4ce365c270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f4ce33529f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f4ce3352da0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f4ce33511a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f4ce3351550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f4ce33518c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4ce315c9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4ce315c9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4ce311a120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4ce311a120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4ce3109a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4ce3109a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4ce3106290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4ce3106290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4ce3106680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4ce3106680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4ce3106e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4ce3106e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4ce3105260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f4ce3105a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f4ce3105a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4ce30e6ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4ce30e6ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4ce30e32d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4ce30e32d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4ce30e36c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4ce30e36c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4ce30e2020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4ce30e2020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4ce30e23f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce30a44f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce30a44f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce3074d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce3074d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4ce30700d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce30201f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce30201f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4ce27ae020" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f4ce27a10d0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f4ce27857e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7f4ce2346020" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f4ce1bc7910" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc7910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f4ce1bc7c80" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f4ce1bc0e00" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f4ce1bc0e00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f4ce1bbd180" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f4ce1b98a50" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f4ce1b98a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f4ce1b98dd0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4ce16908b0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4ce16895d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f4ce166b0d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f4ce1613de0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f4ce1613de0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f4ce16101c0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f4ce374c720" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce374c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce374caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4ce374d220" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ce374d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ce374d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce3750700" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce3750700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3750a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f4ce3747740" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f4ce3747740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3747ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce374a910" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce374a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce374ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f4ce3747060" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ce3747060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce37473e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f4ce3747e20" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f4ce3747e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce37461c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce3749c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce3749c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3740020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f4ce3729020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f4ce3729020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce37293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4ce371f6c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ce371f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ce3725660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ce371fbd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ce371fd60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ce3725020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ce371fa40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ce37251b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ce3725340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ce37254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce3726020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce3726020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce37263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f4ce370f3d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ce370f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ce370e340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ce370f8e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ce370fa70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ce370fc00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ce370f750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ce370fd90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ce370e020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ce370e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4ce370e680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ce370e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4ce370ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce3711cb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce3711cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce370f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f4ce36cb5a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f4ce36cb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36cb920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36cbab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36cbc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36cbdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36ca020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36ca1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36ca340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36ca4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f4ce36b9020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f4ce36b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f4ce36c2700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f4ce36c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36c2a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36c2c10"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36c2da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36c1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36c11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f4ce36a6a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f4ce36a6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a5020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f4ce36c9aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f4ce36c9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36c9e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36c8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36c81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36c8340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f4ce36ad020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f4ce36ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36ad3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36ad530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36ad6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36ad850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36ad9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f4ce36a3a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f4ce36a3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a2020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f4ce36b45a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f4ce36b45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b4920"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b4ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b4c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b4dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b31b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b3340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b34d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f4ce36ccb10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f4ce36ccb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36d3020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36d31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36d3340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36d34d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36d3660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36d37f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36d3980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36d3b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36d3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f4ce36a8a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f4ce36a8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a7020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f4ce36af3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f4ce36af3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36af760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36af8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36afa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36afc10"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36afda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f4ce36b85a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f4ce36b85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b8a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b8bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b8d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f4ce36c1700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f4ce36c1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36c1a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36c1c10"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36c1da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36bb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36bb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f4ce36a5a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f4ce36a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a4020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f4ce36b7be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f4ce36b7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b6020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f4ce36c8890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f4ce36c8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36c8c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36c8da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36c3020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36c31b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36c3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f4ce36dc060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f4ce36dc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce36dc3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce36dc570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36dc700"/>
        <function-ref name="get" scoped="" ref="0x7f4ce36dc890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36dca20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36dcbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce36dcd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36db020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce36db1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce36db340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce36db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f4ce36adda0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f4ce36adda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36ab180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36ab310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36ab4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36ab630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36ab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f4ce36d20c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f4ce36d20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36d2440"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36d25d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36d2760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36d28f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36d2a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36d2c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36d2da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36cb020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f4ce36b3a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f4ce36b3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b3dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f4ce36bc6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f4ce36bc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36bca50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36bcbe0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36bcd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36c2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36c21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f4ce36a7a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f4ce36a7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a6020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f4ce36c4cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f4ce36c4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36c90a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36c9230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36c93c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36c9550"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36c96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f4ce36ae1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f4ce36ae1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36ae570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36ae700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36ae890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36aea20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36aebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f4ce36a4a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f4ce36a4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a3020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f4ce36b50c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f4ce36b50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b5440"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b55d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b5760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b58f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b5a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b5c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b5da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b4020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f4ce36bb6c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f4ce36bb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce36bba40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce36bbbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36bbd60"/>
        <function-ref name="get" scoped="" ref="0x7f4ce36ba020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36ba1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36ba340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce36ba4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36ba660"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce36ba7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce36ba980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce36bab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f4ce36abb80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f4ce36abb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36aa020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36aa1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36aa340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36aa4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f4ce36a9a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f4ce36a9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce36a8020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36a81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36a8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36a84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce36a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f4ce36aaa20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f4ce36aaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36a9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36a91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36a9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36a94d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f4ce36b0570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f4ce36b0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce36b08f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce36b0a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36b0c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce36b0da0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f4ce36b1020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f4ce36b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce36b13a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce36b1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36b16c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce36b1850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36b19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce36b1b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36b1d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce36b0020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4ce3669aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ce3669aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce3669e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4ce3669450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4ce3669450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce36697d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4ce3668120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ce3668120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce36684a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4ce366ad80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce366ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce3669180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce366b540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce366b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce366b8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce366ba50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce366bbe0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce366bd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce366a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce366a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce366a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce366a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce366a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce366a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce366a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f4ce3662940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f4ce3662940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce3662cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f4ce36622f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f4ce36622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce3662670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f4ce3660020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f4ce3660020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce36603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f4ce3663bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce3663bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce3662020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce36643e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce36643e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce3664760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce36648f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce3664a80"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3664c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce3664da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce3663020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce36631b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce3663340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce36634d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce3663660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce36637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce3615a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce3615a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce3615e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce3614020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce36141b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce3614340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36144d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce3614660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce365d9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce365d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce365dd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce3617020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce36171b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce3617340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36174d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce3617660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36177f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce3617980"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce3617b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce3612020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce3612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce36123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce3617de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce3617de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce3615180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce3615310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36154a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce3615630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36157c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce3614930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce3614930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce3614cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce3614e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce3613020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce36131b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce3613340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36134d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce3613660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36137f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce3613980"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce3613b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce3613ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce360d160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce360d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce360d4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce360d670"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce360d800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce360d990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce360db20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce360dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce360f020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce360f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce360f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce360f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce360f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce360f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce360f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce360fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce360fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce360e020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce360e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce360b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce360b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce360bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce360e480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce360e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce360e800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce360e990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce360eb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce360ecb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce360ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce360c020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce360c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce360c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce360c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce360c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce360c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce360c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce360cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce360cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce360b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce360b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce360b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce360b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce36067a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce36067a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce3606b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce3606cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce3606e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce3604020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36041b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce3604340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce36086d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce36086d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce3608a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce3608be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce3608d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce3607020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce36071b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce3607340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce36074d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce3607660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce36077f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce3603c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce3603c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce3602020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce3607ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce3607ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce3607e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce3606020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce36061b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce3606340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce36064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce3604610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce3604610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce3604990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce3604b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce3604cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3604e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce3603020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce36031b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce3603340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce36034d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce3603660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce36037f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce3603980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35fecb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35fecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35fd0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35fd230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35fd3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35fd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35fd6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35fd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce3600b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce3600b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35ff020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35ff1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35ff340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35ff4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35ff660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35ff7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35ff980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35ffb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35ffca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35fb2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35fb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35fb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35fe020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35fe3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35fe530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35fe6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35fe850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35fe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35fdb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35fdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35fc020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35fc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35fc340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35fc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35fc660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35fc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35fc980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35fcb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35fcca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35fce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35f62f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35f62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35f6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35f6800"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35f6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35f6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35f6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35f6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce35f8220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce35f8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35f85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35f8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35f88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35f8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35f8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35f8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35f7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35f71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35f37a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35f3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35f7610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35f7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35f7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35f7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35f7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35f7e40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35f4160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35f4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35f44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35f4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35f4800"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35f4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35f4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35f4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35f4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35f3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35f31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35f3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35ee7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35ee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35eeb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35eecb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35eee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35ed020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35ed1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce35f06d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce35f06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35f0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35f0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35f0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35ef020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35ef1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35ef340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35ef4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35ef660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35ecc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35ecc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35efac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35efac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35efe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35ee020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35ee1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35ee340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35ed610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35ed610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35ed990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35edb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35edcb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35ede40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35ec020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35ec1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35ec340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35ec4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35ec660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35ec7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35e7cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35e7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35e60a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35e6230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35e63c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35e6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35e66e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35e6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce35e9b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce35e9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35e8020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35e81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35e8340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35e84d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35e8660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35e87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35e8980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35e8b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35e8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35e32f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35e3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35e7020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35e73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35e7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35e76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35e7850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35e6b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35e6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35e4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35e41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35e4340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35e44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35e4660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35e47f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35e4980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35e4b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35e4ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35e4e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35de2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35de670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35de800"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35de990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35deb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35decb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35dee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce35e0220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce35e0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35e05a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35e0730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35e08c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35e0a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35e0be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35e0d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35df020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35df1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35df340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35dc7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35dc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35dcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35df610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35df610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35df990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35dfb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35dfcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35dfe40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35dd160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35dd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35dd4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35dd670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35dd800"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35dd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35ddb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35ddcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35dde40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35dc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35dc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35dc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35d77a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35d77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35d7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35d7cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35d7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35d6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35d61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce35d96d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce35d96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35d9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35d9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35d9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35d8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35d81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35d8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35d84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35d8660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35d4c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35d8ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35d8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35d8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35d7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35d71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35d7340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35d6610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35d6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35d6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35d6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35d6cb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35d6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35d4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35d41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35d4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35d44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35d4660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35d47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce35cfcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce35cfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35ce0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce35ce230"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce35ce3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35ce550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35ce6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce35ce870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f4ce35d1b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f4ce35d1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce35d0020"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce35d01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35d0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce35d04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce35d0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35d07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce35d0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce35d0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce35d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f4ce35cc2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f4ce35cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35cc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4ce35cf020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f4ce35cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce35cf3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce35cf530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce35cf6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce35cf850"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce35cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce35ceb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce35ceb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce35cd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce35cd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce35cd340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce35cd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce35cd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce35cd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce35cd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce35cdb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce35cdca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce35cde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce35cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f4ce35c6240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f4ce35c6240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35c65c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f4ce35caa90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f4ce35caa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35cae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f4ce35c7260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f4ce35c7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35c75e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f4ce35c79f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f4ce35c79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce35c7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4ce38c74c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4ce38c74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4ce38c7840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f4ce3bdc3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4ce3bdc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4ce3bdc730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4ce3bdc8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4ce3bdca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f4ce3a03bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f4ce3a03bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4ce3b3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f4ce3727b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f4ce3727b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f4ce358eb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f4ce358e1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f4ce358e340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f4ce358e4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f4ce358e020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f4ce358e660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f4ce358e7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f4ce358e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4ce3583dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4ce3583dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3581180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4ce358f590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ce358f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ce358f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4ce35836c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f4ce35836c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3583a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4ce358fc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ce358fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3583020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ce35831b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ce3583340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4ce3cb4410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce3cb4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce3cb4790"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce3cb4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4ce3c453a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ce3c453a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3c45720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ce3c458b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ce3c45a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4ce37ed040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f4ce37ed040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce37ed3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce37ed550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f4ce37e7490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f4ce37e7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f4ce37e7810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f4ce37e79a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4ce37e7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4ce37ef140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f4ce37ef140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce37ef4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4ce37ef650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4ce37ef7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f4ce34f49f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f4ce34f49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce34f4d70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f4ce34f7020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f4ce34f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f4ce34ed8b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce34ed8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce34edc30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce34eddc0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce34f3020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce34f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4ce352b750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ce352b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ce352bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ce346c7a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce346c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce346cb20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce346ccb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce346ce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce3483020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce34831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ce34755a0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce34755a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce3475a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce3475bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce3475d40"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce34c3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce34c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f4ce3484b50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f4ce3484b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f4ce34ec020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f4ce34ec1b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f4ce34ec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ce348fb60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce348fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce34e6020"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce34e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7f4ce34e7a20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7f4ce34e7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f4ce34e7da0"/>
        <function-ref name="bind" scoped="" ref="0x7f4ce34f1020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f4ce34f11b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f4ce34f1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f4ce3438080" loc="243:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f4ce3438080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce3438400"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce3438590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f4ce34f2d90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce34f2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce34f6180"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce34f6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7f4ce350c820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7f4ce350c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce350acf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce3516300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce350a0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce3516c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce3509660"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce35091e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce3516780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce352a480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce350a6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce352a950"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce352ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f4ce3480130" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce3480130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce34804b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce35170d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce35170d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce3517450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce35175e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce3517770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce3517900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce3517a90"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3517c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce3517db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce352b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce352b020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce352b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce352b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f4ce34f86b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f4ce34f86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f4ce34f8a30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce3502b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f4ce3502ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f4ce3502020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce35021b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f4ce3502340"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce35024d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f4ce3502660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f4ce34f8d50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f4ce35027f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f4ce3502980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f4ce34f8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4ce3509c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce3509c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce3504170"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce3507720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce3505510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce3505090"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce3504a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce35045f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce3507ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce35088a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce3505b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce3508d70"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce35072a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ce3429590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce3429590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce3429910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce3429aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce3429c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce3429dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce3426020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce34261b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce3426340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce3426980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce34264d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce3426660"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce34267f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f4ce341a7b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4ce341a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce341ab30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce341acc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce341ae50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3420020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce34201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3420340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce34204d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3420660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce34258d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce34258d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3425c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f4ce3420980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4ce3420980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3420d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce341f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce341f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce341f340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce341f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce341f660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce341f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce341f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ce3422020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce3422020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce34223a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce3422530"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce34226c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce3422850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce34229e0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3422b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce3422d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce34214d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3421020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce34211b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce3421340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f4ce341fca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4ce341fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce34190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3419230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce34193c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3419550"/>
        <function-ref name="get" scoped="" ref="0x7f4ce34196e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3419870"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3419a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3419b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f4ce33fd360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f4ce33fd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33fd6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33fd870"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33fda00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33fdb90"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33fdd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33fc020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f4ce33fc6a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f4ce33fc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33fca20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33fcbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33fcd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33fb020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33fb340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33fb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f4ce33fac40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce33fac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce33f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f4ce33fb9c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f4ce33fb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33fbd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33fa340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33fa660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33fa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ce33e4020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ce33e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33e4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33e46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33e4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33e49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33e4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33e4d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33e3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33e31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33e3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33e34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33e3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33e37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33e3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ce33cf020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ce33cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33cf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33cf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33cf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33cf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33cfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33cfd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33ce340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33cea80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f4ce3386560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f4ce3386560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33868e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3386a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3386c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3386d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3385020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3385340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33854d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3385660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33857f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3385980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3385b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3385ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3384020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f4ce3361570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f4ce3361570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33618f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3361a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3361c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3361da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3360020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3360340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33604d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3360660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33607f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3360980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3360b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3360ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce335f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce335f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f4ce3384580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f4ce3384580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3384900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3384a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3384c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3384db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3383020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3383340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33834d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3383660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33837f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3383980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3383b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3383ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3382020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f4ce33cb020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f4ce33cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33cb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33cb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33cb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33cb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33cb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33cbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33cbd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33ca340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33caa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f4ce33b7200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f4ce33b7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33b7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33b7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33b78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33b7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33b7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33b7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33b6020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33b61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33b6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33b64d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33b6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33b67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33b6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33b6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f4ce33a2200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f4ce33a2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33a2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33a2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33a28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33a2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33a2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33a2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33a1020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33a11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33a1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33a14d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33a1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33a17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33a1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33a1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f4ce3392200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f4ce3392200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3392580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3392710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33928a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3392a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3392bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3392d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3391020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33911b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3391340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33914d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3391660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33917f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3391980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3391c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3391da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f4ce337e580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f4ce337e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce337e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce337ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce337ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce337edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce337d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce337d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce337d340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce337d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce337d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce337d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce337d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce337db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce337dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce337c020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce337c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f4ce336d570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f4ce336d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce336d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce336da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce336dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce336dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce336c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce336c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce336c340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce336c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce336c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce336c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce336c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce336cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce336cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce336b020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce336b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f4ce3359580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f4ce3359580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3359900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3359a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3359c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3359db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3358020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3358340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33584d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3358660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33587f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3358980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3358b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3358ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3357020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ce33de020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ce33de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33de3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33de530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33de6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33de850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33de9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33deb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33ded00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33dd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33dd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33dd340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33dd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33dd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33dd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33dda80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33ddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f4ce337c580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f4ce337c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce337c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce337ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce337cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce337cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce337a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce337a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce337a340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce337a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce337a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce337a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce337a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce337ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce337aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3379020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ce33d9020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ce33d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33d93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33d9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33d96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33d9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33d99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33d9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33d9d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33d8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33d81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33d8340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33d84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33d8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33d87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33d8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33d8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f4ce33c5020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f4ce33c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33c5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33c56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33c5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33c59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33c5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33c5d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33c41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33c4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33c44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33c4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33c47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33c4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33c4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f4ce33b1200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f4ce33b1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33b1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33b1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33b18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33b1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33b1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33b1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33b0020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33b0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33b04d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33b0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33b07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33b0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33b0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f4ce339c200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f4ce339c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce339c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce339c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce339c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce339ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce339cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce339cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce339b020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce339b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce339b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce339b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce339b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce339b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce339b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce339bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce339bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f4ce338c200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f4ce338c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce338c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce338c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce338c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce338ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce338cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce338cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce338b020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce338b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce338b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce338b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce338b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce338b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce338b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce338bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce338bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ce33e8020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ce33e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33e8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33e86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33e8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33e89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33e8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33e8d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33e7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33e71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33e7340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33e74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33e7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33e77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33e7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33e7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ce33d3020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ce33d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33d34a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33d3630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33d37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33d3950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33d3ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33d3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33d3e00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33d2340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33d2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f4ce33bf020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f4ce33bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33bf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33bf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33bf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33bf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33bf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33bfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33bfd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33be340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33bea80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f4ce3388580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f4ce3388580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3388900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3388a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3388c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3388db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3387020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3387340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3387660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33877f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3387980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3387b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3387ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3386020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f4ce3367570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f4ce3367570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33678f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3367a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3367c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3367da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3366020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3366340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33664d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3366660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33667f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3366980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3366b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3366ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3365020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f4ce335b570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f4ce335b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce335b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce335ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce335bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce335bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce335a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce335a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce335a340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce335a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce335a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce335a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce335a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce335ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce335aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3359020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f4ce3373580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f4ce3373580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3373900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3373a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3373c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3373db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3372020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3372340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33724d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3372660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33727f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3372980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3372b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3372ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3371020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f4ce33bb020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f4ce33bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33bb5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33bb730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33bb8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33bba50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33bbbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33bbd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33ba020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33ba1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33ba340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33ba4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33ba660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33ba7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33ba980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33bac10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33bada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f4ce33a6200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f4ce33a6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33a6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33a6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33a68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33a6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33a6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33a6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33a5020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33a51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33a5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33a54d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33a5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33a57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33a5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33a5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33a5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f4ce3396200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f4ce3396200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3396580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3396710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33968a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3396a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3396bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3396d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3395020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33951b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3395340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33954d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3395660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33957f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3395980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3395c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3395da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f4ce3365570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f4ce3365570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33658f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3365a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3365c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3365da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3364020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3364340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33644d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3364660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33647f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3364980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3364b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3364ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3363020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f4ce3379570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f4ce3379570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33798f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3379a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3379c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3379da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3378020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3378340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3378660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33787f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3378980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3378b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3378ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3377020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ce33e2020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ce33e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33e2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33e26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33e2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33e29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33e2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33e2d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33e11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33e1340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33e14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33e1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33e17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33e1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ce33cd020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ce33cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33cd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33cd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33cd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33cd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33cdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33cdd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33cc340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33cca80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f4ce339a200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f4ce339a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce339a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce339a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce339a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce339aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce339abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce339ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3399020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33991b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3399340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33994d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3399660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33997f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3399980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3399c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3399da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f4ce33c9020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f4ce33c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33c9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33c96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33c9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33c99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33c9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33c9d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33c81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33c8340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33c84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33c8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33c87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33c8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f4ce33b5200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f4ce33b5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33b5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33b5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33b58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33b5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33b5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33b5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33b4020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33b41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33b4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33b44d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33b4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33b47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33b4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33b4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f4ce33a0200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f4ce33a0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33a0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33a0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33a08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33a0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33a0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33a0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce339f020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce339f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce339f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce339f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce339f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce339f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce339f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce339fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce339fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f4ce3390200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f4ce3390200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3390580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3390710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33908a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3390a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3390bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3390d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce338f020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce338f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce338f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce338f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce338f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce338f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce338f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce338fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce338fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f4ce3375580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f4ce3375580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3375900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3375a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3375c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3375db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3374020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3374340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33744d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3374660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33747f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3374980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3374b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3374ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3373020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ce33f50a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ce33f50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33f5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33f55b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33f5740"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33f58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33f5a60"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33f5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33f5d80"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33f4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33f4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ce33d7020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ce33d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33d7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33d76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33d7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33d79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33d7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33d7d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33d6340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f4ce33c3020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f4ce33c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33c33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33c3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33c36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33c3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33c39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33c3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33c3d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33c2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33c21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33c2340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33c24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33c2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33c27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33c2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33c2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f4ce33af200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f4ce33af200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33af580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33af710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33af8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33afa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33afbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33afd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33ae020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33ae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33ae340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33ae4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33ae660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33ae7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33ae980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33aec10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f4ce3371580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f4ce3371580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3371900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3371a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3371c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3371db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3370020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3370340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33704d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3370660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33707f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3370980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3370b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3370ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce336f020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce336f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f4ce336b570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f4ce336b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce336b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce336ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce336bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce336bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce336a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce336a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce336a340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce336a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce336a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce336a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce336a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce336ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce336aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3369020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f4ce335f570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f4ce335f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce335f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce335fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce335fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce335fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce335e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce335e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce335e340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce335e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce335e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce335e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce335e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce335eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce335eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce335d020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce335d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f4ce33aa200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f4ce33aa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33aa580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33aa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33aa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33aaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33aabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33aad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33a9020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33a91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33a9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33a94d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33a9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33a97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33a9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33a9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33a9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f4ce336f580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f4ce336f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce336f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce336fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce336fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce336fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce336e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce336e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce336e340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce336e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce336e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce336e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce336e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce336eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce336eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce336d020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce336d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ce33e6020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ce33e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33e63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33e6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33e66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33e6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33e69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33e6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33e6d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33e5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33e51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33e5340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33e54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33e5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33e57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33e5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33e5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ce33d1020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ce33d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33d1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33d16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33d1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33d19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33d1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33d1d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33d0340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33d0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f4ce33bd020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f4ce33bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33bd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33bd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33bd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33bd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33bd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33bdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33bdd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33bc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33bc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33bc340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33bc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33bc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33bc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33bca80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33bcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f4ce3377580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f4ce3377580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3377900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3377a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3377c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3377db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3376020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3376340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33764d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3376660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33767f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3376980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3376b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3376ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3375020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f4ce3363570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f4ce3363570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33638f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3363a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3363c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3363da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3362020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3362340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33624d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3362660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33627f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3362980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3362b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3362ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3361020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f4ce33b9200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f4ce33b9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33b9580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33b9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33b98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33b9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33b9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33b9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33b8020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33b81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33b8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33b84d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33b8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33b87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33b8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33b8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f4ce33a4200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f4ce33a4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33a4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33a4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33a48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33a4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33a4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33a4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33a3020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33a31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33a3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33a34d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33a3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33a37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33a3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33a3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33a3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f4ce3394200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f4ce3394200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3394580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3394710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33948a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3394a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3394bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3394d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3393020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33931b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3393340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33934d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3393660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33937f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3393980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3393c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3393da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ce33e0020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ce33e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33e03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33e0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33e06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33e0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33e09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33e0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33e0d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33df020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33df1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33df340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33df4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33df660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33df7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33dfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33dfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f4ce3398200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f4ce3398200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3398580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3398710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33988a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3398a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3398bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3398d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3397020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33971b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3397340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33974d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3397660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33977f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3397980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3397c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3397da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ce33dc020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ce33dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33dc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33dc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33dc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33dc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33dcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33dcd00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33db340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33dba80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f4ce33c7020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f4ce33c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33c7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33c76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33c7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33c79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33c7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33c7d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33c6340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33c6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f4ce33b3200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f4ce33b3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33b3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33b3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33b38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33b3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33b3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33b3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33b2020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33b21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33b2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33b24d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33b2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33b27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33b2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33b2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f4ce339e200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f4ce339e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce339e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce339e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce339e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce339ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce339ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce339ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce339d020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce339d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce339d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce339d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce339d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce339d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce339d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce339dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce339dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f4ce338e200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f4ce338e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce338e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce338e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce338e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce338ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce338ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce338ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce338d020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce338d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce338d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce338d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce338d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce338d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce338d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce338dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce338dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ce33ea020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ce33ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33ea530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33ea6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33ea850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33ea9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33eab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33ead00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33e9340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33e9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ce33d5020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ce33d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33d53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33d5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33d56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33d5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33d59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33d5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33d5d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33d4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33d4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f4ce33c1020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f4ce33c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33c13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33c1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33c16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33c1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33c19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33c1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33c1d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33c0340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33c0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f4ce33ad200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f4ce33ad200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33ad580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33ad710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33ad8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33ada30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33adbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33ac020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33ac340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33ac4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33ac660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33ac7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33ac980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33acc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33acda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f4ce3380560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f4ce3380560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33808e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3380a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3380c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3380d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce337f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce337f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce337f340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce337f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce337f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce337f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce337f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce337fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce337fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce337e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce337e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f4ce3369570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f4ce3369570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33698f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3369a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3369c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3369da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3368020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3368340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3368660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33687f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3368980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3368b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3368ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3367020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f4ce3382580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f4ce3382580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3382900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3382a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3382c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3382db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3381020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3381340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33814d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3381660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33817f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3381980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3381b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3381ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3380020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f4ce33a8200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f4ce33a8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33a8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce33a8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33a88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce33a8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce33a8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33a8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce33a7020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33a71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33a7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33a74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33a7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce33a77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33a7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce33a7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33a7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f4ce335d570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f4ce335d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce335d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce335da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce335dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce335dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce335c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce335c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce335c340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce335c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce335c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce335c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce335c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce335cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce335cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce335b020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce335b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f4ce3357580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f4ce3357580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3357900"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3357a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3357c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3357db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3356020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3356340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33564d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3356660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33567f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3356980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3356b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3356ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3355020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f4ce338a1f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f4ce338a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce338a970"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce338ab00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce338ac90"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce338ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3389020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3389340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce33894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3389660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce33897f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3389980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3389b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3389ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3388020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce332c6d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce332c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce332ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce332cbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce332cd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce332a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce332a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce332a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce332a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce332a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce332a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce332a980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce332ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce332aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce332ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3329120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3326100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3326100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3326480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3326610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33267a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3326930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3326ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3326c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3326de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3325020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33251b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3325340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33254d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3325660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33257f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3325a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3325c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3322d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3322d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33210e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3321270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3321400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3321590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3321720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33218b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3321a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3321bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3321d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3320020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33201b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3320340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33204d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3320760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce331d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce331d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce331dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce331dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce331dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce331c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce331c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce331c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce331c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce331c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce331c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce331c980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce331cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce331cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce331ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce331b120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce331b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3318100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3318100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3318480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3318610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce33187a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3318930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3318ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3318c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3318de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3317020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3317340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3317660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3317a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3317c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3314d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3314d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33130e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3313270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3313400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3313590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3313720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33138b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3313a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3313bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3313d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3312020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3312340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3312760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33128f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce330f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce330f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce330fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce330fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce330fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce330e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce330e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce330e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce330e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce330e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce330e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce330e980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce330eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce330eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce330ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce330d120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce330d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce330a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce330a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce330a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce330a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce330a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce330a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce330aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce330ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce330ade0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3309020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce33091b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3309340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33094d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3309660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3309a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3309c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3306d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3306d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce33040e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3304270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3304400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3304590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3304720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce33048b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3304a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3304bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3304d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3303020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce33031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3303340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce33034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3303760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce33038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3300740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3300740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3300ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3300c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3300de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32ff1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32ff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32ff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32ff660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32ff7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32ff980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32ffb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32ffca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32ffe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32fe120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32fb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32fb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32fb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32fb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32fb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32fbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32fbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32fbde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32fa340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32faa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32f7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32f60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32f6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32f6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32f6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32f6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32f68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32f6a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32f6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32f6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32f5020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32f5760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32f2860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32f2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32f2be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32f2d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32f1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32f11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32f1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32f14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32f1660"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32f17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32f1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32f1b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32f1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32f1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32f0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32f02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32f0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32ed270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32ed270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32ed5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32ed780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32ed910"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32edaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32edc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32eddc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32ec020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32ec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32ec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32ec4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32ec660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32ec7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32ec980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32ecc10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32e9d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32e9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32e80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32e8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32e8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32e8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32e8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32e88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32e8a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32e8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32e8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32e7020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32e7760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32e4740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32e4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32e4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32e4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32e4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32e31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32e3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32e34d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32e3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32e37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32e3980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32e3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32e3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32e3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32e2120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32de100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32de480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32de610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32de7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32de930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32deac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32dec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32dede0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32dd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32dd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32dd340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32dd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32dd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32dd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32dda80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32ddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32dad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32dad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32d90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32d9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32d9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32d9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32d9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32d98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32d9a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32d9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32d9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32d8020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32d8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32d84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32d8760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32d88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32d5740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32d5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32d5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32d5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32d5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32d41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32d4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32d44d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32d4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32d47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32d4980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32d4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32d4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32d4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32d3120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32d0100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32d0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32d0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32d0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32d07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32d0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32d0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32d0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32d0de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32cf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32cf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32cf340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32cf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32cf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32cf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32cfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32cfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32ccd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32ccd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32cb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32cb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32cb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32cb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32cb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32cb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32cba40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32cbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32cbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32ca020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32ca760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32c7740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32c7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32c7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32c7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32c7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32c61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32c6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32c64d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32c6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32c67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32c6980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32c6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32c6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32c6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32c5120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32c2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32c2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32c2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32c2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32c27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32c2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32c2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32c2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32c2de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32c11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32c1340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32c14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32c1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32c17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32c1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32c1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32bed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32bed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32bc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32bc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32bc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32bc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32bc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32bc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32bca40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32bcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32bcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32bb020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32bb760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32b8a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32b8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32b8de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32b7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32b71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32b7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32b74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32b7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32b77f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32b7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32b7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32b7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32b7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32b6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32b61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32b6440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32b65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32b3460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32b3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32b37e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32b3970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32b3b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32b3c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32b3e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32b21b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32b2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32b24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32b2660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32b27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32b2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32b2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32b2da0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32afe00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32afe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32ae1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32ae350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32ae4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32ae670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32ae800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32ae990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32aeb20"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32aecb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32aee40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32ad020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32ad760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32aa740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32aa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32aaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32aac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32aade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32a91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32a9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32a94d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32a9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32a97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32a9980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32a9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32a9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32a9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32a8120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32a5100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32a5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32a5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32a57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32a5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32a5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32a5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32a5de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce32a4340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce32a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce32a4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce32a1d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce32a1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32a00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce32a0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32a0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce32a0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32a0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32a08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32a0a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce32a0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32a0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce329f020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce329f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce329f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce329f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce329f760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce329f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce329c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce329c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce329cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce329cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce329cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce329b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce329b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce329b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce329b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce329b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce329b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce329b980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce329bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce329bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce329be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce329a120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce329a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3297100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3297100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3297480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3297610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32977a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3297930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3297ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3297c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3297de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3295020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3295340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3295660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3295a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3295c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3292d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3292d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32910e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3291270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3291400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3291590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3291720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32918b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3291a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3291bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3291d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3290020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3290340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3290760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce328d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce328d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce328dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce328dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce328dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce328c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce328c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce328c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce328c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce328c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce328c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce328c980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce328cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce328cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce328ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce328b120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce328b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3288100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3288100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3288480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3288610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce32887a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3288930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3288ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3288c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3288de0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3287020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3287340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3287660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3287a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3287c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3284d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3284d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32830e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3283270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3283400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3283590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3283720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32838b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3283a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3283bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3283d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3282020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3282340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3282760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce327f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce327f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce327fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce327fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce327fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce327e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce327e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce327e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce327e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce327e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce327e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce327e980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce327eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce327eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce327ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce327d120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce327d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce327a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce327a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce327a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce327a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce327a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce327a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce327aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce327ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce327ade0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3279020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3279340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3279660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3279a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce3279c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3276d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3276d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32750e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3275270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3275400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3275590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3275720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32758b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3275a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3275bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3275d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3274020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3274340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3274760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3270740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3270740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3270ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3270c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3270de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce326f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce326f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce326f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce326f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce326f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce326f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce326f980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce326fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce326fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce326fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce326e120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce326e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce326b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce326b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce326b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce326b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce326b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce326b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce326bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce326bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce326bde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce326a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce326a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce326a340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce326a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce326a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce326a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce326aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce326ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3267d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3267d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32660e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3266270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3266400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3266590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3266720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32668b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3266a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3266bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3266d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3265020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3265340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3265760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3262740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3262740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3262ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3262c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3262de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3261020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3261340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32614d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3261660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32617f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3261980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3261b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3261ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3261e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3260120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce325d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce325d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce325d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce325d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce325d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce325d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce325dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce325dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce325dde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce325c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce325c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce325c340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce325c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce325c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce325c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce325ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce325cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3259d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3259d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32580e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3258270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3258400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3258590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3258720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32588b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3258a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3258bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3258d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3257020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3257340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3257760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce3254740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce3254740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce3254ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3254c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3254de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3253020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce32531b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce3253340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce32534d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3253660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce32537f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3253980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce3253b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3253ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce3253e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3252120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce324f100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce324f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce324f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce324f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce324f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce324f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce324fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce324fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce324fde0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce324d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce324d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce324d340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce324d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce324d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce324d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce324da80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce324dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4ce324ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f4ce324ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce32490e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce3249270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce3249400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce3249590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce3249720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce32498b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce3249a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce3249bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce3249d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce3248020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce32481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce3248340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce32484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce3248760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce32488f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce31d12f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce31d12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce31d1670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce31d1800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce31d1990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce31d1b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce31d1cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce31d1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce31d0020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce31d01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce31d0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce31d04d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce31d0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce31d07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce31d0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce31d0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce31d0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce31e2020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce31e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce31e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce31e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce31e26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce31e2850"/>
        <function-ref name="get" scoped="" ref="0x7f4ce31e29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce31e2b70"/>
        <function-ref name="set" scoped="" ref="0x7f4ce31e2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce31d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce31cdde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce31cdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce31cc180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce31cc310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce31cc4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce31cc630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce31cc7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce31cc950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce31ccae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce31ccc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce31cce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce31cb020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce31cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce31cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce31cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce31cb760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce31cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce31ceb90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce31ceb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce31cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce31cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce31cd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce31cd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce31cd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce31cd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce31cd980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce31cdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce31c8930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce31c8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce31c8cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce31c8e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce31c7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce31c71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce31c7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce31c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce31c7660"/>
        <function-ref name="get" scoped="" ref="0x7f4ce31c77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce31c7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce31c7b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ce31c7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce31c7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce31c6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce31c62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce31c6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce31c9710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce31c9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce31c9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce31c9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce31c9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce31c8020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce31c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce31c8340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce31c84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce31c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce31ba640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce31ba640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce300cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce300e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce300c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce300eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce300b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce300b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce300e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce300f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce300c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce300f860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce300fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4ce31b0610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31b0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce31adc40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce31ae1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce31ad020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce31aeae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce31ac590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce31ac110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce31ae660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce31af390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce31ad630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce31af860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce31afd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4ce31a71d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f4ce31a71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce31a3630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce31a6c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce31a49d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce31a4550"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce31a2020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce31a3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce31a40d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce31a7dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce31a3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce31a62e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce31a67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ce319da80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ce319da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce31a06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce31a8400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce31a8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce31a8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce30ab020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce30ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce30a9870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce30aa840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce30a9220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce30aad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce30a9d30"/>
        <function-ref name="start" scoped="" ref="0x7f4ce30abe30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce30aa380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce30ac760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce30ac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce30acae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce10e2ce0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce10e2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce10de670"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce10df550"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce10de020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce10dfa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce10deb30"/>
        <function-ref name="start" scoped="" ref="0x7f4ce10e0b60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce10df090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce10e2490" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce10e2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce10e2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ce10c85d0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce10c85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce10c8950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce10c8ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce10c8c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce10c8e00"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce10c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ce10ccc50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce10ccc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce10ca020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce10ca1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce10ca340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce10ca4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce10ca660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce10ca7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce10ca980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce10cab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce10caca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce10cae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce10c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ce10c92b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce10c92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce10c9630"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce10c97c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce10c9950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce10c9ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce10c9c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce10c9e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce10c8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce10c81b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce10c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ce317bba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce317bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce3179020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce31791b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce3179340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce31794d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce3179660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ce317e4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce317e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce317e850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce317e9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce317eb70"/>
        <function-ref name="get" scoped="" ref="0x7f4ce317ed00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce317d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce317d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce317d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce317d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce317d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce317d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce317d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ce317c280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce317c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce317c600"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce317c790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce317c920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce317cab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce317cc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce317cdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce317b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce317b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce317b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4ce10be440" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce10be440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce10be7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce10be950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce10beae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce10bec70"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce10bee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ce10c1910" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce10c1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce10c1c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce10c1e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce10c0020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce10c01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce10c0340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce10c04d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce10c0660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce10c07f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce10c0980"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce10c0b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce10c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce10c5720" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce10c5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce10c1020"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce10c3020"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce10c39a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce10c34e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce10c14e0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce10c45b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce10c4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce10c6e60" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce10c6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce10c5210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ce10bf020" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce10bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce10bf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce10bf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce10bf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce10bf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce10bf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce10bfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce10bfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce10be020"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce10be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ce3129020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce3129020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce3129e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce3124800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce3124340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce3124cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f4ce3120020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f4ce3120020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce3120e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce311f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce311f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce311fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ce310d2c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce310d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce310d640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce310d7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce310d960"/>
        <function-ref name="get" scoped="" ref="0x7f4ce310daf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce310dc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce310de10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce310c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce310c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce310c340"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce310c4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce310c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ce311b0a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce311b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce310e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce310e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce310e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce310ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4ce30eb540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4ce30eb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce30e93d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce30e9d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce30e9890"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce30e8260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ce30ed0f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce30ed0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce30ec020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce30ec9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce30ec4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce30ece60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce10db140" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce10db140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce10d8b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce10da9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce10d84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce10d8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce10d7020"/>
        <function-ref name="start" scoped="" ref="0x7f4ce10da020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce10da530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4ce10d5b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ce10d5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce10d14e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce10d24e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce10d2e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce10d29a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce10d19a0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce10d49d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce10d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ce10d7690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce10d7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce10d65b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce10d5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce10d6a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce10d54e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f4ce3076490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f4ce3076490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce3076810"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce30769a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4ce307a1d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce307a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce3077b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce30789f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce30774e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce3077020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce3076020"/>
        <function-ref name="start" scoped="" ref="0x7f4ce3078020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce3078530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce3080cf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce3080cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce307b220"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce307d7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce307c590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce307c110"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce307bb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce307b6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce307dc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce307f940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce307cba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce307fe10"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce307d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f4ce3026e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f4ce3026e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce3024220"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce30243b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4ce302bc30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f4ce302bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce3026110"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce30286a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce30274a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce3027020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce3026a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce3026590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce3028b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce3029860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce3027ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce3029d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce3028220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce3031690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce3031690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce302dcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce302e260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce302d090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce302eba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce302b680"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce302b1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce302e700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce3030390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce302d6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce3030880"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce3030d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ce3022cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ce3022cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce3018980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ce3017020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce3017020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce3017e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce3016800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce3016340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce3016cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce3009020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce3009020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce3005630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce3008a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce3007920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce30074a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce3004020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce3005ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce3007020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce3009c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce3005020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce3008110"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce30085e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4ce30004e0" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce30004e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce3000860"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce30009f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4ce2ffd370" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4ce2ffd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3000020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce30034f0" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce30034f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce3003870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4ce2ff84e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce2ff84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce2ff8860"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce2ff89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4ce2ff9390" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f4ce2ff9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce2ff8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce2ffca90" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce2ffca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce2ffce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7f4ce2fdbe60" loc="72:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7f4ce2fdbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f4ce2fe9210"/>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce2fe93a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f4ce2fe9530"/>
        <function-ref name="hasParent" scoped="" ref="0x7f4ce2fe96c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce2fe9850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f4ce2fe99e0"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2fe9b70"/>
        <function-ref name="getEtx" scoped="" ref="0x7f4ce2fe9d00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f4ce2fe8020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f4ce2fe81b0"/>
        <function-ref name="isParent" scoped="" ref="0x7f4ce2fe8340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f4ce2fe84d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce2fe8660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f4ce2fe88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f4ce2fd9a80" loc="76:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f4ce2fd9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2fd9e00"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce2fe8bb0" loc="73:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce2fe8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce2fd9020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2fd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f4ce2fe53b0" loc="71:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f4ce2fe53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2fe5730"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2fe58c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7f4ce2f7d720" loc="91:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce2f7d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f4ce2f7daa0"/>
        <function-ref name="initiate" scoped="" ref="0x7f4ce2f7dc30"/>
        <function-ref name="linkResult" scoped="" ref="0x7f4ce2f7ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce2f8aa50" loc="89:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2f8aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2f8add0"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2f90020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce2f901b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce2f90340"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce2f904d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce2f90660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce2f907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f4ce2f98c70" loc="86:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f4ce2f98c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2f99020"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2f991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f4ce2f6d8a0" loc="93:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce2f6d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f4ce2f7c660"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f4ce2f6ddb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f4ce2f7c020"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f4ce2f7c1b0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f4ce2f7c340"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f4ce2f6dc20"/>
        <function-ref name="getContext" scoped="" ref="0x7f4ce2f7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f4ce2f755f0" loc="92:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f4ce2f755f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f4ce2f75970"/>
        <function-ref name="OCP" scoped="" ref="0x7f4ce2f75b00"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f4ce2f75c90"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2f75e20"/>
        <function-ref name="resetRank" scoped="" ref="0x7f4ce2f81020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f4ce2f811b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f4ce2f81340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f4ce2f814d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f4ce2f81660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f4ce2f817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7f4ce2f9e800" loc="80:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce2f9e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f4ce2f9eb80"/>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce2f9ed10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f4ce2f9d020"/>
        <function-ref name="hasParent" scoped="" ref="0x7f4ce2f9d1b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce2f9d340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f4ce2f9d4d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2f9d660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f4ce2f9d7f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f4ce2f9d980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f4ce2f9db10"/>
        <function-ref name="isParent" scoped="" ref="0x7f4ce2f9dca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f4ce2f9de30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce2f9c020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f4ce2f9c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7f4ce2f98580" loc="83:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7f4ce2f98580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce2f98900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7f4ce2f97760" loc="88:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7f4ce2f97760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f4ce2f97ae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce2f96b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f4ce2f96ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f4ce2f96020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce2f961b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f4ce2f96340"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2f964d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f4ce2f96660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f4ce2f97e00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f4ce2f967f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f4ce2f96980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f4ce2f97c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f4ce2f82580" loc="90:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce2f82580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f4ce2f82900"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f4ce2f82a90"/>
        <function-ref name="delRoute" scoped="" ref="0x7f4ce2f82c20"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f4ce2f82db0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f4ce2f8f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f4ce2f93cc0" loc="87:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f4ce2f93cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f4ce2f970a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f4ce2f97230"/>
        <function-ref name="findTLV" scoped="" ref="0x7f4ce2f973c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7f4ce2f22380" loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7f4ce2f22380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2f22800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2f22990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce2f9c570" loc="81:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce2f9c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce2f9c8f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2f9ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f4ce2f9cdc0" loc="82:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f4ce2f9cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2f9b180"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2f9b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f4ce2e94080" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f4ce2e94080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce2e94400"/>
        <function-ref name="setRoot" scoped="" ref="0x7f4ce2e94590"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f4ce2e94720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7f4ce2e93320" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f4ce2e93320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f4ce2e936a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce2e92670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f4ce2e92800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f4ce2e93b50"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce2e93ce0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f4ce2e93e70"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2e92030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f4ce2e921c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f4ce2e939c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f4ce2e92350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f4ce2e924e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f4ce2e93830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce2e949e0" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce2e949e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce2e94d60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2e93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f4ce2daf880" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f4ce2daf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce2dafc00"/>
        <function-ref name="setRoot" scoped="" ref="0x7f4ce2dafd90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f4ce2dae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7f4ce2dabab0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7f4ce2dabab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2dabe30"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2daa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7f4ce2d97a10" loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2d97a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f4ce2d96020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f4ce2d961b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f4ce2d96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7f4ce2d93ac0" loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7f4ce2d93ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2d93e40"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2d92020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7f4ce2da5730" loc="56:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7f4ce2da5730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2da2c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2da31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2da2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2da3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2da0590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2da0110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2da3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2da4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2da2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce2da4860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2da4d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ce2d9be00" loc="58:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce2d9be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce2d9a1c0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce2d9a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f4ce2daa3d0" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7f4ce2daa3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2da6870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2da9e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2da8c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2da8780"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2da51e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2da6cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2da8300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2da9020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2da6260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce2da94f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2da99c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f4ce2d92ad0" loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7f4ce2d92ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2d92e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2d91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce2d98270" loc="60:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d98270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2d985f0"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2d98780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce2d98910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce2d98aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce2d98c30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce2d98dc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce2d97020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7f4ce2d912f0" loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7f4ce2d912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2d91670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2d91800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f4ce2dab310" loc="52:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f4ce2dab310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2dab690"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2dab820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f4ce2d95a40" loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce2d95a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7f4ce2d937f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f4ce2d93020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f4ce2d931b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f4ce2d93340"/>
        <function-ref name="matchContext" scoped="" ref="0x7f4ce2d934d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7f4ce2d95dc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f4ce2d93660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f4ce2d9a5e0" loc="59:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce2d9a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f4ce2d9a960"/>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce2d9aaf0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f4ce2d9ac80"/>
        <function-ref name="hasParent" scoped="" ref="0x7f4ce2d9ae10"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce2d99020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f4ce2d991b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2d99340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f4ce2d994d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f4ce2d99660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f4ce2d997f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f4ce2d99980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f4ce2d99b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce2d99ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f4ce2d98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f4ce2d96590" loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f4ce2d96590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f4ce2d96910"/>
        <function-ref name="OCP" scoped="" ref="0x7f4ce2d96aa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f4ce2d96c30"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2d96dc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7f4ce2d95020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f4ce2d951b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f4ce2d95340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f4ce2d954d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f4ce2d95660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f4ce2d957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7f4ce2d922f0" loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7f4ce2d922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2d92670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2d92800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7f4ce2d91ad0" loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7f4ce2d91ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2d91e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2d90020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7f4ce2da0ae0" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f4ce2da0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2d9b110"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2d9e5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2d9d4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2d9d020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2d9ba10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2d9b590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2d9ea30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2d9f750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2d9dab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce2d9fc20"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2d9e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7f4ce2daea10" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f4ce2daea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f4ce2daed90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f4ce2dace30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f4ce2dab020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f4ce2dac340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce2dac4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f4ce2dac660"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce2dac7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f4ce2dac980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f4ce2dacb10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f4ce2dacca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce2dac020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f4ce2dac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7f4ce2d972b0" loc="61:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7f4ce2d972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce2d97630"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2d977c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce2dae270" loc="48:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce2dae270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce2dae5f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2dae780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce2d8a140" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce2d8a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2d86630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2d89b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2d87920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2d874a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2d85020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2d86ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2d87020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2d8ad30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2d86020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce2d89220"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2d896f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce2d84b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce2d84b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2d7f110"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2d825b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2d804a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2d80020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2d7fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2d7f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2d82a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2d83750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2d80ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce2d83c20"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2d82130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce2d7d4e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce2d7d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2d79a20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2d7a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2d7ada0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2d7a920"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2d784a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2d78020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2d7a4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2d7c110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2d79410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce2d7c5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2d7cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f4ce2d778d0" loc="30:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d778d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2d77c50"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2d77de0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce2d73020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce2d731b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce2d73340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce2d734d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce2d73660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f4ce2d72020" loc="31:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce2d72020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f4ce2d723a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f4ce2d67800" loc="36:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d67800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f4ce2d67b80"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2d67d10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce2d6b020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce2d6b1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce2d6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f4ce2d6d020" loc="32:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2d6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2d6d3a0"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2d6d530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce2d6d6c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce2d6d850"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce2d6d9e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce2d6db70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce2d6dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f4ce2d6c4a0" loc="33:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce2d6c4a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f4ce2d6c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f4ce2d71690" loc="3:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d71690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f4ce2d71a10"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2d71ba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce2d71d30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce2d29020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce2d291b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4ce2d25da0" loc="8:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2d25da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ce2d24180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4ce2d17b80" loc="10:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2d17b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ce2d23020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ce2d231b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ce2d23340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ce2d234d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ce2d23660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce2d237f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ce2d23980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ce2d23b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ce2d23ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ce2d23e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce2d22020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce2d221b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ce2d22340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ce2d225d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ce2d22760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f4ce2d26300" loc="5:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce2d26300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f4ce2d26680"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2d26810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce2d269a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce2d26b30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce2d26cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce2d29c50" loc="4:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce2d29c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce2d26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f4ce2d04020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2d04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ce2d043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4ce2cf97e0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2cf97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ce2cf9b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ce2cf9cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ce2cf9e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ce2cf8030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ce2cf81c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce2cf8350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ce2cf84e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ce2cf8670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ce2cf8800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ce2cf8990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce2cf8b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce2cf8cb0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ce2cf8e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ce2cf4120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ce2cf42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4ce2cec1b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4ce2cec1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cecda0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce2ceb260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4ce2cedd90" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce2cedd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ce2cf3180"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ce2cf3310"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ce2cf34a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ce2cf3630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ce2cf37c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ce2cf3950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ce2cf3ae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ce2cf3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce2cf5980" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce2cf5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2cf5d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2cf9020"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2cf91b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2cf9340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2cf94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f4ce2ce59f0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce2ce59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ce2ce5d70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ce2ce4020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ce2ce41b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ce2ce4340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ce2ce44d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce2ce4660"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ce2ce47f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ce2ce4980"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ce2ce4b10"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ce2ce4ca0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce2ce4e30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce2ce3020"/>
        <function-ref name="sync" scoped="" ref="0x7f4ce2ce31b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ce2ce3440"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ce2ce35d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f4ce2cc48e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2cc48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc4c60"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cc4df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4ce2cdf450" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce2cdf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ce2cdf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f4ce2cdfe40" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f4ce2cdfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2cdc6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2cdd6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce2cdc090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2cddb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce2cdcba0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce2cdeca0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2cdd1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f4ce2cc55f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2cc55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc5970"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cc5b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f4ce2cd9380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4ce2cd9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2cd9700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2cd9890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2cd9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2cd9bb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2cd9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2cd8020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2cd81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2cd8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f4ce2ce2cd0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f4ce2ce2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2ce1940"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce2ce1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f4ce2cb2820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f4ce2cb2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2cb2ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2cb2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f4ce2cc31c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ce2cc31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc3540"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cc36d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4ce2cc3a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2cc3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc3df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cc2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f4ce2ccd3d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce2ccd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2ccd750"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2ccd8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4ce2cce810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ce2cce810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ce2cceb90"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2cced20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ce2cd5020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ce2cd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ce2cda0e0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ce2cda0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2cda460"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2cda5f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2cda780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2cda910"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2cdaaa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2cdac30"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2cdadc0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2cd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f4ce2cc1120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce2cc1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2cc16a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f4ce2cd86a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4ce2cd86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2cd8a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2cd8bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2cd8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2cd7020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2cd71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2cd7340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2cd74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2cd7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce2ce6610" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce2ce6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce2ce6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4ce2cc4020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2cc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc43a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cc4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f4ce2cc1a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce2cc1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2cc1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ce2cc01d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ce2cc01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2cc0550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2cc06e0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2cc0870"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2cc0a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2cc0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f4ce2cbed90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f4ce2cbed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2cbd180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2cbd310"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2cbd4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2cbd630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2cbd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f4ce2ce38d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce2ce38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ce2ce3c50"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ce2ce3de0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ce2ce2020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ce2ce21b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ce2ce2340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ce2ce24d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ce2ce2660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ce2ce27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f4ce2ccdc80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce2ccdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc50a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cc5230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f4ce2cc6b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2cc6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cc6e80"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2ccd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f4ce2cbf2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ce2cbf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2cbf630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce2cbda80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce2cbda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce2cbde00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce2cbc020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce2cbc1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce2cbc340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce2cbc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2cbc660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce2cbc7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce2cbce30"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2cbc980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce2cbcb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce2cbcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f4ce2cb4940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f4ce2cb4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2cb4cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2cb4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce2ce6c80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce2ce6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2ce50a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2ce5230"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2ce53c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2ce5550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2ce56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f4ce2cd1520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ce2cd1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cd18a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cd1a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f4ce2cc9a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce2cc9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2cd1020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2cd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f4ce2cd60e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ce2cd60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce2cd6460"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2cd65f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ce2cd6780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ce2cd6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f4ce2cbe020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f4ce2cbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2cbe3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2cbe530"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2cbe6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2cbe850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2cbe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f4ce2cbf9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce2cbf9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2cbfd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce2c3b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce2c3b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce2c3bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4ce2c37220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c37220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2c35b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2c36a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce2c354e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2c35020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce2c33020"/>
        <function-ref name="start" scoped="" ref="0x7f4ce2c36090"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2c365a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce2c31260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce2c31260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce2c315e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f4ce2c31af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f4ce2c31af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2bf7390"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2bf8360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce2bf8ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce2bf8820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce2bf7850"/>
        <function-ref name="start" scoped="" ref="0x7f4ce2bf9970"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2bf9e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce0f852a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f852a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce0f82b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f84aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce0f824e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce0f82020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce0f81020"/>
        <function-ref name="start" scoped="" ref="0x7f4ce0f840d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce0f845e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0f86a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0f86a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0f86d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce0f7d2a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f7d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce0f7bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f7caa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce0f7b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce0f7b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce0f7a020"/>
        <function-ref name="start" scoped="" ref="0x7f4ce0f7c0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce0f7c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0f7ea10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0f7ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0f7ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f4ce0f65c10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce0f65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce0f64020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce0f641b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce0f64340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce0f644d0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f4ce0f671b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce0f671b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce0f67530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce0f676c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce0f67850"/>
        <function-ref name="get" scoped="" ref="0x7f4ce0f679e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce0f67b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce0f67d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce0f66020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce0f661b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce0f66340"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce0f664d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce0f66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f4ce0f668f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce0f668f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce0f66c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce0f66e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce0f65020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce0f651b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce0f65340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce0f654d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce0f65660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce0f657f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce0f65980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f4ce0f5ba80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f4ce0f5ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce0f5be00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f4ce0f5a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f4ce0f5a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f4ce0f5a340"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f5a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f4ce0f5d020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f4ce0f5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce0f5d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce0f5d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce0f5d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce0f5d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce0f5d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce0f5db70"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce0f5dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce0f5c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce0f5c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f4ce0f5c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f4ce0f5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce0f62da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f62da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce0f5e670"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f60610"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce0f5e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce0f60ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce0f5eb30"/>
        <function-ref name="start" scoped="" ref="0x7f4ce0f61bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce0f60150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0f62510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0f62510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0f62890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ce0f5c760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce0f5c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce0f5cae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce0f5cc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce0f5ce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce0f5b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce0f5b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce0f5b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce0f5b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce0f5b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce0f5b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ce2c1b080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce2c1b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce2c1a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce2c1a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce2c1a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce2c1ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4ce2c120f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f4ce2c120f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce2c11020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce2c119a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce2c114e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce2c11e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ce2c16cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce2c16cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce2c15b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce2c14550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce2c14090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce2c14a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4ce0f785f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f4ce0f785f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce0f75e50"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f77e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce0f75800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce0f75340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce0f74340"/>
        <function-ref name="start" scoped="" ref="0x7f4ce0f77430"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce0f77940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f4ce0f72d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f4ce0f72d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce0f6e670"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce0f6f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce0f6e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce0f6fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce0f6eb30"/>
        <function-ref name="start" scoped="" ref="0x7f4ce0f70b60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce0f6f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ce0f749b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce0f749b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce0f737e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce0f721b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce0f73ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce0f72670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f4ce2bf0090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4ce2bf0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bf0410"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bf05a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bf0730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bf08c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bf0a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bf0be0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bf0d70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f4ce2bef390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4ce2bef390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bef710"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bef8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2befa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2befbc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2befd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bee020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f4ce2bee6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f4ce2bee6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2beea20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2beebb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2beed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bed020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bed340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bed4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f4ce2bf2e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ce2bf2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bf1210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bf13a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bf1530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bf16c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bf1850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bf19e0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bf1b70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bf1d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f4ce2becce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f4ce2becce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2beb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2beb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2beb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2beb550"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2beb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2beb870"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2beba00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f4ce2bf5b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4ce2bf5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bf2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bf21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bf2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bf24d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bf2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bf27f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bf2980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bf2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f4ce2bed9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4ce2bed9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bedd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bec340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bec660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bec980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2be82f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2be82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2be8670"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2be8800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2be8990"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2be8b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2be8cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2be8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2be7020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2be71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2be7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2be74d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2be7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2be77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2be7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2be7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2be7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2be9020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2be9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2be93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2be9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2be96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2be9850"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2be99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2be9b70"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2be9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2be8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2be4de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2be4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2be3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2be3310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2be34a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2be3630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2be37c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2be3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2be3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2be3c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2be3e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2be2020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2be21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2be2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2be24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2be2760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2be28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2be5b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2be5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2be4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2be41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2be4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2be44d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2be4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2be47f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2be4980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2be4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2bdf930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bdf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bdfcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bdfe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2bde020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bde1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bde340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2bde4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bde660"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bde7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2bde980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2bdeb10"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bdeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2bdee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2bdd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2bdd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bdd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2be0710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2be0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2be0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2be0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2be0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bdf020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bdf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bdf340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bdf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bdf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2bd9480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bd9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bd9800"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bd9990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2bd9b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bd9cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bd9e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2bd8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bd81b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bd8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2bd84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2bd8660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bd87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2bd8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2bd8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2bd8da0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2bda1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bda1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bda550"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bda6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bda870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bdaa00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bdab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bdad20"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bd9020"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2bd4020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bd43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bd4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2bd46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bd4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bd49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2bd4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bd4d00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bd3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2bd31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2bd3340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bd34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2bd3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2bd37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2bd3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2bd6d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bd6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bd5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bd5310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bd54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bd5630"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bd57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bd5950"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bd5ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bd5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2bd0de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bd0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bcf180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bcf310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2bcf4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bcf630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bcf7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2bcf950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bcfae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bcfc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2bcfe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2bce020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2bce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2bce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2bce760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2bd1b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bd1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bd0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bd01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bd0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bd04d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bd0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bd07f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bd0980"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f4ce2bcb930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f4ce2bcb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bcbcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bcbe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2bca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bca340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2bca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bca660"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bca7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2bca980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2bcab10"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bcaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2bcae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2bc9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2bc92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bc9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f4ce2bcc710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2bcc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2bcca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2bccc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2bccdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2bcb020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2bcb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2bcb340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2bcb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2bcb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f4ce2bb6150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ce2bb6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ce2bb64d0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2bb6660"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce2bb67f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ce2bb6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f4ce2bb6d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f4ce2bb6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce2bb5180"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2bb5310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ce2bb54a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ce2bb5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f4ce2bb5a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ce2bb5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce2bb5da0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2bb1020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ce2bb11b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ce2bb1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f4ce2b998f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f4ce2b998f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f4ce2b99c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f4ce2b99e00"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce2b98020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce2b981b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce2b98340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f4ce2b984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4ce2baea20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f4ce2baea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ce2baeda0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b9c020"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce2b9c1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ce2b9c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f4ce2b9c5d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f4ce2b9c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f4ce2b9c950"/>
        <function-ref name="getControl" scoped="" ref="0x7f4ce2b9cae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f4ce2b9cc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f4ce2b9ce00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f4ce2b99020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f4ce2b991b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4ce2b99340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f4ce2b994d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f4ce2b99660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f4ce2b987a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f4ce2b987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2b98b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2b98cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2b98e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2b97020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2b971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2b97340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2b974d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2b97660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2b977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2b97980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2b97b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2b97ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2b97e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2b96120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce2b962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ce2b898a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ce2b898a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b89c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b89db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b88020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b881b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b88340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ce2b7fa30" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ce2b7fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b7fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b7e020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b7e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b7e340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b7e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b7e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ce2b868a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ce2b868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b86c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b86db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b85020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b851b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b85340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ce2b848a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ce2b848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b84c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b84db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b83020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b831b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b83340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ce2b8f8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ce2b8f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b8fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b8fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b8a020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b8a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b8a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ce2b818a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ce2b818a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b81d20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b80020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b801b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b80340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b804d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b80660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ce2b888a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ce2b888a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b88c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b88db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b87020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b871b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b87340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ce2b7ea30" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ce2b7ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b7edb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b7d020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b7d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b7d340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b7d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b7d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ce2b8b8f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ce2b8b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b8bc70"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b8be00"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b90020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b901b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b90340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ce2b838a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ce2b838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b83c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b83db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b82020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b821b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b82340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ce2b8a8a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ce2b8a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b8ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b8adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b89020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b891b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b89340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ce2b80a30" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ce2b80a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b80db0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b7f020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b7f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b7f340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b7f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b7f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ce2b878a0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ce2b878a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b87c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b87db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b86020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b861b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b86340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ce2b858a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ce2b858a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b85c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b85db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b84020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b841b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b84340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ce2b908a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ce2b908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b90c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b90db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b8f020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b8f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b8f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ce2b828a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ce2b828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b82c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b82db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b81020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b811b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b81340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f4ce2b758a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f4ce2b758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b75c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b75db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b74020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b741b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b74340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f4ce2b6ba30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f4ce2b6ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b6bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b6a020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b6a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b6a340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b6a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f4ce2b728a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f4ce2b728a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b72c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b72db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b71020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b711b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b71340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f4ce2b708a0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f4ce2b708a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b70c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b70db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b6f020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b6f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b6f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f4ce2b788a0" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f4ce2b788a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b78c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b78db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b77020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b771b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b77340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f4ce2b6d8a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f4ce2b6d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b6dd20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b6c020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b6c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b6c340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b6c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f4ce2b748a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f4ce2b748a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b74c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b74db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b73020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b731b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b73340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f4ce2b6aa30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f4ce2b6aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b6adb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b69020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b691b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b69340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b694d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f4ce2b7c810" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f4ce2b7c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b7cb90"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b7cd20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b79020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b791b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b79340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f4ce2b6f8a0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f4ce2b6f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b6fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b6fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b6e020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b6e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b6e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f4ce2b778a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f4ce2b778a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b77c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b77db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b75020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b751b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b75340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f4ce2b6ca30" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f4ce2b6ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b6cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b6b020"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b6b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b6b340"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b6b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f4ce2b738a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f4ce2b738a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b73c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b73db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b72020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b721b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b72340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f4ce2b718a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f4ce2b718a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b71c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b71db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b70020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b701b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b70340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f4ce2b798a0" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f4ce2b798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b79c20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b79db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b78020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b781b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b78340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f4ce2b6e8a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f4ce2b6e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2b6ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2b6edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2b6d020"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2b6d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2b6d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2b6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ce2a97610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ce2a97610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2a97990"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2a97b20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2a97cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2a97e40"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2a89020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2a891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ce2a98a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ce2a98a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce2a98db0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2a97020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ce2a971b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ce2a97340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f4ce2a87610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f4ce2a87610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce2a87990"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2a87b20"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2a87cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f4ce2a87e40"/>
        <function-ref name="enable" scoped="" ref="0x7f4ce2a86020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4ce2a861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f4ce2a88a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f4ce2a88a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce2a88df0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce2a87020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ce2a871b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ce2a87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ce2632e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2632e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2631410"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26315a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ce263d160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ce263d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ce2635e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2635e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2634210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ce262f880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce262f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262fc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ce26270a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ce26270a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2627420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26275b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ce262e0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ce262e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262e420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ce261b500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce261b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261b880"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ce261e500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce261e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261e880"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ce263c490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce263c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ce2624880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ce2624880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2624c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2624d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ce261f500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce261f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261f880"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ce2634e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ce2634e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2633210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ce2633e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2633e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2632210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ce262a880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce262a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262ac00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ce262b0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ce262b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262b420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ce262e880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce262e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262ec00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce2640a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2640a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce2640e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce263e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce263e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ce263be00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce263be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26381c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ce2638490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ce2638490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2638910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ce2622c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce2622c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26210a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2621230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ce2638be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce2638be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ce261fce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce261fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ce263b160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce263b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ce26240a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ce26240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2624420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ce2633670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce2633670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26339f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2633b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ce2634670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2634670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26349f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2634b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ce263ead0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce263ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ce26250a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce26250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2625420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ce2627880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ce2627880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2627c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2627d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ce2625880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce2625880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2625c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2625d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ce261dce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce261dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ce261ece0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce261ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ce262b880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ce262b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262bc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ce26260a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ce26260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2626420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26265b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ce2620ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce2620ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ce262d880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce262d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262dc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ce261bce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce261bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce261a0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce261a230"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261a3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce261a550"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce261a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ce263e480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce263e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ce2635670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ce2635670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26359f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2635b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ce2632670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce2632670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26329f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2632b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ce26280a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce26280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2628420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ce262d0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce262d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262d420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ce2628880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce2628880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2628c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2628d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ce2631870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2631870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2631bf0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2631d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ce263d7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ce263d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ce262f0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce262f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262f420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce2641e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce2641e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce26401c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2640350"/>
        <function-ref name="request" scoped="" ref="0x7f4ce26404e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2640670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2640800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ce26362f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce26362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2636670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ce2635020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ce2635020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ce2620500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ce2620500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2620880"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2620a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ce2621ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce2621ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26200a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2620230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ce263b7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce263b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ce2621500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce2621500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2621880"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2621a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ce261d500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ce261d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce261d880"/>
        <function-ref name="write" scoped="" ref="0x7f4ce261da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ce262a0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce262a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262a420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ce2626880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ce2626880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2626c00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2626d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ce263de00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ce263de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ce263cae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce263cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce263ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ce262c0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce262c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262c420"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ce2636940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ce2636940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2636cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ce262c880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ce262c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce262cc00"/>
        <function-ref name="write" scoped="" ref="0x7f4ce262cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ce26220a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ce26220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2622820"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26229b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ce261a9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce261a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce261ad30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce2619020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26191b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce2619340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce26194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4ce2a46630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a46630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce2a469b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce2a46b40"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2a46cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce2a46e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce2a45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce2a48670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a48670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce2a489f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce2a48b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce2a48d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4ce2a458c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4ce2a458c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2a45c40"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2a45dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4ce2a446f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4ce2a446f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2a44a70"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2a44c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce2a4b950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce2a4b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2a4bcd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2a4be60"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2a48020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2a481b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2a48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4ce2a43510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a43510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2a43890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f4ce2a2d680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce2a2d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2a2da00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce2a2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f4ce2a3ebb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f4ce2a3ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce2a3c020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce2a3c1b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2a3c340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce2a3c4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce2a3c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce2a42920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce2a42920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce2a42ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce2a42e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce2a3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f4ce2a36080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ce2a36080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ce2a36400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f4ce2a29b90" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f4ce2a29b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce2a34020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce2a341b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce2a34340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce2a344d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce2a34660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce2a347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ce2a39400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ce2a39400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2a39780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2a39910"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2a39aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2a39c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2a39dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f4ce2a3b020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f4ce2a3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2a3b3a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2a3b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f4ce2a3bdb0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f4ce2a3bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2a3a180"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2a3a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce2a34a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce2a34a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce2a34df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce2a2e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce2a2e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce2a2e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce2a2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2a2e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce2a2e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce2a2ee30"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2a2e980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce2a2eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce2a2eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce2a3f810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce2a3f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2a3fb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2a3fd20"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2a3e020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2a3e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2a3e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f4ce2a24bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f4ce2a24bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2a23020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2a231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f4ce2a3aba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f4ce2a3aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2a39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce29ca770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce29ca770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce29caaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce29cac80"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce29cae10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce29c1020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce29c11b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce29c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce29c41d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce29c41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce29c4550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce29c46e0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce29c4870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce29c4a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce29c4b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce29c4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce29c0020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce29c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce29c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce29c0b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce29c0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce29bf020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce29bf1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce29bf340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce29bf4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce29bf660"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce29bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ce2666020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce2666020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce26663a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce2666530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ce29a68f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ce29a68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ce29a6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce29a7c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce29a7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce29a6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce29a61b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce29a6340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce29a64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce29a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce0e8d8f0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e8d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce0e8dc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0e8de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ce0e8b2b0" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce0e8b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0e8b630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce0e8b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ce0e8ba50" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce0e8ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce0e8bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ce0e8c0c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ce0e8c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ce0e8c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce0e8fc30" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce0e8fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0e8d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce0e8d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce0e8d340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0e8d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0e8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ce0e8c6d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce0e8c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ce0e8ca50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ce0e8cbe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ce0e8cd70"/>
        <function-ref name="write" scoped="" ref="0x7f4ce0e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ce29415e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce29415e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce2941960"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce2941af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ce293e510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce293e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce293e890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce293ea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ce293b600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce293b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce293b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ce2941dd0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ce2941dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ce2940180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ce293d370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ce293d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce293d6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce293d880"/>
        <function-ref name="request" scoped="" ref="0x7f4ce293da10"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce293dba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce293dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce2947a20" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce2947a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2947da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce2943020"/>
        <function-ref name="request" scoped="" ref="0x7f4ce29431b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2943340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce29434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ce2940480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce2940480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ce2940800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ce2940990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ce2940b20"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2940cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ce29376a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce29376a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce2937a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce2937bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ce28c6c40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce28c6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce28c5020"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce28c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4ce28c4700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f4ce28c4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce28c4aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce28c4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f4ce28c3e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f4ce28c3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce28c21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4ce28c5440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f4ce28c5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4ce28c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4ce28c2490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ce28c2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce28c2810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce28c29a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce28c2b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce28c2cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce28c2e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce28c1020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce28c11b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce28c1340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce28c14d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce28c1660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce28c17f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce28c1980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce28c1b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce28c1da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce28c0020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce28c01b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce28c0340"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce28c04d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce28c0660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce28c07f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce28c0980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce28c0b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce28c0ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce28c0e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce28bf020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce28bf3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce28bf540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce28bf6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce28bf860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce28bf9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce28bfb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce28bfd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce28be020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce28be1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce28be340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce28be4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce28be660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce28be7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce28be980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce28beb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce28bd5a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce28bd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce28bd920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce28bdab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce28bdc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce28bddd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce28bb020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce28bb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce28bb340"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce28bb980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce28bb660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce28bb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce28bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ce28c3060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ce28c3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce28c3400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce28c3590"/>
        <function-ref name="request" scoped="" ref="0x7f4ce28c3720"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce28c38b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce28c3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce28c7e80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce28c7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce28c6240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce28c63d0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce28c6560"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce28c66f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce28c6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4ce28c5a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4ce28c5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4ce28c5dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4ce28c4020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4ce28c41b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce28c4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ce28bede0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce28bede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce28bd180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce28bd310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f4ce28bbc50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f4ce28bbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce28ba020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce28ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4ce28ab8a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ce28ab8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce28abc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ce28ae3b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce28ae3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce28ae730"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce28ae8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ce28b5860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce28b5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce28b5be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce28b5d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce28b2020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce28b21b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce28b2340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce28b24d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce28b2660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce28b27f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce28b2980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce28b2b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce28b2ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce28b2e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce28b1020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce28b12b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce28b1440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce28b15d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce28b1760"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce28b18f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce28b1a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce28b1c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce28b1da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce28b0020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce28b01b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce28b0340"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce28b04d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce28b0860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce28b09f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce28b0b80"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce28b0d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce28af020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce28af1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce28af340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce28af4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce28af660"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce28af7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce28af980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce28afb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce28afca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce28afe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce28ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ce2872670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ce2872670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce28729f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2872b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2872d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2871020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce28711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2871340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce28714d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2871660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce28717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2871980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2871b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2871ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2871e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2870120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce28702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ce28a5dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ce28a5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce28a4180"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce28a4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4ce2870670" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4ce2870670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce28709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2870b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2870d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce286f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce286f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce286f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce286f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce286f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce286f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce286f980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce286fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce286fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce286fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce286e120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce286e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4ce286e670" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4ce286e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce286e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce286eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce286ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce286c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce286c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce286c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce286c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce286c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce286c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce286c980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce286cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce286cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce286ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce286b120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce286b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4ce28a9020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ce28a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce28a93a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce28a9530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce28a96c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce28a9850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce28a99e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce28a9b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce28a9d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce28a8020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce28a81b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce28a8340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce28a84d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce28a8660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce28a87f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce28a8a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce28a8c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce28a8da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce28a7020"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce28a71b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce28a7340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce28a74d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce28a7660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce28a77f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce28a7980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce28a7b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce28a7ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce28a6220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce28a63b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce28a6540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce28a66d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce28a6860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce28a69f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce28a6b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce28a6d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce28a5020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce28a51b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce28a5340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce28a54d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce28a5660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce28a57f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce28a5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f4ce287b5b0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4ce287b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ce287b930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ce287bac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ce287bc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ce287bde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ce28a2020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ce28a21b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ce28a2340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ce28a24d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce28a2660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ce28a27f0"/>
        <function-ref name="getData" scoped="" ref="0x7f4ce28a2980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ce28a2b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ce28a2ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ce28a1020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ce28a11b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ce28a1340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ce28a14d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ce28a1660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ce28a17f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ce28a1980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ce28a1b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ce28a1ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ce28a1e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ce287a020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ce287a1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ce287a540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ce287a6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ce287a860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ce287a9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ce287ab80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ce287ad10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ce2879020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ce28791b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ce2879340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ce28794d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ce2879660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ce28797f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ce2879980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ce2879b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ce2879ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ce2879e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ce2878020"/>
        <function-ref name="setData" scoped="" ref="0x7f4ce28781b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ce2878340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ce28784d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ce2878660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ce28787f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ce2878980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ce2878b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ce2877420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ce28775b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ce2877740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ce28778d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ce2877a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ce2877bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ce2877d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ce2876020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ce28761b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ce2876340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4ce2874670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4ce2874670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce28749f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2874b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2874d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2873020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce28731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2873340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce28734d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2873660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce28737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2873980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2873b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2873ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2873e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2872120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce28722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ce28a4750" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce28a4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce28a4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ce2876700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ce2876700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce2876a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2876c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2876da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2875020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce28751b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2875340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce28754d0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2875660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce28757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2875980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2875b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2875ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce2875e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2874120"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce28742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce0e812c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e812c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce0e81640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0e817d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f4ce0e7a440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f4ce0e7a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce0e7a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce0e73760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0e73760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce0e73ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce0e73c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4ce0e7aa50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ce0e7aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ce0e7add0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ce0e79020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ce0e791b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ce0e79340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ce0e794d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ce0e79660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ce0e797f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ce0e79980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce0e79b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ce0e79ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f4ce0e79e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ce0e78020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ce0e781b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ce0e78440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ce0e785d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ce0e78760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ce0e788f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ce0e78a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ce0e78c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ce0e78da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ce0e77020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ce0e771b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ce0e77340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ce0e774d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ce0e77660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ce0e779f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ce0e77b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ce0e77d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ce0e76020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ce0e761b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ce0e76340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ce0e764d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ce0e76660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ce0e767f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ce0e76980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ce0e76b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ce0e76ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ce0e76e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ce0e75020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ce0e751b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ce0e75340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ce0e754d0"/>
        <function-ref name="setData" scoped="" ref="0x7f4ce0e75660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ce0e757f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ce0e75980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ce0e75b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ce0e75ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ce0e75e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ce0e74020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ce0e745b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ce0e74740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ce0e748d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ce0e74a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ce0e74bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ce0e74d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ce0e73020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ce0e731b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ce0e73340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ce0e734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ce0e7bc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce0e7bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce0e7a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce0e7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce0e82640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce0e82640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0e829c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce0e82b50"/>
        <function-ref name="request" scoped="" ref="0x7f4ce0e82ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0e82e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0e81030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ce0e802b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce0e802b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce0e80630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce0e807c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce0e80950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce0e80ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce0e80c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce0e80e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce0e7e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce0e7e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce0e7e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce0e7e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce0e7e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce0e7e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce0e7e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce0e7ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce0e7eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce0e7d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce0e7d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce0e7d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce0e7d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce0e7d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce0e7d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce0e7d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce0e7db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce0e7dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce0e7de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce0e7c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce0e7c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce0e7c540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce0e7c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce0e7c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce0e7c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce0e7cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce0e7cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce0e7b020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce0e7b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce0e7b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce0e7b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce0e7b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce0e7b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce0e7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce0e81a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0e81a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce0e81de0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce0e80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce27cc8a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce27cc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce27ccc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce27ccdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce27ca020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce27ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce27ca3a0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce27ca530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ce27d2a80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ce27d2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce27d2e00"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce27cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce27cd5c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce27cd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce27cd940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce27cdad0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce27cdc60"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce27cddf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce27cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ce27cf9a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce27cf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce27cfd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce27cb130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce27cb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce27cb4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce27cb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ce27b34b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce27b34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce27b3830"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce27b39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ce27c85c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ce27c85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce27c8960"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce27c8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4ce27b4e70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ce27b4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce27b3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ce27b4020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce27b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce27b43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4ce27b4690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ce27b4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce27b4a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce27b4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce2739bf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce2739bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce2738020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce27381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce2737930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce2737930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce2737cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce2737e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ce2738400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce2738400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2738780"/>
        <function-ref name="requested" scoped="" ref="0x7f4ce2738910"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce2738aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2738c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce2738dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce273ae60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce273ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce2739230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce27393c0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce2739550"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce27396e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce2739870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce2737060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce2737060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce27373e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce2737570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0e0e140" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0e0e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0e0e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ce0e0e750" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ce0e0e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce0e0ead0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ce0e0ec60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ce0e0edf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce0e0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce0e0a850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0e0a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce0e0abf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0e0ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce0e08590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0e08590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce0e08930"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce0e08ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ce0e08d50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce0e08d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce0e07100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ce0e07290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ce0e07420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce0e075b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ce0e09020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce0e09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0e093a0"/>
        <function-ref name="requested" scoped="" ref="0x7f4ce0e09530"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0e096c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0e09850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0e099e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce0e07800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce0e07800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce0e07b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce0e07d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce0e06020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce0e061b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce0e06340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce0e064d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce0e06660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce0e06ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce0e06980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce0e067f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce0e06b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce0e0b970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce0e0b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0e0bd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce0e0a020"/>
        <function-ref name="request" scoped="" ref="0x7f4ce0e0a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0e0a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0e0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce0e09c30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0e09c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce0e08020"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce0e081b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4ce0e05020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f4ce0e05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce0e053a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce0e05530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f4ce272f880" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f4ce272f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ce272fc00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ce272fd90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ce272c020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ce272c1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ce272c340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ce272c4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ce272c660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ce272c7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce272c980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ce272cb10"/>
        <function-ref name="getData" scoped="" ref="0x7f4ce272cca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ce272ce30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ce272b020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ce272b2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ce272b440"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ce272b5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ce272b760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ce272b8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ce272ba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ce272bc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ce272bda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ce272a020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ce272a1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ce272a340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ce272a4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ce272a860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ce272a9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ce272ab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ce272ad10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ce2729020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ce27291b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ce2729340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ce27294d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ce2729660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ce27297f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ce2729980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ce2729b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ce2729ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ce2729e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ce2728020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ce27281b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ce2728340"/>
        <function-ref name="setData" scoped="" ref="0x7f4ce27284d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ce2728660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ce27287f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ce2728980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ce2728b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ce2728ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ce2728e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ce2727420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ce27275b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ce2727740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ce27278d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ce2727a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ce2727bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ce2727d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ce2726020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ce27261b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ce2726340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f4ce271c250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f4ce271c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce271c5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce271c760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce271c8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce271ca80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce271cc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce271cda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce271b020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce271b1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce271b340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce271b4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce271b660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce271b7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce271b980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce271bc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce271bda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce271a020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce271a1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce271a340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce271a4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce271a660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce271a7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce271a980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce271ab10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce271aca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce271ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce2719220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce27193b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce2719540"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce27196d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce2719860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce27199f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce2719b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce2719d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce2718020"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce27181b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce2718340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce27184d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce2718660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce27187f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce2718980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ce2716cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ce2716cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce27150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2715230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce27153c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2715550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce27156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce2715870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2715a00"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2715b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2715d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2714020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce27141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2714340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce27144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2714760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce27148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f4ce2723430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f4ce2723430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f4ce27237b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f4ce2723940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f4ce2723ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f4ce2723c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f4ce2723df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f4ce2722020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f4ce27221b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f4ce2722340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f4ce27224d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f4ce2722660"/>
        <function-ref name="getData" scoped="" ref="0x7f4ce27227f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f4ce2722980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f4ce2722b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f4ce2722da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f4ce2721020"/>
        <function-ref name="getIV" scoped="" ref="0x7f4ce27211b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f4ce2721340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f4ce27214d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f4ce2721660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f4ce27217f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f4ce2721980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f4ce2721b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f4ce2721ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f4ce2721e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f4ce2720020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f4ce27203b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f4ce2720540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f4ce27206d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f4ce2720860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f4ce27209f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f4ce2720b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f4ce2720d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f4ce271f020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f4ce271f1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f4ce271f340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f4ce271f4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f4ce271f660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f4ce271f7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f4ce271f980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f4ce271fb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f4ce271fca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f4ce271fe30"/>
        <function-ref name="setData" scoped="" ref="0x7f4ce271e020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f4ce271e1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f4ce271e340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f4ce271e4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f4ce271e660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f4ce271e7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f4ce271e980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f4ce271d020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f4ce271d1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f4ce271d340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f4ce271d4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f4ce271d660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f4ce271d7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f4ce271d980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f4ce271db10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f4ce271dca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f4ce271de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ce2718d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ce2718d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce27170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce2717270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce2717400"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce2717590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce2717720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce27178b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce2717a40"/>
        <function-ref name="get" scoped="" ref="0x7f4ce2717bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce2717d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce2716020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce27161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce2716340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce27164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce2716760"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce27168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ce2601c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce2601c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2600210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ce260cda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ce260cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ce2605b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce2605b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2603020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ce25ff670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce25ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ff9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ce25f8e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ce25f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f7210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ce25ffe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ce25ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fe210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ce25eb2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce25eb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25eb670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25eb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ce25ed2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce25ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ed670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ed800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ce260a120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce260a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ce25f3670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ce25f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f39f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ce25ee2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce25ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ee670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ce2603c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ce2603c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2602020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ce2602c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce2602c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2601020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce26011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ce25f9670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce25f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f99f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ce25fbe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ce25fbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fa210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ce25fe670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce25fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce260d760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce260d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce260dae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce260dc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce260de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ce2608aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce2608aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2608e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ce2607120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ce2607120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26075a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ce25f2a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce25f2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f2df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ce2607870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce2607870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2607bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ce25eead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce25eead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25eee50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ce260adc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce260adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce2608180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ce25f4e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ce25f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f3210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ce2602480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce2602480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2602800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2602990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ce2603480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce2603480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2603800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2603990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ce260c750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce260c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ce25f5e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce25f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f4210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ce25f7670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ce25f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f79f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ce25f4670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce25f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f49f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ce25ecad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce25ecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ece50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ce25edad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce25edad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ede50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ce25fa670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ce25fa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ce25f7e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ce25f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f5210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ce25f0ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce25f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f0e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ce25fc670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce25fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ce25ebad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce25ebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce25ebe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce25ea020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ea1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce25ea340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce25ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ce260c100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce260c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ce2605370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ce2605370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26056f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2605880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ce2601480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce2601480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce2601800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2601990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ce25f9e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce25f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f8210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ce25fee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce25fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fc210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ce25f8670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce25f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f89f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ce2600670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce2600670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce26009f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce2600b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ce260b450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ce260b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ce2600e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce2600e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ff210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce260ea80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce260ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce260ee00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce260d020"/>
        <function-ref name="request" scoped="" ref="0x7f4ce260d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce260d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce260d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ce2606020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce2606020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ce2606cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ce2606cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26050a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ce25f02f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ce25f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f0670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ce25f1ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce25f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f1e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ce2608450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce2608450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26087d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ce25f12f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce25f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f1670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ce25ec2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ce25ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ec670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ce25fae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce25fae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f9210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ce25f5670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ce25f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f59f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ce260baa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ce260baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ce260a770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce260a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce260aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ce25fce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce25fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fb210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ce2606670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ce2606670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce26069f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ce25fb670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ce25fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25fb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25fbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ce25f3e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ce25f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25f2610"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25f27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ce25ea7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce25ea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce25eab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce25eacb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25eae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce25e9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce25e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ce25d5c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce25d5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d3210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ce25dfda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ce25dfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25de180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ce25d8b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce25d8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d7020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ce25d2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce25d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d29f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ce25cbe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ce25cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ca210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ce25d2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ce25d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d1210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ce25be2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce25be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25be670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25be800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ce25c12f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce25c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c1670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ce25dd120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce25dd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ce25c7670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ce25c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c79f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ce25c22f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce25c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c2670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ce25d7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ce25d7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d6020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ce25d6c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce25d6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d5020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ce25cc670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce25cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ce25cfe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ce25cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ce210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ce25d1670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce25d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d19f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce25e1760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce25e1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce25e1ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce25e1c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce25e1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ce25dcaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce25dcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ce25db120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ce25db120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25db5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ce25c5a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce25c5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c5df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ce25db870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce25db870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ce25c2ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce25c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c2e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ce25dddc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce25dddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ce25c8e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ce25c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c7210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ce25d6480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce25d6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d6800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ce25d7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce25d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d7800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ce25df750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce25df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dfad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ce25c9e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce25c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c8210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ce25ca670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ce25ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ce25c8670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce25c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c89f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ce25c0ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce25c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c0e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ce25c1ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce25c1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c1e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ce25ce670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ce25ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ce25cae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ce25cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c9210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ce25c3ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce25c3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c3e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ce25d0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce25d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d09f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ce25bead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce25bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce25bee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce25bd020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25bd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce25bd340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce25bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ce25df100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce25df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25df480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ce25d8370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ce25d8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d86f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ce25d5480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce25d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d5800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ce25cce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce25cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25cb210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ce25d1e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce25d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d0210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ce25cb670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce25cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25cb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ce25d3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce25d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d39f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ce25de450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ce25de450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25de7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ce25d3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce25d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25d2210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce25e29e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce25e29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce25e2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce25e1020"/>
        <function-ref name="request" scoped="" ref="0x7f4ce25e11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce25e1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce25e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ce25d9020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce25d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ce25d9cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ce25d9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25d80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ce25c32f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ce25c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c3670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ce25c4ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce25c4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c4e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ce25dc450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce25dc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ce25c42f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce25c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c4670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ce25c02f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ce25c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c0670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ce25cee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce25cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25cc210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ce25c9670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ce25c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c99f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ce25deaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ce25deaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25dee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ce25dd770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce25dd770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25ddaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ce25d0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce25d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25cf210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ce25d9670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ce25d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce25d99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ce25cf670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ce25cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25cf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ce25c7e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ce25c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce25c5610"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25c57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ce25bd7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce25bd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce25bdb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce25bdcb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce25bde40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce25bc020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce25bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f4ce25b5b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4ce25b5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4ce25b2020"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce25b21b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4ce25b2340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4ce25b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7f4ce2592020" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f4ce2592020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f4ce25923a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f4ce2592530"/>
        <function-ref name="startDAO" scoped="" ref="0x7f4ce25926c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f4ce2591020" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f4ce2591020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce25913a0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2591530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce2d746f0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce2d746f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce2d74a70"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2d74c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f4ce24c2270" loc="57:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f4ce24c2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce24c25f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f4ce24c2780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f4ce24c2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7f4ce24c70f0" loc="55:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7f4ce24c70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce24c4260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce24c6660"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce24c7ce0"/>
        <function-ref name="put" scoped="" ref="0x7f4ce24c6ae0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce24c61e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7f4ce24cfbb0" loc="52:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7f4ce24cfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce24cd020"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce24cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ce24cf410" loc="51:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce24cf410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce24cf790"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce24cf920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7f4ce24c02f0" loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7f4ce24c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce24c0670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce24c0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7f4ce24daae0" loc="49:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7f4ce24daae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce24d5110"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce24d75b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce24d64a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce24d6020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce24d5a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce24d5590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce24d7a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce24d9750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce24d6ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce24d9c20"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24d7130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f4ce24cc5a0" loc="54:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f4ce24cc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f4ce24ca4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce24c8260"/>
        <function-ref name="element" scoped="" ref="0x7f4ce24c88d0"/>
        <function-ref name="full" scoped="" ref="0x7f4ce24cb680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce24ca020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce24cab50"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce24cb200"/>
        <function-ref name="size" scoped="" ref="0x7f4ce24cbb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce24cd400" loc="53:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce24cd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce24cd780"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce24cd910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce24cdaa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce24cdc30"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce24cddc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce24cc020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce24cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7f4ce24c0ad0" loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7f4ce24c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce24c0e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce24be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7f4ce24e04b0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f4ce24e04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f4ce24e0830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f4ce24e09c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f4ce24e0b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7f4ce24df720" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f4ce24df720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce24dbc40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce24dc1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce24db020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce24dcae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce24da590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce24da110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce24dc660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce24de390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce24db630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce24de860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24ded30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7f4ce24d4020" loc="50:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f4ce24d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce24d0630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce24d2a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce24d1920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce24d14a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce24cf020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce24d0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce24d1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce24d4c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce24d0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce24d2110"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24d25e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7f4ce24c4980" loc="56:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f4ce24c4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f4ce24c4d00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f4ce24c3e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f4ce24c2020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f4ce24c3340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce24c34d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f4ce24c3660"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce24c37f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f4ce24c3980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f4ce24c3b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f4ce24c3ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce24c3020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f4ce24c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f4ce24c2b60" loc="58:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f4ce24c2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f4ce24c1020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f4ce24c11b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f4ce24c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f4ce24c1590" loc="59:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce24c1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f4ce24c1910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f4ce24c1aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f4ce24c1c30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f4ce24c1dc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f4ce24c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce24e0da0" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce24e0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce24df180"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24df310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce24babd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce24babd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce24b5110"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce24b86a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce24b74a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce24b7020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce24b5a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce24b5590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce24b8b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce24b9860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce24b7ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce24b9d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24b8220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce24b3560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce24b3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce24afa20"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce24b1020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce24b1da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce24b1920"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce24ae4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce24ae020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce24b14a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce24b21b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce24af410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce24b2680"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24b2b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce24ac020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce24ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce24a8630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce24aba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce24aa920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce24aa4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce24a7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce24a8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce24aa020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce24acc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce24a8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce24ab110"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24ab5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce24a3510" loc="31:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce24a3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce24a3890"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce24a3a20"/>
        <function-ref name="start" scoped="" ref="0x7f4ce24a3bb0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce24a3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f4ce249f6e0" loc="36:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce249f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f4ce249fa60"/>
        <function-ref name="initiate" scoped="" ref="0x7f4ce249fbf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f4ce249fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f4ce249c930" loc="35:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f4ce249c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f4ce249ccb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f4ce249ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f4ce24a2d40" loc="33:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f4ce24a2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce24a10e0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce24a1270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f4ce249e9d0" loc="41:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce249e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce249ed50"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce249b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f4ce24a1560" loc="34:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce24a1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f4ce24a18e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f4ce24a1a70"/>
        <function-ref name="delRoute" scoped="" ref="0x7f4ce24a1c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f4ce24a1d90"/>
        <function-ref name="addRoute" scoped="" ref="0x7f4ce24a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f4ce249e130" loc="40:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce249e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce249e4b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce249e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce24a2540" loc="32:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce24a2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce24a28c0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce24a2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce2498a10" loc="17:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2498a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2498d90"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce2497020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce24971b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce2497340"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce24974d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce2497660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce24977f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce2496bf0" loc="20:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce2496bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce2495020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce24951b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce2495340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce24954d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce2495660"/>
        <function-ref name="get" scoped="" ref="0x7f4ce24957f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce2495980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce2494020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2495b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce2495ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce2495e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7f4ce2497ae0" loc="18:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7f4ce2497ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2497e60"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2496020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f4ce24962d0" loc="19:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f4ce24962d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f4ce2496650"/>
        <function-ref name="delTLV" scoped="" ref="0x7f4ce24967e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f4ce2496970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce24981d0" loc="14:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce24981d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2498550"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce24986e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f4ce247d890" loc="22:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f4ce247d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f4ce247dc10"/>
        <function-ref name="initiate" scoped="" ref="0x7f4ce247dda0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f4ce247c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7f4ce24791d0" loc="28:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f4ce24791d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2479550"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce24796e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce2479870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f4ce2473790" loc="31:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce2473790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f4ce3544110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce2470860"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce2472cb0"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce24723b0"/>
        <function-ref name="put" scoped="" ref="0x7f4ce2470170"/>
        <function-ref name="size" scoped="" ref="0x7f4ce2472830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7f4ce245be40" loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f4ce245be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce24591e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2459370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f4ce247ea50" loc="21:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f4ce247ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f4ce247edd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f4ce247d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f4ce247ca90" loc="24:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f4ce247ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce247ce10"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce247a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce247a2a0" loc="25:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce247a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce247a620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce2479b20" loc="29:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce2479b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2478020"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce24781b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce2478340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce24784d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce2478660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce24787f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce2478980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7f4ce246f1c0" loc="34:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7f4ce246f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce246b630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce246ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce246c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce246c550"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce246a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce246bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce246c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce246fdb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce246b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce246e2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce246e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f4ce2499d20" loc="20:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce2499d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f4ce247e0e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f4ce247e270"/>
        <function-ref name="delRoute" scoped="" ref="0x7f4ce247e400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f4ce247e590"/>
        <function-ref name="addRoute" scoped="" ref="0x7f4ce247e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f4ce2478c30" loc="30:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f4ce2478c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f4ce2473020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f4ce24731b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f4ce2473340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce247c290" loc="23:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce247c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce247c610"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce247c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f4ce23ec020" loc="11:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f4ce23ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23ec3a0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23ec530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce23ec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f4ce23e5720" loc="15:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f4ce23e5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23e5aa0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23e5c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce23e5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f4ce23ed020" loc="10:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f4ce23edd00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f4ce23ed530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f4ce23ed6c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f4ce23ed850"/>
        <function-ref name="matchContext" scoped="" ref="0x7f4ce23ed9e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f4ce23ed3a0"/>
        <function-ref name="getContext" scoped="" ref="0x7f4ce23edb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce23ec980" loc="12:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce23ec980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce23ecd00"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce23eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f4ce23eada0" loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f4ce23eada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23e2180"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23e2310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce23e24a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f4ce23d5300" loc="45:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f4ce23d5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f4ce23d5780"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce23d5910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce23d5aa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce23d5c30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce23d5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ce23d9450" loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce23d9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce23d97d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce23d9960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f4ce23d7900" loc="43:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f4ce23d7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23d7c80"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23d7e10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce23d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7f4ce23df0a0" loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7f4ce23df0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23df420"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23df5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce23d62d0" loc="44:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce23d62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce23d6650"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce23d67e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce23d6970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce23d6b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce23d6c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce23d6e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce23d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7f4ce23e0060" loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7f4ce23e0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23e03e0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23e0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f4ce23e27a0" loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce23e27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f4ce23e14d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f4ce23e2cb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f4ce23e2e40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f4ce23e1020"/>
        <function-ref name="matchContext" scoped="" ref="0x7f4ce23e11b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f4ce23e2b20"/>
        <function-ref name="getContext" scoped="" ref="0x7f4ce23e1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7f4ce23df8a0" loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7f4ce23df8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23dfc20"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23dfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7f4ce23e0860" loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7f4ce23e0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce23e0be0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce23e0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7f4ce23de270" loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7f4ce23de270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce23da6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce23dccb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce23dba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce23db5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce23d9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce23dab60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce23db170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce23dee60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce23da0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce23dc360"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce23dc830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f4ce23d9c50" loc="42:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce23d9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f4ce23d7020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f4ce23d71b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f4ce23d7340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f4ce23d74d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f4ce23d7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7f4ce23a2380" loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7f4ce23a2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce23a2700"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce23a2890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce23e1790" loc="30:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce23e1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce23e1b10"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce23e1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce2347a30" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce2347a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2347dd0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7f4ce2342280" loc="50:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7f4ce2342280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2342600"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2342790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce23402d0" loc="54:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce23402d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce2340650"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce23407e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce2340970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce2340b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce2340c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce2340e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce233f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce233f2a0" loc="55:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce233f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce233f620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce233f7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce233f940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce233fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce233fc60"/>
        <function-ref name="get" scoped="" ref="0x7f4ce233fdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce233e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce233e660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce233e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce233e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce233e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f4ce2342a80" loc="53:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce2342a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2342e00"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce2340020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f4ce0cce9f0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f4ce0cce9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cced70"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0ccd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce0cce1f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce0cce1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cce590"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0cce720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce23109b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce23109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce2310d50"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce230f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f4ce0cc3820" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f4ce0cc3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cc3ba0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0cc3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce0cc3020" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce0cc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cc33c0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0cc3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce230e9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce230e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce230ed50"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce230d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f4ce0cb8020" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f4ce0cb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cb83a0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0cb8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce0cb96a0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce0cb96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cb9a40"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0cb9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce230c9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce230c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce230cd50"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce230b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f4ce0cae5e0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f4ce0cae5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cae960"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0caeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce0cb0db0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce0cb0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0cae180"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0cae310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce23097b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce23097b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce2306c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce2307260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce2306020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce2307b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce2305590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce2305110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce23076e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce2308400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce2306630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce23088d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce2308da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce22f2020" loc="35:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce22f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce22f23a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce22f2530"/>
        <function-ref name="start" scoped="" ref="0x7f4ce22f26c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce22f2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f4ce22f0020" loc="37:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce22f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f4ce22f88c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f4ce22f7090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce22ef170"/>
        <function-ref name="get" scoped="" ref="0x7f4ce22f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f4ce22f2af0" loc="36:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f4ce22f2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce22f2e70"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce22f1030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce22f11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce22ea230" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce22ea230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce22ea5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4ce22ea870" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce22ea870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce22eabf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce22ead80"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce22e9020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce22e91b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce22e9340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce22e94d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce22e9660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce22e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce22e97f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce22e9980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce22e9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce22d16d0" loc="43:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce22d16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce22d1a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce22d1be0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce22d1d70"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce22d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7f4ce22ab5f0" loc="68:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7f4ce22ab5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce22a9710"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce22aab10"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce22aa210"/>
        <function-ref name="put" scoped="" ref="0x7f4ce22a9020"/>
        <function-ref name="size" scoped="" ref="0x7f4ce22aa690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f4ce22cf940" loc="49:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce22cf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f4ce22f88c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f4ce22f7090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce22cea70"/>
        <function-ref name="get" scoped="" ref="0x7f4ce22ce560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f4ce22cc060" loc="53:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f4ce22cc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce22cc3e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce22cc570"/>
        <function-ref name="start" scoped="" ref="0x7f4ce22cc700"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce22cc890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f4ce22d0d60" loc="47:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f4ce22d0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce22cf180"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce22cf310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce22cf4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7f4ce22bf020" loc="62:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce22bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f4ce22bf3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f4ce22bf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f4ce22afcb0" loc="64:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce22afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ce22b40a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ce22b4230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ce22b43c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ce22b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce22d0720" loc="44:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce22d0720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce22d0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f4ce22a5c50" loc="70:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f4ce22a5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f4ce22a2ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce22a1880"/>
        <function-ref name="element" scoped="" ref="0x7f4ce229f020"/>
        <function-ref name="full" scoped="" ref="0x7f4ce22a3ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce22a2660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce22a11d0"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce22a3860"/>
        <function-ref name="size" scoped="" ref="0x7f4ce22a21e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7f4ce229f900" loc="73:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7f4ce229f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce229ce80"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce229d4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce229c260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce229dda0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce229a7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce229a320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce229d920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce229e560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce229c870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce229ea30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce229d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f4ce20226e0" loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f4ce20226e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce2022a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce2022bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f4ce22c94e0" loc="60:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce22c94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f4ce22c0340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f4ce22c99f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f4ce22c9b80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f4ce22c9d10"/>
        <function-ref name="matchContext" scoped="" ref="0x7f4ce22c0020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f4ce22c9860"/>
        <function-ref name="getContext" scoped="" ref="0x7f4ce22c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7f4ce22b4a10" loc="67:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7f4ce22b4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce22aec00"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce22ae090"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce22b3750"/>
        <function-ref name="put" scoped="" ref="0x7f4ce22ae510"/>
        <function-ref name="size" scoped="" ref="0x7f4ce22b3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce229abc0" loc="75:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce229abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce2299020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce22991b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce2299340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce22994d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce2299660"/>
        <function-ref name="get" scoped="" ref="0x7f4ce22997f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce2299980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce2298020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce2299b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce2299ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce2299e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7f4ce22ca0f0" loc="56:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f4ce22ca0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce22ca470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce22ca600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce22ca790"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce22ca920"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce22caab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7f4ce22ccbd0" loc="55:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ce22ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce22cb020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce22cb1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce22cb340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce22cb4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce22cb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7f4ce22be020" loc="63:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ce22be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ce22be3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ce22be530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ce22be6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ce22be850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ce22be9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7f4ce22a7150" loc="69:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7f4ce22a7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce22a5260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce22a6660"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce22a7d40"/>
        <function-ref name="put" scoped="" ref="0x7f4ce22a6ae0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce22a61e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7f4ce22cae20" loc="57:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4ce22cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce22c91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1ff3420" loc="19:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1ff3420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1ff37a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1ff3930"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1ff3ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1ff3c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ce1fefa30" loc="23:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1fefa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1fefdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ce1ff0020" loc="21:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1ff0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1ff03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1ff0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1ff06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1ff0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1ff09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ce1ff0d00" loc="22:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ce1ff0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1fef0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fef230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1fef3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1fef550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1fef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1feeb40" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1feeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1feb020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1feb1b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1feb340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1feb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ce1fd2170" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1fd2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ce1fd24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ce1fdb470" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1fdb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ce1fdb7f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ce1fdb980"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ce1fdbb10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ce1fdbca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ce1fdbe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ce1fdc640" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1fdc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1fdc9c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1fdcb50"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1fdcce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1fdce70"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1fe4030"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1fe41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ce1fe7d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1fe7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1fe60e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fe6270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1fe6400"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1fe6590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1fe6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ce1fd27f0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1fd27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ce1fd2b70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ce1fd2d00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ce1fdb020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ce1fdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ce1fe8820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1fe8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1fe8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ce1fe3080" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1fe3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1fe3400"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1fe3590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1fe3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1febd00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1febd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1fea0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1fea230"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1fea3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1fea550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1fea6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ce1feaa00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ce1feaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1fead80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fe8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1fe81b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1fe8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1fe84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ce1fe7020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1fe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1fe73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1fe7530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fe76c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1fe7850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1fe79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ce1fe6a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1fe6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1fe6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1fd6b20" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1fd6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1fd0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1fd01b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1fd0340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1fd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ce1fc5230" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1fc5230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ce1fc55b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ce1fc5740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ce1fc58d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ce1fc5a60"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ce1fc5bf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ce1fc5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1fd0790" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1fd0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1fd0b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fd0ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1fd0e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1fcf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1fcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1fcf490" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1fcf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1fcf810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1fced90" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1fced90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1fc3180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1fc3310"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1fc34a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1fc3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ce1fc2650" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1fc2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ce1fc29d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ce1fc2b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ce1fc2cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ce1fc2e80"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ce1fc1030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ce1fc11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f4ce1fbee00" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f4ce1fbee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ce1fbd1c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ce1fbd350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ce1fbd4e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ce1fbd670"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ce1fbd800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ce1fbd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ce1fb4b00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1fb4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1fb4e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1fb3030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1fb31c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1fb3350"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1fb34e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1fb3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f4ce1fbe080" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ce1fbe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1fbe400"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1fbe590"/>
        <function-ref name="modify" scoped="" ref="0x7f4ce1fbe720"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1fbe8b0"/>
        <function-ref name="resend" scoped="" ref="0x7f4ce1fbea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1fc38f0" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1fc38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1fc3c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fc3e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1fc2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1fc21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1fc2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ce1fbdc60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce1fbdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce1fb5020"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce1fb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4ce1fbf3e0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4ce1fbf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1fbf760"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1fbf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1fac130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1fac130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1fac4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1fac640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1fac7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f4ce1fc01a0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f4ce1fc01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f4ce1fc0520"/>
        <function-ref name="rfOff" scoped="" ref="0x7f4ce1fc06b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f4ce1fc0840"/>
        <function-ref name="startVReg" scoped="" ref="0x7f4ce1fc09d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f4ce1fc0b60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f4ce1fc0cf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f4ce1fc0e80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f4ce1fbf030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce1fb5470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce1fb5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce1fb57f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce1fb5980"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce1fb5b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce1fb5ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce1fb5e30"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1fb4020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce1fb41b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce1fb47f0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1fb4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce1fb44d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce1fb4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4ce1fc14b0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1fc14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1fc1830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1fc19c0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1fc1b50"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1fc1ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1fc1e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f4ce1facb90" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f4ce1facb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1fb20a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1fb2230"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1fb23c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1fb2550"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1fb26e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1fb2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f4ce1fa85d0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f4ce1fa85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1fa8950"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1fa8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f4ce1fa9660" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f4ce1fa9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1fa99e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1fa9b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f4ce1faa730" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f4ce1faa730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1faaab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1faac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ce1f5c020" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1f5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ce1f5c3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ce1f5c530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ce1f5c6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ce1f5c850"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ce1f5c9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ce1f5cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4ce1f5bca0" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ce1f5bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ce1f5a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f4ce1f5d300" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f4ce1f5d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1f5d680"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1f5d810"/>
        <function-ref name="modify" scoped="" ref="0x7f4ce1f5d9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1f5db30"/>
        <function-ref name="resend" scoped="" ref="0x7f4ce1f5dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce1f609b0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce1f609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1f60d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1f5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4ce1f5a470" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ce1f5a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ce1f5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f4ce1f4fcf0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f4ce1f4fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f4ce1f4e0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f4ce1f4e230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f4ce1f4e3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f4ce1f4e550"/>
        <function-ref name="setCca" scoped="" ref="0x7f4ce1f4e6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f4ce1f4e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4ce1f46200" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ce1f46200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ce1f457c0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ce1f3d020"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ce1f45090"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1f3d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4ce1f29990" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1f29990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f29d10"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4ce1f28380" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce1f28380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f28700"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f28890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f4ce1f4ec90" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f4ce1f4ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ce1f4d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f4ce1f2ce60" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1f2ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1f2b210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f4ce1f3a1e0" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f4ce1f3a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4ce1f3a560"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce1f3a6f0"/>
        <function-ref name="captured" scoped="" ref="0x7f4ce1f3a880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4ce1f3aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f4ce1f4c020" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f4ce1f4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce1f49870"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce1f4b840"/>
        <function-ref name="startAt" scoped="" ref="0x7f4ce1f49220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce1f4bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4ce1f49d30"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1f4ce30"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1f4b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ce1f48210" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1f48210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1f48590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1f48720"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1f488b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1f48a40"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1f48bd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1f48d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f4ce1f2ed80" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1f2ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f2d180"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f2d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f4ce1f2d6b0" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1f2d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f2da30"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f2dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f4ce1f1f780" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1f1f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1f1fb00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ce1f1fc90"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ce1f1fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1f4f020" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1f4f3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1f4f530"/>
        <function-ref name="modify" scoped="" ref="0x7f4ce1f4f6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1f4f850"/>
        <function-ref name="resend" scoped="" ref="0x7f4ce1f4f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f4ce1f2f4e0" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1f2f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce1f2f860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce1f2f9f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce1f2fb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f4ce1f2b5c0" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1f2b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1f2b940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ce1f32080" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ce1f32080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1f32400"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1f32590"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1f32720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce1f328b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1f32a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce1f32bd0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1f32d60"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce1f31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1f50020" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1f50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1f503a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1f470c0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1f470c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1f47440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1f475d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1f47760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f4ce1f33570" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1f33570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1f338f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ce1f33a80"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1f33c10"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1f33da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f4ce1f2bd00" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1f2bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f2a410"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f2a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ce1f306e0" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ce1f306e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1f30a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1f30bf0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1f30d80"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1f2f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1f2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f4ce1f3ad60" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f4ce1f3ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1f38210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1f383a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1f38530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce1f386c0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1f38850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce1f389e0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1f38b70"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce1f38d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4ce1f28bf0" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce1f28bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f27020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f4ce1f27530" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1f27530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f278b0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f27a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4ce1f2c020" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce1f2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1f2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f4ce1f31370" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f4ce1f31370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1f316f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1f31880"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1f31a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce1f31ba0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1f31d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce1f30020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1f301b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce1f30340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce1f26110" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce1f26110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce1f26490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce1f26620"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce1f267b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce1f26940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce1f26ad0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1f26c60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce1f26df0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce1f254d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1f25020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce1f251b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce1f25340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4ce1f290c0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1f290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1f29440"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f295d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce1f506a0" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce1f506a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1f50a20"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1f50bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f4ce1f2e020" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1f2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce1f2e3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce1f2e530"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1f2e6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce1f2e850"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce1f2e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f4ce1f2c730" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ce1f2c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1f2cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f4ce1f2a930" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ce1f2a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1f2acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f4ce1f4d4b0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f4ce1f4d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ce1f4d830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ce1e85c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce1e85c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e84210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ce1e8f020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ce1e8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ce1e89c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce1e89c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e87020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ce1e83670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1e83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e839f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e83b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ce1e7ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ce1e7ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7b210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ce1e83e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ce1e83e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e82210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ce1e6f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1e6f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e6f670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e6f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ce1e712f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce1e712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e71670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e71800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ce1e8d370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1e8d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ce1e77670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ce1e77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e779f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ce1e722f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1e722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e72670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e72800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ce1e87c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ce1e87c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e86020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ce1e86c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1e86c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e85020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ce1e7d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce1e7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ce1e7fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ce1e7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7e210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ce1e82670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce1e82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e829f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e82b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce1e918f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1e918f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce1e91c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce1e91e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce1e90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ce1e8cd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1e8cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ce1e8b370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ce1e8b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ce1e76a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce1e76a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e76df0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ce1e8bac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce1e8bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ce1e72ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1e72ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e72e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ce1e8c060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce1e8c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ce1e78e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ce1e78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e77210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ce1e86480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce1e86480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e86800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e86990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ce1e87480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1e87480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e87800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e87990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ce1e90940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce1e90940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e90cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ce1e79e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce1e79e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e78210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ce1e7b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ce1e7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ce1e78670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce1e78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e789f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ce1e70ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1e70ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e70e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ce1e71ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce1e71ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e71e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ce1e7e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ce1e7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ce1e7be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ce1e7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e79210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ce1e74ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce1e74ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e74e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ce1e80670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce1e80670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e809f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e80b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ce1e6fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1e6fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce1e6fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce1e6e020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e6e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce1e6e340"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce1e6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ce1e902f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce1e902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e90670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ce1e89490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ce1e89490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e89810"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e899a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ce1e85480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce1e85480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e85800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e85990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ce1e7de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce1e7de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7c210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ce1e82e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce1e82e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e80210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ce1e7c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce1e7c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ce1e84670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce1e84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e849f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e84b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ce1e8f670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ce1e8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ce1e84e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1e84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e83210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1e92c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1e92c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1e91020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1e911b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1e91340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1e914d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1e91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ce1e8a160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1e8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ce1e8ae00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ce1e8ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e891c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ce1e742f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ce1e742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e74670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e74800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ce1e75ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce1e75ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e75e50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ce1e8c6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1e8c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ce1e752f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce1e752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e75670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e75800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ce1e702f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ce1e702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e70670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e70800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ce1e7ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce1e7ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7d210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ce1e79670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ce1e79670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e799f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e79b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ce1e8fcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ce1e8fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ce1e8d9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce1e8d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ce1e80e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce1e80e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7f210"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ce1e8a7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ce1e8a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e8ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ce1e7f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ce1e7f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e7f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e7fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ce1e77e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ce1e77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e76610"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e767a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ce1e6e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1e6e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce1e6eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce1e6ecb0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e6ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce1e6d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce1e6d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4ce1e62df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1e62df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1e5f1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ce1e5f350"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ce1e5f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1e5f7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1e5f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1e5fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4ce1e5d020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ce1e5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ce1e5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce1e625c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce1e625c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1e62940"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1e62ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f4ce1e56380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f4ce1e56380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1e56700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1e56890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1e56a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce1e56bb0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1e56d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce1e55020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1e551b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce1e55340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f4ce1e4fb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f4ce1e4fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f4ce1e4e020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f4ce1e4e1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f4ce1e4e340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f4ce1e4e4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f4ce1e4e660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f4ce1e4e7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4ce1e4e980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f4ce1e4eb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f4ce1e4eca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f4ce1e4ee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f4ce1e4d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f4ce1e4d1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f4ce1e4d340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4ce1e4d5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f4ce1e4d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f4ce1e389d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f4ce1e389d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1e38d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1e36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4ce1e4dd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4ce1e4dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ce1e4a330"/>
        <function-ref name="clear" scoped="" ref="0x7f4ce1e4aa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ce1e4cba0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1e49210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f4ce1e556b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f4ce1e556b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1e55a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1e55bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1e55d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce1e54020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1e541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce1e54340"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1e544d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce1e54660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f4ce1e48cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1e48cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e470a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e47230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f4ce1e47590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce1e47590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e47910"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e47aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f4ce1e456d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1e456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e45a50"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e45be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ce1e50330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1e50330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1e506b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1e50840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1e509d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1e50b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1e50cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1e50e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f4ce1e59550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f4ce1e59550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1e598d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f4ce1e59a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f4ce1e59bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f4ce1e513a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ce1e513a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e51720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f4ce1e57020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f4ce1e57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1e573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1e57530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1e576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce1e57850"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1e579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce1e57b70"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1e57d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce1e56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f4ce1e44020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1e44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e443a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e44530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1e5a620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1e5a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1e5a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1e4f1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1e4f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1e4f560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1e4f6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1e4f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1e58020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1e583a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4ce1e536e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f4ce1e536e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1e53a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1e53bf0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1e53d80"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1e52020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1e521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f4ce1e47e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce1e47e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e451c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e45350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f4ce1e52530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1e52530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce1e528b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce1e52a40"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e52bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce1e52d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce1e51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f4ce1e448b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce1e448b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e44e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f4ce1e587c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f4ce1e587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f4ce1e58b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce1e43150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce1e43150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce1e434d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce1e43660"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce1e437f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce1e43980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce1e43b10"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1e43ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce1e43e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce1e424d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1e42020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce1e421b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce1e42340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f4ce1e483e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1e483e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1e48760"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1e488f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f4ce1e49b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1e49b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f4ce1e54a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f4ce1e54a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce1e54dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f4ce1e53020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f4ce1e531b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f4ce1e53340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f4ce1e51ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1e51ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1e50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce1e5aca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce1e5aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1e590a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1e59230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ce1dd7a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1dd7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ce1dd7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ce1ddb670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ddb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1ddb9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1ddbb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1ddbd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1dd8020"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1dd81b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1dd8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ce1dd6550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ce1dd6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ce1dd5b00"/>
        <function-ref name="clear" scoped="" ref="0x7f4ce1dd32a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ce1dd53d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1dd39d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4ce1dd70c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dd70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1dd7440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1dd75d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1dd7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4ce1dce480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1dce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1dce800"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ce1dce990"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1dceb20"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1dcecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ce1dd2660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ce1dd2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ce1dd1ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ce1dcf460"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ce1dd15b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1dcfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ce1dd86e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ce1dd86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1dd8a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1dd8bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1dd8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4ce1dc7020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4ce1dc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4ce1dc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f4ce1dcdd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1dcdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1dc90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1dc9270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1dc9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1dc9590"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1dc9720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1dc98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ce1dbe4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce1dbe4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1dbe820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1dbe9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1dbeb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1dbecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1dbee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f4ce1dc7a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f4ce1dc7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ce1dc4020"/>
        <function-ref name="clear" scoped="" ref="0x7f4ce1dc4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ce1dc58d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1dc4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f4ce1dc8640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1dc8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1dc89c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1dc8b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1dc8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4ce1dbf8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4ce1dbf8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1dbfc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f4ce1dbfdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1dbe020"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1dbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f4ce1dbc3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f4ce1dbc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1dbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f4ce1dbb6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4ce1dbb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1dba3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4ce1dc3af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4ce1dc3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4ce1dc00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4ce1dc0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4ce1dc1970"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1dbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ce1dc9c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ce1dc9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1dc8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1dc81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1dc8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4ce1d6ccf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f4ce1d6ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1d6a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ce1d69020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce1d69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1d69e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce1d68800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce1d68340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce1d68cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce1d650b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce1d650b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce1d61630"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce1d63b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce1d62920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce1d624a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce1d60020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce1d61ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce1d62020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce1d65ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce1d61020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce1d631b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1d63680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f4ce1d4f620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f4ce1d4f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4fba0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f4ce1d5a940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f4ce1d5a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d5acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f4ce1d53620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f4ce1d53620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d539a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d53b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f4ce1d4d060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f4ce1d4d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4d3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f4ce1d46840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f4ce1d46840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d46bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d46d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f4ce1d4d840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f4ce1d4d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4dbc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f4ce1d3ac60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f4ce1d3ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d39020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f4ce1d3dc60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f4ce1d3dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3b020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f4ce1d59cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f4ce1d59cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d580a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f4ce1d41060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f4ce1d41060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d413e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d41570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f4ce1d3ec60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f4ce1d3ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3d020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f4ce1d52620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f4ce1d52620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d529a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d52b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f4ce1d51620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f4ce1d51620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d519a0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d51b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f4ce1d47060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f4ce1d47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d473e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d47570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f4ce1d4a840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f4ce1d4a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4abc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f4ce1d4c060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f4ce1d4c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4c3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f4ce1d5b2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f4ce1d5b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f4ce1d5b630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f4ce1d5b7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f4ce1d5b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f4ce1d576b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f4ce1d576b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d57a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f4ce1d57d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f4ce1d57d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d551c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f4ce1d40480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f4ce1d40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d40800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d40990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f4ce1d55490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f4ce1d55490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d55810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f4ce1d3d480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f4ce1d3d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3d800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f4ce1d589c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f4ce1d589c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d58d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f4ce1d43840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f4ce1d43840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d43bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d43d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f4ce1d52e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f4ce1d52e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d511c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d51350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f4ce1d53e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f4ce1d53e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d521c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d52350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f4ce1d5a2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f4ce1d5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d5a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f4ce1d44840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f4ce1d44840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d44bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d44d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f4ce1d45060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f4ce1d45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d453e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d45570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f4ce1d43060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f4ce1d43060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d433e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d43570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f4ce1d3a480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f4ce1d3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3a800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f4ce1d3b480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f4ce1d3b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3b800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f4ce1d48060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f4ce1d48060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d483e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d48570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f4ce1d45840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f4ce1d45840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d45bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d45d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f4ce1d3e480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f4ce1d3e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3e800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f4ce1d4b060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f4ce1d4b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f4ce1d39480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f4ce1d39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce1d39800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce1d39990"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d39b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce1d39cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce1d39e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f4ce1d5bc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f4ce1d5bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f4ce1d54e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f4ce1d54e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d531c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d53350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f4ce1d51e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f4ce1d51e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4f1c0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f4ce1d47840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f4ce1d47840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d47bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d47d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f4ce1d4c840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f4ce1d4c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f4ce1d46060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f4ce1d46060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d463e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d46570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f4ce1d4e060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f4ce1d4e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4e3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f4ce1d59020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f4ce1d59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f4ce1d4e840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f4ce1d4e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4ebc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1d5c520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1d5c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1d5c8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1d5ca30"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1d5cbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1d5cd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1d5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f4ce1d55ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f4ce1d55ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d55e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f4ce1d547b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f4ce1d547b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d54b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f4ce1d3fc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f4ce1d3fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3e020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f4ce1d3f480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f4ce1d3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3f800"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f4ce1d57060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f4ce1d57060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d573e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f4ce1d40c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f4ce1d40c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3f020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f4ce1d3bc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f4ce1d3bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d3a020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f4ce1d48840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f4ce1d48840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d48bc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d48d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f4ce1d44060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f4ce1d44060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d443e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d44570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f4ce1d59670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f4ce1d59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d599f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f4ce1d58370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f4ce1d58370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d586f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f4ce1d4b840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f4ce1d4b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f4ce1d54160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f4ce1d54160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f4ce1d544e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f4ce1d4a060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f4ce1d4a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d4a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d4a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f4ce1d41840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f4ce1d41840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4ce1d40020"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f4ce1d38160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f4ce1d38160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f4ce1d384e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4ce1d38670"/>
        <function-ref name="write" scoped="" ref="0x7f4ce1d38800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f4ce1d38990"/>
        <function-ref name="readDone" scoped="" ref="0x7f4ce1d38b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce1d0d390" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce1d0d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1d0d710"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1d0d8a0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1d0da30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1d0dbc0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1d0dd50"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1d0c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1d03b50" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1d03b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1d02020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1d021b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1d02340"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1d024d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1d02660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1d06dd0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1d06dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1d03180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1d03310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1d034a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1d03630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1d037c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1cfeb40" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1cfeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1cfd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cfd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1cfd340"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1cfd4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1cfd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1cff660" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1cff660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1cff9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cffb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1cffd00"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1cfe020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1cfe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4ce1cfc760" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f4ce1cfc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4ce1cfcae0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4ce1cfcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1cfe430" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1cfe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1cfe7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1cfb020" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1cfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cfb3a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1cfb530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1cfb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f4ce1cfd8f0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce1cfd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1cfdc70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1cfde00"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1cfc020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1cfc1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1cfc340"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1cfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce1d00690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce1d00690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1d00a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1d00ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1d00d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1cea020"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1cea1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1cea340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ce1ce4950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1ce4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1ce4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1ce7aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1ce7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1ce7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4ce1ce4200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ce1ce4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1ce4580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ce1cde3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1cde3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1cde770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1cdfb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1cdfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1cde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1ce2e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1ce2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1cdf1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1cdea70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1cdea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cdedf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1cdd020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1cdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f4ce1cdf570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f4ce1cdf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1cdf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ce1cb0020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1cb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1cb03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1cb06b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1cb06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1cb0a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cb0bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1cb0d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1caf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1caf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1cb48e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1cb48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1cb4c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cb4df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1cb3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1cb31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1cb3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ce1cb3c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1cb3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1cb20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cb2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1cb23c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1cb2550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1cb26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1cb35e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1cb35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1cb3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1cb5be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1cb5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1cb4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1cb41b0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1cb4340"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1cb44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1cb4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ce1cb2a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1cb2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1cb2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ce1cb1170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1cb1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1cb14f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1cb1680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1cb1810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1cb19a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1cb1b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1ca6d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1ca6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1ca5180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1ca5310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1ca54a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1ca5630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1ca57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ce1ca5b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1ca5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1ca4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f4ce1c77db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f4ce1c77db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1c75180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1c75310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ce1ca42f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1ca42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1ca4670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1ca4800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1ca4990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1ca4b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1ca4cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1ca4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f4ce1ca8a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f4ce1ca8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1ca8da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1ca7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1ca71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1ca7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1ca74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ce1ca3b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce1ca3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce1ca2020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ce1ca21b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ce1ca2340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce1ca24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1ca3170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1ca3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1ca34f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1ca3680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1ca3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4ce1ca8370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f4ce1ca8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1ca86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1cab7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1cab7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1cabb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1cabcc0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1cabe50"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1ca9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1ca91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4ce1ca94d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f4ce1ca94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1ca9850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1ca99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1ca9b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1ca9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1ca8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f4ce1ca7840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f4ce1ca7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1ca7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f4ce1ca6020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f4ce1ca6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1ca63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1ca6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1ca66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1ca6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1ca69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1c57dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1c57dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1c56180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ce1c56410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ce1c56410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce1c56790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ce1c56920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ce1c56ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce1c56c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1c4ab80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1c4ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1c49020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1c491b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1c49340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1c494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1c48860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c48860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1c48be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c48d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1c47020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1c471b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1c47340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ce1c47690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1c47690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1c47a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1c4ece0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1c4ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1c4b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c4b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1c4b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1c4b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1c4b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ce1c4a080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1c4a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ce1c4a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ce1c4a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ce1c4a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ce1c4a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f4ce1c49800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f4ce1c49800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1c49b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1c49d10"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1c48020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1c481b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1c48340"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1c484d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4ce1c47d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f4ce1c47d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1c46180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1c46310"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1c464a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1c46630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1c4b980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1c4b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1c4bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ce1c432d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1c432d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ce1c43650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ce1c437e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ce1c43970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ce1c43b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce1c45580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce1c45580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1c45900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1c45a90"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1c45c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1c45db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1c44020"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1c441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1c36d70" loc="47:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c36d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1c35180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c35310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1c354a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1c35630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1c357c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1c372a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1c372a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1c37620"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c377b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1c37940"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1c37ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1c37c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ce1c36020" loc="43:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1c36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ce1c363a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ce1c36530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ce1c366c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ce1c36850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ce1c369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1c30dd0" loc="47:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1c30dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1c2f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c2f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1c2f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1c2f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1c2f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f4ce1c252a0" loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f4ce1c252a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1c25620"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1c257b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f4ce1c2d650" loc="50:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f4ce1c2d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce1c2ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce1c2b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce1c2a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce1c2bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce1c28590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce1c28110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce1c2b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce1c2c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce1c2a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce1c2c860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1c2cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1c333a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1c333a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1c33720"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c338b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1c33a40"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1c33bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1c33d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f4ce1c2faf0" loc="48:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f4ce1c2faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1c2fe70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1c2e030"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1c2e1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1c2e350"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1c2e4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1c2e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f4ce1c28a30" loc="51:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f4ce1c28a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1c28db0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f4ce1c27020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f4ce1c271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f4ce1c2e9a0" loc="49:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1c2e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1c2ed20"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1c2d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1c2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ce1c30080" loc="43:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1c30080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ce1c30400"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ce1c30590"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ce1c30720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ce1c308b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ce1c30a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f4ce1bfa350" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f4ce1bfa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f4ce1bfa6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f4ce1bfa860"/>
        <function-ref name="isState" scoped="" ref="0x7f4ce1bfa9f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f4ce1bfab80"/>
        <function-ref name="requestState" scoped="" ref="0x7f4ce1bfad10"/>
        <function-ref name="forceState" scoped="" ref="0x7f4ce1bf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce1bf8750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce1bf8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce1bf5c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce1bf61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce1bf5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce1bf6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce1bf3590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce1bf3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce1bf6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce1bf7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce1bf5630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce1bf7860"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1bf7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4ce1ff1dd0" loc="11:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4ce1ff1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4ce1be1180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4ce1be1310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4ce1be14a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4ce1be1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ce1be0670" loc="13:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1be0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1be09f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1be0b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1be0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4ce1be18f0" loc="12:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f4ce1be18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4ce1be1c70"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4ce1be1e00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4ce1be0020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4ce1be01b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4ce1be0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f4ce1bdb020" loc="12:../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce1bdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f4ce1bdb3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f4ce1bdb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f4ce1bd6c70" loc="10:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f4ce1bd6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f4ce1bd5020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f4ce1bd51b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f4ce1bd5340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f4ce1bd54d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f4ce1bd5660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f4ce1bd57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f4ce1bd6450" loc="9:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f4ce1bd6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f4ce1bd67d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f4ce1bd6960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce1bdce70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce1bdce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce1bcd390"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce1bcf970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce1bce720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce1bce2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce1bcdc90"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce1bcd810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce1bcfdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce1bd9a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce1bced30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce1bcf020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1bcf4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce1bc5a40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce1bc5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1ba0b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1ba0020"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1ba1670"/>
        <function-ref name="put" scoped="" ref="0x7f4ce1ba04a0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1ba1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce0bcb210" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce0bcb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce0bc8330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce0bc9780"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce0bcbe00"/>
        <function-ref name="put" scoped="" ref="0x7f4ce0bc9c00"/>
        <function-ref name="size" scoped="" ref="0x7f4ce0bc9300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0bccaf0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0bccaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0bcce70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce1b9c020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce1b9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1b99110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1b9a550"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1b9cc10"/>
        <function-ref name="put" scoped="" ref="0x7f4ce1b9a9d0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1b9a0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce0bb9d80" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce0bb9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce0bb6e70"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce0bb6300"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce0bb79a0"/>
        <function-ref name="put" scoped="" ref="0x7f4ce0bb6780"/>
        <function-ref name="size" scoped="" ref="0x7f4ce0bb7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0bb9690" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0bb9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0bb9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f4ce1b95850" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce1b95850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f4ce2f9fd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f4ce1b796e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce1b77490"/>
        <function-ref name="element" scoped="" ref="0x7f4ce1b77b00"/>
        <function-ref name="full" scoped="" ref="0x7f4ce1b7a900"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1b79260"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce1b79d90"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1b7a480"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1b7ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce1b74020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce1b74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1b71110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1b73550"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1b74c10"/>
        <function-ref name="put" scoped="" ref="0x7f4ce1b739d0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1b730d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce0b8f020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce0b8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce0b8c110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce0b8e550"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce0b8fc10"/>
        <function-ref name="put" scoped="" ref="0x7f4ce0b8e9d0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce0b8e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0b90900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0b90900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0b90c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1b68440" loc="11:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1b68440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1b687c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1b68950"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1b68ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1b68c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7f4ce1b641a0" loc="16:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7f4ce1b641a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1b64520"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1b646b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1b64840"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1b649d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7f4ce1b64dd0" loc="17:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f4ce1b64dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1b63180"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1b63310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce1b635c0" loc="18:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce1b635c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce1b63940"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce1b63ad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce1b63c60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce1b63df0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce1b61020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce1b611b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce1b61340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f4ce1b658c0" loc="15:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f4ce1b658c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1b65c40"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1b65dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f4ce1b65020" loc="14:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce1b65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1b653a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1b65530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7f4ce1b48020" loc="15:../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f4ce1b48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f4ce1b483a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f4ce1b48530"/>
        <function-ref name="findTLV" scoped="" ref="0x7f4ce1b486c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce1b2fa40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce1b2fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f4ce3544110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1b2db90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1b2d020"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1b2e670"/>
        <function-ref name="put" scoped="" ref="0x7f4ce1b2d4a0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1b2eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce0b7dd10" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce0b7dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f4ce3544110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce0b7ae10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce0b7a2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce0b7c940"/>
        <function-ref name="put" scoped="" ref="0x7f4ce0b7a720"/>
        <function-ref name="size" scoped="" ref="0x7f4ce0b7cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0b7d620" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0b7d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0b7d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4ce1b2a970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f4ce1b2a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3751df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ce3577200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4ce1b26e80"/>
        <function-ref name="fired" scoped="" ref="0x7f4ce1b284a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4ce1b26260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4ce1b28da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4ce1b257a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4ce1b25320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4ce1b28920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4ce1b295a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4ce1b26870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4ce1b29a70"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1b28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f4ce1b1aae0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce1b1aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f4ce1b17990"/>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce1b16740"/>
        <function-ref name="element" scoped="" ref="0x7f4ce1b16db0"/>
        <function-ref name="full" scoped="" ref="0x7f4ce1b18bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1b17510"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce1b16090"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1b18750"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1b17090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce1b124a0" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce1b124a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1b10570"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce1b119d0"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce1b110d0"/>
        <function-ref name="put" scoped="" ref="0x7f4ce1b11e50"/>
        <function-ref name="size" scoped="" ref="0x7f4ce1b11550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f4ce0b5b020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f4ce0b5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f4ce3491020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f4ce34914f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce0b58110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce0b5a550"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce0b5bc10"/>
        <function-ref name="put" scoped="" ref="0x7f4ce0b5a9d0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce0b5a0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0b5c900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0b5c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0b5cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f4ce1b07540" loc="8:../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f4ce1b07540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f4ce1b078c0"/>
        <function-ref name="OCP" scoped="" ref="0x7f4ce1b07a50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f4ce1b07be0"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce1b07d70"/>
        <function-ref name="resetRank" scoped="" ref="0x7f4ce1b04020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f4ce1b041b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f4ce1b04340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f4ce1b044d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f4ce1b04660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f4ce1b047f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7f4ce1afd260" loc="43:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7f4ce1afd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1afd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f4ce1afd9b0" loc="44:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f4ce1afd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f4ce1afdd30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f4ce1afc020"/>
        <function-ref name="startDAO" scoped="" ref="0x7f4ce1afc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f4ce1b03360" loc="40:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f4ce1b03360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f4ce1b036e0"/>
        <function-ref name="OCP" scoped="" ref="0x7f4ce1b03870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f4ce1b03a00"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce1b03b90"/>
        <function-ref name="resetRank" scoped="" ref="0x7f4ce1b03d20"/>
        <function-ref name="getOCP" scoped="" ref="0x7f4ce1b00020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f4ce1b001b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f4ce1b00340"/>
        <function-ref name="getParent" scoped="" ref="0x7f4ce1b004d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f4ce1b00660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f4ce1aff8b0" loc="42:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f4ce1aff8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f4ce1affc30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce1afeca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f4ce1afee30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f4ce1afe1b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce1afe340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f4ce1afe4d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce1afe660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f4ce1afe7f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f4ce1afe020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f4ce1afe980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f4ce1afeb10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f4ce1affdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f4ce1b00990" loc="41:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f4ce1b00990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f4ce1b00d10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f4ce1aff020"/>
        <function-ref name="delRoute" scoped="" ref="0x7f4ce1aff1b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f4ce1aff340"/>
        <function-ref name="addRoute" scoped="" ref="0x7f4ce1aff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f4ce1afc540" loc="45:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f4ce1afc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f4ce1afc8c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce1afca50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f4ce1afcbe0"/>
        <function-ref name="hasParent" scoped="" ref="0x7f4ce1afcd70"/>
        <function-ref name="validInstance" scoped="" ref="0x7f4ce1afb020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f4ce1afb1b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f4ce1afb340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f4ce1afb4d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f4ce1afb660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f4ce1afb7f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f4ce1afb980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f4ce1afbb10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f4ce1afbca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f4ce1afa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce1ac1840" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce1ac1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1ac1be0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce1ac1d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f4ce0b47ae0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f4ce0b47ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0b47e60"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0b46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce0b472e0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce0b472e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0b47680"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0b47810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1aaa5c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1aaa5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1aaa940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1aaaad0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1aaac60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1aaadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ce1aa6600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce1aa6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1aa6980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1aa6b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1aa6ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1aa6e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1aa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ce1aa5e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce1aa5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1aa41c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1aa4350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1aa44e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1aa4670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1aa4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1aa5800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1aa5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1aa5b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce1a92300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce1a92300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce1a92680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce1a92810"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce1a929a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce1a92b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce1a92cc0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1a92e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce1a8e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce1a8e660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1a8e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce1a8e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce1a8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ce1aa2800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1aa2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1aa2b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1aa2d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1a92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ce1aa3020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1aa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ce1aa33a0"/>
        <function-ref name="source" scoped="" ref="0x7f4ce1aa3530"/>
        <function-ref name="address" scoped="" ref="0x7f4ce1aa36c0"/>
        <function-ref name="destination" scoped="" ref="0x7f4ce1aa3850"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce1aa39e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ce1aa3b70"/>
        <function-ref name="type" scoped="" ref="0x7f4ce1aa3d00"/>
        <function-ref name="setType" scoped="" ref="0x7f4ce1aa2020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ce1aa21b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ce1aa2340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ce1aa24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4ce1a334a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f4ce1a334a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1a33820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1a339b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1a33b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1a33cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1a33e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4ce1a32120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f4ce1a32120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1a324a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ce1a8c300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce1a8c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1a8c6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1a8c830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1a8c9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1a8cb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1a8cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ce1a36d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce1a36d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1a34180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1a34310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1a344a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1a34630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1a347c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1a370d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1a370d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1a37470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4ce1a34a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4ce1a34a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1a34d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1a33020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1a331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ce1a376c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1a376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ce1a37a40"/>
        <function-ref name="source" scoped="" ref="0x7f4ce1a37bd0"/>
        <function-ref name="address" scoped="" ref="0x7f4ce1a37d60"/>
        <function-ref name="destination" scoped="" ref="0x7f4ce1a36020"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce1a361b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ce1a36340"/>
        <function-ref name="type" scoped="" ref="0x7f4ce1a364d0"/>
        <function-ref name="setType" scoped="" ref="0x7f4ce1a36660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ce1a367f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ce1a36980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ce1a36b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1a30b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1a30b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1a2d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1a2d1b0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1a2d340"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1a2d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1a2c790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1a2c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f4ce37668e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1a2cb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1a2cca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1a2ce30"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1a2b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1a2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1a30540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1a30540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1a308c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce1a2dc60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce1a2dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f4ce37668e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce1a2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce1a2a2b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce1a2a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce1a2a630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce1a2a7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce1a2a950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce1a2aae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce1a2ac70"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1a2ae00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce1a29020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce1a29660"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1a291b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce1a29340"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce1a294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f4ce1a25970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f4ce1a25970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f4ce37668e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f4ce1a25cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f4ce1a25e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f4ce1a2a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4ce1a227c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f4ce1a227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce1a22b40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce1a22cd0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce1a22e60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1a21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f4ce19bc6e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f4ce19bc6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce19bca60"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce19bcbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f4ce1a10860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f4ce1a10860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1a10be0"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1a10d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f4ce19f34f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f4ce19f34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce19f3870"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce19f3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce1a22170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce1a22170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce1a224f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f4ce1a0c480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f4ce1a0c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f4ce1a0c800"/>
        <function-ref name="flush" scoped="" ref="0x7f4ce1a0c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f4ce19bfc70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f4ce19bfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce19be020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce19be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f4ce1a17020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f4ce1a17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f4ce1a173a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f4ce1a17530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f4ce1a176c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f4ce1a17850"/>
        <function-ref name="putData" scoped="" ref="0x7f4ce1a179e0"/>
        <function-ref name="putDone" scoped="" ref="0x7f4ce1a17b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f4ce1a17d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce1a16020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce1a16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce1a163a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce1a16530"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce1a166c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce1a16850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce1a169e0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1a16b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce1a16d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce1a104d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1a10020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce1a101b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce1a10340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f4ce19b8a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f4ce19b8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce19b8d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce19b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f4ce1a1b720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f4ce1a1b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f4ce1a1baa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f4ce1a1bc30"/>
        <function-ref name="startSend" scoped="" ref="0x7f4ce1a1bdc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f4ce1a20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f4ce1a18c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f4ce1a18c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f4ce1a1f020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f4ce1a1f1b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f4ce1a1f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f4ce18ed020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f4ce18ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce18ed3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce18ed530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce18f3de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce18f3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f4ce37668e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce18f11c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce18f1350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce18f14e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce18f1670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce18f1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f4ce18ed800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f4ce18ed800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce18edb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce18edd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4ce18f36c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f4ce18f36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f4ce37668e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4ce18f3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f4ce18f1c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f4ce18f1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f4ce37668e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f4ce18f0020"/>
        <function-ref name="offset" scoped="" ref="0x7f4ce18f01b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f4ce18f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce18ef920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce18ef920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce18efca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce18efe30"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce18ee020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce18ee1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce18ee340"/>
        <function-ref name="get" scoped="" ref="0x7f4ce18ee4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce18ee660"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce18eeca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce18ee980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce18ee7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce18eeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f4ce18f0e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f4ce18f0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f4ce18ef220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f4ce18ef3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f4ce18ef540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f4ce18ef6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f4ce18f0590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f4ce18f0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f4ce18f0910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f4ce18f0aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f4ce18f0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f4ce18ddd20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ce18ddd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce18e60e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ce18e6270"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce18e6400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ce18e6590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ce18e6720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ce18e68b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce18e6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f4ce18ebe00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f4ce18ebe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f4ce18e81c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f4ce18e8350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f4ce18e84e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f4ce18e8670"/>
        <function-ref name="putData" scoped="" ref="0x7f4ce18e8800"/>
        <function-ref name="putDone" scoped="" ref="0x7f4ce18e8990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f4ce18e8b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce18e6cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce18e6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce18db0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce18db230"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce18db3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce18db550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce18db6e0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce18db870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce18dba00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce18da1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce18dbb90"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce18dbd20"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce18da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ce18be020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ce18be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce18be3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ce18be530"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce18be6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ce18be850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ce18c1890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ce18c1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce18c1c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ce18c1da0"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce18bf020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ce18bf1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ce18bf340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ce18bf4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce18bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce18c1080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce18c1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce18c1400"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce18c1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce1730c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1730c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce172f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce172f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ce172e440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ce172e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce172e7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ce172e950"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce172eae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ce172ec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4ce172d020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce172d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce172d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ce172f440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ce172f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce172f7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ce172f950"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce172fae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ce172fc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ce172fe00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ce172e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce172e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1730020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce17303a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1730530"/>
        <function-ref name="request" scoped="" ref="0x7f4ce17306c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1730850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce17309e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ce18aea30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce18aea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce18aedb0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce18ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ce18aa020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ce18aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce18aa3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ce18aa530"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce18aa6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ce18aa850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4ce18a8450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce18a8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce18a87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ce18ad860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ce18ad860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce18adbe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ce18add70"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce18ab020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ce18ab1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ce18ab340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ce18ab4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce18ab660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ce18a91d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ce18a91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce18a9550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce18a96e0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce18a9870"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce18a9a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce18a9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce18af7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce18af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce18afb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce18afcb0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce18afe40"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce18ae020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce18ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ce18a61d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce18a61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce18a6550"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce18a66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4ce183bdc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce183bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce183a180"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce183a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f4ce1839890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f4ce1839890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1839c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f4ce1839dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce1838020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f4ce18381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f4ce18373e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce18373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce1837780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f4ce1837a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ce1837a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce1837dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce1836020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce18361b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce1836340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce18364d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce1836660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce18367f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce1836980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce1836b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce1836ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce1836e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce1835020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce18351b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce1835440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce18355d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce1835760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce18358f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce1835a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce1835c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce1835da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce1834020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce18341b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce1834340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce18344d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce1834660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce18349f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce1834b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce1834d10"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce1833020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce18331b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce1833340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce18334d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce1833660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce18337f0"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce1833980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce1833b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce1833ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce1833e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce1832020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce18321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f4ce183a6d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f4ce183a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce183aa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f4ce183ac00"/>
        <function-ref name="receive" scoped="" ref="0x7f4ce183ad90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f4ce1839020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f4ce18391b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f4ce1839340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce18394d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4ce1831020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce1831020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce1831e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce182f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce182f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce182fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f4ce18385b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f4ce18385b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1838950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1838ae0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1838c70"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1838e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1837020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce183b020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce183b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce183b3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce183b550"/>
        <function-ref name="request" scoped="" ref="0x7f4ce183b6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce183b870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce183ba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f4ce18325b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f4ce18325b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce1832950"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce1832ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce182e120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce182e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce182e4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce182e630"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce182e7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce182e950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce182eae0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce182ec70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce182ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce182d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce182d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce182d020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce182d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ce181f860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce181f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce181fbe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce181fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4ce1822500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce1822500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1822880"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1822a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ce1822d30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce1822d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce18250e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce1825270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce1825400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce1825590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce1825720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce18258b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce1825a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce1825bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce1825d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce1824020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce18241b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce1824340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce18244d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce1824760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce18248f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce1824a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce1824c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce1824da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce1821020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce18211b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce1821340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce18214d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce1821660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce18217f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce1821980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce1821d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce1820020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce18201b0"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce1820340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce18204d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce1820660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce18207f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce1820980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce1820b10"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce1820ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce1820e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce181f020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce181f1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce181f340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce181f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f4ce1812990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f4ce1812990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1812d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1810020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce18101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1810340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce18104d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce1810660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce18107f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1810980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce1810b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce1810ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1810e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce180f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce180f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce180f440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce180f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ce1816130" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ce1816130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce18164b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce1816640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f4ce180f990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f4ce180f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce180fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce180e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce180e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce180e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce180e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce180e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce180e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce180e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce180eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce180eca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce180ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce180d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce180d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce180d440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce180d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f4ce180d990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f4ce180d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce180dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce180c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce180c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce180c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce180c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce180c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce180c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce180c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce180cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce180cca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce180ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce180b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce180b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce180b440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce180b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f4ce181b550" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f4ce181b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce181b8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce181ba60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce181bbf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce181bd80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce181a020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce181a1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce181a340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce181a4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce181a660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce181a7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce181a980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce181ab10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce181aca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce1819020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce18191b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce1819340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce18194d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce1819660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce18197f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce1819980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce1819b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce1819ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce1819e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce1818020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce18181b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce1818540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce18186d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce1818860"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce18189f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce1818b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce1818d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce1817020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce18171b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce1817340"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce18174d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce1817660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce18177f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce1817980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce1817b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce1817ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4ce181ebc0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce181ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce181b020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce181b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f4ce1814990" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f4ce1814990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1814d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1813020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce18131b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1813340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce18134d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce1813660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce18137f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1813980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce1813b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce1813ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1813e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce1812020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce18121b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce1812440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce18125d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f4ce1816a00" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f4ce1816a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4ce1816d80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4ce1815020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f4ce18151b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4ce1815340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4ce18154d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f4ce1815660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4ce18157f0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce1815980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f4ce1815b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f4ce1815ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4ce1815e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f4ce1814020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f4ce18141b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f4ce1814440"/>
        <function-ref name="clr" scoped="" ref="0x7f4ce18145d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4ce178e110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f4ce178e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f4ce3577640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f4ce35779b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4ce178d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4ce178d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4ce178d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4ce178de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce0aca5d0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0aca5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce0aca950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0acaae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce0ac37c0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0ac37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce0ac3b40"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce0ac3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f4ce0ac3020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f4ce0ac3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce0ac33a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce0ac3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce0acb880" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce0acb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0acbc00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce0acbd90"/>
        <function-ref name="request" scoped="" ref="0x7f4ce0aca020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0aca1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0aca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f4ce0ac85a0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f4ce0ac85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f4ce0ac8920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f4ce0ac8ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f4ce0ac8c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f4ce0ac8dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f4ce0ac7020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f4ce0ac71b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f4ce0ac7340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f4ce0ac74d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f4ce0ac7660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f4ce0ac77f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f4ce0ac7980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f4ce0ac7b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f4ce0ac7ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f4ce0ac6020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f4ce0ac61b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f4ce0ac6340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f4ce0ac64d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f4ce0ac6660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f4ce0ac67f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f4ce0ac6980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f4ce0ac6b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f4ce0ac6ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f4ce0ac6e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f4ce0ac5020"/>
        <function-ref name="getMode" scoped="" ref="0x7f4ce0ac51b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f4ce0ac5540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f4ce0ac56d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f4ce0ac5860"/>
        <function-ref name="tx" scoped="" ref="0x7f4ce0ac59f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f4ce0ac5b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f4ce0ac5d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4ce0ac4020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f4ce0ac41b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f4ce0ac4340"/>
        <function-ref name="rx" scoped="" ref="0x7f4ce0ac44d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f4ce0ac4660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f4ce0ac47f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f4ce0ac4980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f4ce0ac4b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f4ce0ac4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce0acad70" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0acad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce0ac8180"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce0ac8310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce1772510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1772510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce1772890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce1772a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce1771af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce1771af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce1771e70"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce1770030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ce1774510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ce1774510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce1774890"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce1774a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce1773280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1773280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1773600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1773790"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1773920"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1773ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1773c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce1772d20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1772d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce17710e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce1771270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ce176c120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce176c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce176c4a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce176c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f4ce176e230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f4ce176e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce176e5d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce176e760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f4ce176dad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f4ce176dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce176de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f4ce176eb60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f4ce176eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4ce176d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f4ce176d2f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f4ce176d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f4ce176d670"/>
        <function-ref name="txDone" scoped="" ref="0x7f4ce176d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce1769bd0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce1769bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce1768020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce17681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce1767930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce1767930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce1767cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce1767e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ce1768400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce1768400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1768780"/>
        <function-ref name="requested" scoped="" ref="0x7f4ce1768910"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1768aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1768c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce1768dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce176ae30" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce176ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce1769210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce17693a0"/>
        <function-ref name="request" scoped="" ref="0x7f4ce1769530"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce17696c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1769850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce1767060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1767060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce17673e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce1767570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce0a60ca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce0a60ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce0a5f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4ce0a5f330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4ce0a5f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce0a5f6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ce0a5f840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ce0a5f9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce0a5fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4ce0a5b3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4ce0a5b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4ce0a5b740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0a5b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4ce0a59210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4ce0a59210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4ce0a595b0"/>
        <function-ref name="configure" scoped="" ref="0x7f4ce0a59740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ce0a599d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce0a599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce0a59d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4ce0a58020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4ce0a581b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce0a58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4ce0a5bb20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce0a5bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0a5a020"/>
        <function-ref name="requested" scoped="" ref="0x7f4ce0a5a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0a5a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0a5a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0a5a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce0a58590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce0a58590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce0a58910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce0a58aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce0a58c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce0a58dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce0a57020"/>
        <function-ref name="get" scoped="" ref="0x7f4ce0a571b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce0a57340"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce0a57980"/>
        <function-ref name="set" scoped="" ref="0x7f4ce0a57660"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce0a574d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce0a577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4ce0a5c540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce0a5c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0a5c8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce0a5ca70"/>
        <function-ref name="request" scoped="" ref="0x7f4ce0a5cc00"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0a5cd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0a5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4ce0a5a8b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0a5a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce0a5ac30"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce0a5adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4ce0a57c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f4ce0a57c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce0a55020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce0a551b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4ce174a400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ce174a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4ce174a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4ce174a9d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce174a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce174ad50"/>
        <function-ref name="requested" scoped="" ref="0x7f4ce1749020"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce17491b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce1749340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce17494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4ce1761b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce1761b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce174a020"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce174a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ce1749720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce1749720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce1749aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce1749c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4ce0a26b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4ce0a26b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4ce0a26e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4ce0a250f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4ce0a250f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce0a25470"/>
        <function-ref name="requested" scoped="" ref="0x7f4ce0a25600"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce0a25790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce0a25920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4ce0a25ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4ce0a263a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4ce0a263a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce0a26720"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce0a268b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4ce0a25d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4ce0a25d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4ce0a240a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4ce0a24230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f4ce17288e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f4ce17288e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f4ce1728c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4ce1727020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f4ce1727020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4ce17273a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4ce1727530"/>
        <function-ref name="request" scoped="" ref="0x7f4ce17276c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4ce1727850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4ce17279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce1728080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce1728080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce1728400"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce1728590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f4ce17168c0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f4ce17168c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f4ce1716c40"/>
        <function-ref name="offset" scoped="" ref="0x7f4ce1716dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f4ce1713020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f4ce1702020" loc="9:../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f4ce1702020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f4ce17023a0"/>
        <function-ref name="bind" scoped="" ref="0x7f4ce1702530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f4ce17026c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f4ce1702850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f4ce16fd7f0" loc="13:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce16fd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f4ce22f3700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f4ce22f3bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce16fb990"/>
        <function-ref name="get" scoped="" ref="0x7f4ce16fb480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f4ce1700a20" loc="12:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f4ce1700a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f4ce1700da0"/>
        <function-ref name="bind" scoped="" ref="0x7f4ce16fd020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f4ce16fd1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f4ce16fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f4ce16f6850" loc="15:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f4ce16f6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f4ce22f3700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f4ce22f3bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce16f4990"/>
        <function-ref name="get" scoped="" ref="0x7f4ce16f4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce16f6020" loc="14:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce16f6020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4ce3c48b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce16f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce16f3600" loc="19:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce16f3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce16f3980"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce16f3b10"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce16f3ca0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce16f3e30"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce16f2020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce16f21b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce16f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f4ce16f7020" loc="13:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f4ce16f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f4ce16f73a0"/>
        <function-ref name="bind" scoped="" ref="0x7f4ce16f7530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f4ce16f76c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f4ce16f7850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f4ce16f4e20" loc="18:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce16f4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce16f31c0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce16f3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f4ce16a7c80" loc="44:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f4ce16a7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f4ce16a60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4ce16a8020" loc="41:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ce16a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ce16a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f4ce16a8650" loc="42:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f4ce16a8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f4ce16a89d0"/>
        <function-ref name="changed" scoped="" ref="0x7f4ce16a8b60"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f4ce16a8cf0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f4ce16a8e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce16a7030"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f4ce16a71c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f4ce16a7350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7f4ce16a7620" loc="43:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f4ce16a7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f4ce16a79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f4ce16a63a0" loc="45:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f4ce16a63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f4ce16a51b0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f4ce16a68b0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f4ce16a6a40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f4ce16a6bd0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f4ce16a6d60"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f4ce16a6720"/>
        <function-ref name="getContext" scoped="" ref="0x7f4ce16a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f4ce1698130" loc="44:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f4ce1698130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f4ce16984b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f4ce1698640"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f4ce16987d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f4ce16ab8f0" loc="43:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f4ce16ab8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4ce16abc70"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce16abe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce1696980" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce1696980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1696d20"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce1695020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f4ce0a16500" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f4ce0a16500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0a16880"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0a16a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f4ce0a17ce0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f4ce0a17ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0a160a0"/>
        <function-ref name="recv" scoped="" ref="0x7f4ce0a16230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ce1619870" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce1619870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1619bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1619d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1618020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce16181b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1618340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4ce1618590" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce1618590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1618910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1618aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1618c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1618dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce1617020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4ce1617270" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1617270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ce16175f0"/>
        <function-ref name="source" scoped="" ref="0x7f4ce1617780"/>
        <function-ref name="address" scoped="" ref="0x7f4ce1617910"/>
        <function-ref name="destination" scoped="" ref="0x7f4ce1617aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce1617c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ce1617dc0"/>
        <function-ref name="type" scoped="" ref="0x7f4ce1616020"/>
        <function-ref name="setType" scoped="" ref="0x7f4ce16161b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ce1616340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ce16164d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ce1616660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4ce16168f0" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f4ce16168f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4ce1616c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f4ce1616e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4ce1614020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4ce0a070c0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce0a070c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0a07440"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce0a075d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce0a07760"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce0a078f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce0a07a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f4ce0a07d30" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce0a07d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce0a060e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce0a06270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce0a06400"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce0a06590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce0a06720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ce0a06970" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ce0a06970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ce0a06cf0"/>
        <function-ref name="source" scoped="" ref="0x7f4ce0a06e80"/>
        <function-ref name="address" scoped="" ref="0x7f4ce0a04030"/>
        <function-ref name="destination" scoped="" ref="0x7f4ce0a041c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce0a04350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ce0a044e0"/>
        <function-ref name="type" scoped="" ref="0x7f4ce0a04670"/>
        <function-ref name="setType" scoped="" ref="0x7f4ce0a04800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ce0a04990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ce0a04b20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ce0a04cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1673ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1673ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce16700a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1670230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce16703c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1670550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce16706e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ce1625400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce1625400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce16257a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1625930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1625ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1625c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1625de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4ce1627580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f4ce1627580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce1627920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1627ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1627c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce1627dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce1625020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ce1623720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce1623720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce1623aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce1623c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce1623dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce1622020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce16221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f4ce1622480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f4ce1622480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1622800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce1622990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f4ce1622c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f4ce1622c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce1621020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce16211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4ce1624060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f4ce1624060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4ce16243e0"/>
        <function-ref name="source" scoped="" ref="0x7f4ce1624570"/>
        <function-ref name="address" scoped="" ref="0x7f4ce1624700"/>
        <function-ref name="destination" scoped="" ref="0x7f4ce1624890"/>
        <function-ref name="setSource" scoped="" ref="0x7f4ce1624a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4ce1624bb0"/>
        <function-ref name="type" scoped="" ref="0x7f4ce1624d40"/>
        <function-ref name="setType" scoped="" ref="0x7f4ce1623020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4ce16231b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4ce1623340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4ce16234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f4ce1611760" loc="43:../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce1611760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f4ce15f05f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce15ee020"/>
        <function-ref name="element" scoped="" ref="0x7f4ce15ee4f0"/>
        <function-ref name="full" scoped="" ref="0x7f4ce15f1810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce15f0170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce15f0a70"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce15f1390"/>
        <function-ref name="size" scoped="" ref="0x7f4ce15f1c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4ce15e7ca0" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f4ce15e7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f4ce15e6ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f4ce15e54a0"/>
        <function-ref name="element" scoped="" ref="0x7f4ce15e5970"/>
        <function-ref name="full" scoped="" ref="0x7f4ce15e9d40"/>
        <function-ref name="maxSize" scoped="" ref="0x7f4ce15e6660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4ce15e5020"/>
        <function-ref name="empty" scoped="" ref="0x7f4ce15e98c0"/>
        <function-ref name="size" scoped="" ref="0x7f4ce15e61e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4ce15e5df0" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f4ce15e5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4ce15e41c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce15e4350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce15e44e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4ce15e4670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4ce15e4800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4ce15e4a90" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f4ce15e4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4ce15e4e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4ce15e3020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4ce15e31b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4ce15e3340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4ce15e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f4ce15ded10" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f4ce15ded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4ce15dd0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4ce15dd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce15edcc0" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce15edcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce15ea0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4ce15e3750" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f4ce15e3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4ce15e3ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4ce15e3c60"/>
        <function-ref name="led1On" scoped="" ref="0x7f4ce15e3df0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4ce15e2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4ce15e21b0"/>
        <function-ref name="get" scoped="" ref="0x7f4ce15e2340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4ce15e24d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4ce15e2b10"/>
        <function-ref name="set" scoped="" ref="0x7f4ce15e2660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4ce15e27f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4ce15e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f4ce15e7400" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f4ce15e7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f4ce15e7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f4ce15c42a0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f4ce15c42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f4ce15c4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4ce15c35a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f4ce15c35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4ce15c3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f4ce15c3c00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f4ce15c3c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f4ce15bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4ce15bab90" loc="39:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f4ce15bab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4ce15b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f4ce15b73c0" loc="40:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f4ce15b73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4ce15b7740"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4ce15b78d0"/>
        <function-ref name="start" scoped="" ref="0x7f4ce15b7a60"/>
        <function-ref name="stop" scoped="" ref="0x7f4ce15b7bf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4ce374c270" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f4ce3753d70" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f4ce371f420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f4ce3722700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f4ce3720ce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f4ce3722020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f4ce3722e70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f4ce37230e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f4ce37237c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f4ce37205c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f4ce38c7020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4ce3b8cc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f4ce36cd020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4ce36cfcc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f4ce36d1390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ce3718ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ce3717940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4ce36cd890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f4ce36cc7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f4ce36cf560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4ce36cc020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4ce36d1b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f4ce36d0350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f4ce36d0da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ce3718ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ce3717940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ce36d0b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4ce3718ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f4ce3717940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4ce36c00e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f4ce36bd730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f4ce36bd4b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4ce36bc2e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ce36bc060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ce36bfca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ce36bf3e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f4ce36c0a90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f4ce36c0810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f4ce36c73e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f4ce36c7d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ce36c7ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f4ce36c6790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4ce36c6510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f4ce36c42a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f4ce36c4020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ce36c4990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ce36d7810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4ce36d52a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f4ce36d5020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f4ce36d6020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ce36ddaa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f4ce36d6760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ce36da9b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4ce36d7120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ce36da270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4ce36d90e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f4ce36d99f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ce36d9770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f4ce36d5cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f4ce36d5a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ce36961f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f4ce37eaa80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f4ce37e71f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f4ce37ea2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f4ce3a03810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4ce3c46020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f4ce3c45020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4ce3c46790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4ce3c3a270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f4ce3c3aac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f4ce34f4750" loc="43:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f4ce3501930" loc="41:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f4ce34f4070" loc="42:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4ce34ef020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ce34f0c50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4ce34ed520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ce34ed2a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4ce34f0270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ce34ef870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ce34740b0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce34c3df0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f4ce34732a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce3473020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ce346e620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce346e020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce346e350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ce346f6d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f4ce3471730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce3471170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce34714a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ce347ea60" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce347e110" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4ce347e490" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce347e7c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ce3477620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce3477020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce3477350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ce34786d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ce347c2a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce347c020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce347a7f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce347a210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ce347a560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7f4ce3484810" loc="47:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7f4ce3484120" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7f4ce3486980" loc="41:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f4ce348f820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f4ce348f020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7f4ce34ea2c0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f4ce354c140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4ce34eb7f0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f4ce354c140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ce34ebb40" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce34ea020" loc="19:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7f4ce34eb020" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7f4ce34f3c90" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7f4ce34e8130" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f4ce354c140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4ce34eaa80" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f4ce354c140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7f4ce34eae80" loc="22:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7f4ce34e76e0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f4ce354c140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f4ce34e88c0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f4ce354c140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ce34e8c10" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce34e7020" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f4ce34e7430" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4ce34f2070" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ce34f2880" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce35154f0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce35154f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4ce350d1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ce3512a80" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f4ce3510860" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ce3510290" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4ce35105d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f4ce3511aa0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f4ce350c270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f4ce350d980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4ce35112b0" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f4ce35140b0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ce3515de0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f4ce350e820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ce350e250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4ce350e590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f4ce3514b70" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ce35148f0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ce3512390" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4ce3482980" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce3482020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ce3482370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce34826a0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f4ce3526070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f4ce3526820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f4ce3525030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f4ce3523020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f4ce35227d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ce3518020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f4ce35257c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ce3518b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4ce3518910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f4ce35278a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f4ce3523800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f4ce3522020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7f4ce34faba0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7f4ce34f9510" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7f4ce34f9290" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7f4ce34f9c20" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7f4ce3500030" loc="42:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f4ce34fd400" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f4ce34fd180" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7f4ce34f8350" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f4ce34fe270" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7f4ce34fdbe0" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7f4ce34fa4a0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7f4ce34fc380" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7f4ce34fc6f0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7f4ce34fca80" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7f4ce34fce00" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7f4ce34fa1e0" loc="51:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7f4ce34fe9c0" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f4ce3500ad0" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f4ce3500850" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7f4ce3503900" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4ce341ce30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4ce341b5c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4ce341c020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4ce341a480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ce341c720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4ce341bce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ce341e120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4ce341e7f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4ce33f0350" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4ce33f0aa0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f4ce33eb390" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ce33eb110" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4ce33f3b50" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4ce33ef9d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f4ce33ebc80" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4ce33ef270" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ce33f1b50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f4ce33ec0e0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f4ce33f1350" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ce33f6cb0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f4ce33ee190" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f4ce33ec880" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f4ce33ee950" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4ce33f3420" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce31a2c40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce31a2c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ce319d5a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce31985d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce31985d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ce3198810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4ce3193390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ce31953b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4ce31949d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4ce3194400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f4ce3194740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4ce3195b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4ce3193b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4ce3197390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4ce3197110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3198810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ce3197bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce31274f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce31274f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ce3127730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3127730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ce3126070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce3127730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4ce3125190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4ce31268f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4ce31258f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f4ce2ffe160" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ce2ffe160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f4ce2ffeca0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ce2ffe160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f4ce2ffea20" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4ce2ffe160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7f4ce2fdc550" loc="102:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7f4ce2fe3350" loc="77:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7f4ce2fdb020" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7f4ce2fdcc60" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7f4ce2fe0780" loc="94:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f4ce2fdddf0" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f4ce2fddb70" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7f4ce2fe44d0" loc="71:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f4ce2fe3da0" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f4ce2fe3b20" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f4ce2fdf5a0" loc="97:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7f4ce2fe0e60" loc="95:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7f4ce2fdd420" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7f4ce2fdfd50" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7f4ce2fdd190" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7f4ce2fe1800" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f4ce2fe1580" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7f4ce2fe0020" loc="90:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f4ce2fdbbc0" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f4ce2fdb940" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7f4ce2fe4bd0" loc="74:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7f4ce2fea9d0" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce2fea750" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f4ce2fe5020" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f4ce42fda20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f4ce2fe7150" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7f4ce2fe7490" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce2fe77d0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f4ce42fda20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f4ce2fe7be0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7f4ce2f7f360" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f4ce2f80c70" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f4ce2f7f0d0" loc="29:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7f4ce2f803e0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f4ce2f8fce0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f4ce2f80150" loc="14:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7f4ce2f7d360" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4ce2f7fcc0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7f4ce2f7d0d0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7f4ce2f91b90" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2f91910" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4ce2f8a7b0" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7f4ce2f8a530" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7f4ce2f8dc10" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2f8d990" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7f4ce2f8e660" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2f8e3e0" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4ce2f8d110" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f4ce2f8ee30" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7f4ce2f8be70" loc="52:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7f4ce2f8b6c0" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2f8b440" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7f4ce2f6ee80" loc="23:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7f4ce2f6d600" loc="24:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7f4ce2f6e6b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7f4ce2f6f7b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2f6fb00" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7f4ce2f6e020" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7f4ce2f6e400" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7f4ce2f73be0" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f4ce3571a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f4ce3570020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2f73540" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7f4ce2f73950" loc="12:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f4ce3571a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f4ce3570020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7f4ce2f72ab0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2f724b0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f4ce2f72820" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7f4ce2f71860" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7f4ce2f711f0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f4ce2f715d0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7f4ce2f6f020" loc="20:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f4ce2f77950" loc="27:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7f4ce2f89b30" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7f4ce2f898b0" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7f4ce2f7bc80" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7f4ce2f7ba00" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f4ce2f78390" loc="21:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7f4ce2f78a60" loc="22:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7f4ce2f7b270" loc="11:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7f4ce2f75350" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4ce2f750d0" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7f4ce2f79420" loc="16:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f4ce2f79c10" loc="18:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7f4ce2f771f0" loc="24:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7f4ce2f982e0" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7f4ce3488ec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7f4ce3487520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7f4ce2f98020" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7f4ce2f822e0" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f4ce34e4a30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f4ce2f82020" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7f4ce2f85c40" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f4ce34e4a30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f4ce2f85610" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f4ce2f85970" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7f4ce2f86d40" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f4ce34e46f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f4ce2f86ac0" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f4ce34e46f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7f4ce2f84760" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f4ce34e4a30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f4ce34e46f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f4ce2f844a0" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f4ce34e46f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7f4ce2f862d0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7f4ce34e46f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f4ce2f88490" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f4ce2f887f0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7f4ce2f88c30" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7f4ce2f86020" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7f4ce2f957e0" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7f4ce2f99d90" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7f4ce2f95180" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7f4ce2f95540" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7f4ce2f93a20" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2f930d0" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f4ce2f93420" loc="22:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f4ce2f93780" loc="23:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7f4ce2f94970" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7f4ce2f94020" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f4ce356a770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f4ce2f94370" loc="18:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f4ce2f946d0" loc="19:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7f4ce2d70830" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2d705b0" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7f4ce2d69560" loc="5:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f4ce3573210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4ce2d67560" loc="10:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f4ce2d68e80" loc="8:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4ce3573630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce2d68c00" loc="8:../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4ce3573630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f4ce2d68490" loc="7:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ce3574670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7f4ce3573a70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f4ce2d69cf0" loc="6:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4ce3573630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f4ce2d25a70" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ce3574670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4ce3574dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f4ce2d18640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f4ce2d18060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f4ce2d183b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f4ce2d19020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f4ce2d1b690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f4ce2d1b020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f4ce2d1b400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f4ce2d21a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ce2d217c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f4ce2d198a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f4ce2d1d540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4ce2d1d2c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4ce2d20b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4ce2d20910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f4ce2d178a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f4ce2d1c6b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f4ce2d1c430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f4ce2d17070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f4ce2d1e350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f4ce3574670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f4ce3574dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f4ce2d1eb40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f4ce2d21020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4ce2d201f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f4ce2d1dce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4ce2cf25c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ce2cf25c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4ce2cf2e80" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4ce2ce9bd0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ce2cf25c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4ce2ce9620" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4ce2ce9940" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4ce2cf25c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f4ce2cef960" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f4ce2ceda80" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f4ce2ced2b0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f4ce2cf10e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f4ce2cef120" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f4ce2cee270" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f4ce2ceea90" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f4ce2cf1940" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4ce2cf6b60" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f4ce2cf7b60" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4ce2cf71f0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4ce2cf6390" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4ce2cf55e0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ce2cc7c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2cc7990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ce2cc6710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2cc6490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f4ce2ccf560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4ce2cce4f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f4ce2ccfd40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f4ce2cd0cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f4ce2cd06f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4ce2cd0a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f4ce2cc2e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f4ce2ccce80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ce2ccc020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4ce2ccc890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2cccbe0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ce2cc9610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ce2cca770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4ce2cc9020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2cc9370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ce2cd3c30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ce2cd3470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f4ce2cd4ce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f4ce2cd4420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f4ce2bb4bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ce2bb2d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4ce2bb25c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ce2bb2340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f4ce2bb4350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4ce2b8ea60" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4ce2b8b540" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4ce2b8e2d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f4ce2b8dcf0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f4ce2b8da70" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4ce2b91b00" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4ce2b8d2b0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f4ce2a7a270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f4ce2a7aac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f4ce2a79350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f4ce2a53b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2a53580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2a538d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f4ce2a4ddd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2a4d490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2a4d7e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ce2a4db30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ce2a4f6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2a4f0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2a4f420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f4ce2a54730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f4ce37a5020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2a54150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2a544a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4ce2a502c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2a51930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4ce2a51c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ce2a50020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ce2a33df0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4ce2a33480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4ce2a33810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce2a33b50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce2a2f3c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4ce2a306a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4ce2a30a30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce2a30d70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ce2a2f110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4ce2a37c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f4ce2a37a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f4ce2a297f0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f4ce2a2cd40" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f4ce2a29020" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f4ce2a2ac70" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f4ce2a2a4d0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f4ce2a35a80" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4ce2a35800" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f4ce2a2c560" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f4ce2a2c2e0" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4ce294e6f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4ce294d070" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4ce2946710" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ce2980020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ce2980440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f4ce294b2a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce294b020" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f4ce2949680" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2949400" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f4ce294bb10" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4ce29482a0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2948020" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4ce293fca0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4ce293f480" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f4ce29372a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2937020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f4ce2938780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f4ce2913af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f4ce291f790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f4ce292c610" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce299d080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ce299d8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ce292c390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce299d080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ce299d8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f4ce2921870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f4ce2929a90" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce2998080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ce29988c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ce2929810" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce2998080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ce29988c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f4ce2919e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f4ce2915480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f4ce2929070" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce299b020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ce299b7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f4ce29282b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce2998080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f4ce29988c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f4ce2924020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f4ce2925d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f4ce2925610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f4ce2919740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f4ce292a840" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce299b020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ce299b7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4ce292a5c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce299b020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f4ce299b7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f4ce2927420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f4ce29175d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f4ce2927e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f4ce2927b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f4ce2923910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f4ce29210e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f4ce291a840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f4ce291c790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f4ce29207e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f4ce2919020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f4ce291e020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f4ce2917cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f4ce2924800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f4ce29a4dc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f4ce299f680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f4ce29164c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f4ce2913350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f4ce2928c50" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f4ce29289d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f4ce29124d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2912250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f4ce292cdf0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4ce299d080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f4ce299d8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f4ce2920020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4ce291e770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f4ce291a020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ce296fe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ce296e2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ce291bcf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ce296fe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ce296e2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f4ce291b2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ce2980020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ce2980440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ce291b020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f4ce2980020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f4ce2980440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f4ce2912d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f4ce2916cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f4ce2923070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f4ce2915be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f4ce291c020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f4ce291f020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f4ce28ab600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f4ce2884070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f4ce2897b10" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f4ce288bd50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce288bad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f4ce289e270" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f4ce2887350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f4ce2890cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f4ce2898c50" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f4ce28959c0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f4ce2899c00" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f4ce2899980" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f4ce289b120" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f4ce2893790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f4ce288ac80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f4ce28858f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f4ce288b390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f4ce2880b60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f4ce287b270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f4ce289d0e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f4ce2893020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f4ce2892910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f4ce2898500" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f4ce28a0020" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f4ce288dba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4ce288d920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f4ce28a37d0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f4ce2889b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f4ce28847d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f4ce287d350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f4ce287ca90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f4ce2886270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f4ce2882020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f4ce288a520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f4ce2881bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f4ce289d800" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f4ce288e020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f4ce2881020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f4ce2885190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f4ce2890520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f4ce28902a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f4ce287daf0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f4ce288d1f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f4ce2887ac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f4ce28a0aa0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ce295bb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4ce2959020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f4ce28a0820" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ce295bb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f4ce2959020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f4ce2894870" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f4ce289c980" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ce289c700" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f4ce2892120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce2893e70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f4ce28803b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f4ce2899270" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f4ce289c020" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f4ce288e9e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f4ce288e760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f4ce289e9a0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f4ce2882740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f4ce28869e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f4ce2889420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f4ce288f740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f4ce288f4c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f4ce2894120" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f4ce28973b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f4ce287c2b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f4ce289baa0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4ce289b820" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f4ce287f350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f4ce2895270" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f4ce287fb10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f4ce27e0780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f4ce27df020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4ce27a8900" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f4ce27a7a20" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4ce27a8070" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4ce27a71f0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4ce27a6390" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f4ce279bb50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ce27a4b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ce279b8d0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ce27a4b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f4ce27a0b80" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f4ce279d6b0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ce27a4b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4ce279d430" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ce27a4b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4ce279b020" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f4ce27a4b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f4ce256cd70" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce256cd70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4ce25650e0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce256cd70"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f4ce25688a0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f4ce25696b0" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f4ce2567350" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce256cd70"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f4ce25670d0" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce256cd70"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f4ce2568020" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f4ce2578020" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce2578020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f4ce2575790" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce2578020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f4ce25732a0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce2578020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f4ce2573020" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce2578020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f4ce42f4c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f4ce42f4c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f4ce25712a0" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce2578020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4ce2571020" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f4ce2577070" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f4ce2575020" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4ce2574390" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce2578020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f4ce25788d0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f4ce25777f0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7f4ce24a0cb0" loc="43:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7f4ce249c5a0" loc="50:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7f4ce2477d30" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f4ce2477330" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f4ce354fcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f4ce2477740" loc="19:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f4ce2477a90" loc="20:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f4ce24748e0" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f4ce2476e70" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ce2474210" loc="29:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f4ce2474640" loc="30:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce2476740" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f4ce24764c0" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7f4ce23e8740" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f4ce3570d50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f4ce23ebd10" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f4ce3570d50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f4ce23e8150" loc="19:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f4ce35391b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f4ce23e84a0" loc="20:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f4ce23e5480" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f4ce23e69d0" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f4ce354caa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4ce23e6d40" loc="29:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f4ce23e51e0" loc="30:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f4ce353b5e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce23e62a0" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f4ce23e6020" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f4ce2fa0870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7f4ce22f18f0" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f4ce22f18f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f4ce22eeb20" loc="34:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4ce22ee450" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f4ce22f18f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7f4ce22ee1d0" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f4ce22f18f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7f4ce22bdc80" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22bda00" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7f4ce22bd2a0" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22bd020" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f4ce22b02b0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22b1bd0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f4ce22b0020" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f4ce22af430" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22af1b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f4ce22b13e0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f4ce22b29e0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f4ce22b2760" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ce22c8890" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22c82d0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce22c8600" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4ce22c1020" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22c3890" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce22c3bc0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4ce22c3020" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ce22c6b90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22c6910" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce22c50c0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22c4a80" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ce22c4dd0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f4ce22b6680" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22b6400" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f4ce22ba770" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22ba150" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f4ce22ba4e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f4ce22b8650" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22b83d0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f4ce22b9b70" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22b9550" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f4ce22b98e0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f4ce22b5650" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce22b53d0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f4ce1fd4780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fd4500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f4ce1fe1be0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fe1600" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f4ce1fe1950" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f4ce1fdc3a0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fddd50" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f4ce1fdc110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f4ce1fe06e0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f4ce42ef110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fe0460" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f4ce1fdd2a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fdd020" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f4ce1fe5dd0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fe5b50" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f4ce1fde2a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fde020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f4ce1fda2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fda060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f4ce1fd8510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fd8290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f4ce1fd7680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fd7400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f4ce1fc7e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fc7bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f4ce1fc8120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fc9e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f4ce1fcb7a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4ce1fcb520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f4ce1fccbd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f4ce1fcc950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f4ce1fc92a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f4ce1fc9020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f4ce1fc7020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fc8d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ce1fbb040" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fbca50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f4ce1fbcd80" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ce1fb9350" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f4ce1fb7c50" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f4ce1fb8e00" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f4ce1fb7680" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce1fb79b0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce1fb8600" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f4ce1fb8020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4ce1fb8370" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f4ce1fbbad0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f4ce1fbb850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f4ce1fafae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1faf820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f4ce1faf020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f4ce37a4df0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f4ce37a27d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1fb0be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f4ce1faede0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f4ce37a03e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f4ce379e2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1faeae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f4ce1f5b890" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f4ce1f44020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4ce1f44020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4ce1f44260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce1f44260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f4ce1f420b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce1f44260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f43e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f4ce1f402a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f40020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f4ce1f44e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f44ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ce1f3e610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce1f44260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f3e020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4ce1f3e380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4ce1f44260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4ce1f1f420" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f4ce1f20a20" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f4ce1f1f190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f4ce1f20270" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f4ce1f22a00" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4ce1f22780" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f4ce42ee920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f4ce1f37cb0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f37a30" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f4ce1f3bc90" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f3ba10" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4ce1f34c80" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f34a00" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4ce1f36ca0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1f36a20" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f4ce1a95840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a955c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f4ce1a9e350" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a9e0d0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f4ce1aa1790" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4ce1aa02a0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1aa0020" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4ce1a9bc40" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a9b660" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4ce1a9b9b0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4ce1a9d760" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a9d180" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4ce1a9d4d0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4ce3767560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f4ce1a982e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a98060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f4ce1a96680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a960d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f4ce1a963f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4ce3768d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4ce1a990b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a9ce00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f4ce1a91d00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4ce1a91720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4ce1a91a70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f4ce1a8fb50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4ce3767180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f4ce1a25020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1a26960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f4ce1a26ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f4ce1a28020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f4ce1a26020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4ce1a288b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4ce37570c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f4ce37566f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f4ce1a28c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f4ce1a0c190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f4ce1a0f9e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f4ce1a15270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f4ce1a146c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f4ce1a12390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce1a12110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f4ce1a13020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f4ce1a15de0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce1a15b60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f4ce1a12bf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f4ce1a138d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f4ce1a1ec10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f4ce1a1c590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f4ce1a1e2a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f4ce1a1e020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f4ce1a1b2a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4ce1a1b020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f4ce1a19020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f4ce1a19c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4ce1a199c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f4ce1a18730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4ce1a184b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ce18e7dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ce18e7800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce18e7b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f4ce18e1ac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4ce18e1840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f4ce18de930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ce18de360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce18de6a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f4ce18e0740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f4ce18dd2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ce18dc920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce18dcc60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ce18dd020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f4ce18e1070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4ce18e3720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f4ce18e4db0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4ce18e3130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4ce18e3480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4ce18bc5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4ce18bc330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f4ce18bcdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f4ce18bbcf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f4ce18bb700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f4ce18bba60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4ce42ee160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f4ce18b9b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f4ce18b1420" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f4ce296fe70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f4ce296e2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4ce1823860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4ce18220e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f4ce175d470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f4ce1610b80" loc="43:../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce1610b80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f4ce160b350" loc="80:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce1610b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f4ce1609580" loc="97:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4ce3c41c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce1610b80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f4ce1609300" loc="97:../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce1610b80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f4ce1608020" loc="108:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce1610b80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4ce1609d50" loc="108:../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f4ce160dbd0" loc="57:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f4ce160cba0" loc="72:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4ce160bb10" loc="88:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f4ce1610b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f4ce160d460" loc="50:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4ce3c49090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f4ce160c390" loc="65:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f4ce42ee520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f4ce15e70b0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f4ce15eadd0" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
