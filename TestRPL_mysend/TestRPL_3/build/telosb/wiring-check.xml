<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d143ae130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d129d5800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5d143a35a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5d129d6600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5d1439a7a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5d129d5e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5d129d5e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5d12965d60"/></to>
    </wire>
    <wire loc="67:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5d14459750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5d1467b220"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5d1467b220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5d144bd590"/></to>
    </wire>
    <wire loc="68:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d1441b8b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d133d2510"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d133d2510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12a97440"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d144450d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14351710"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7f5d1443a820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d140e9640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d140e9640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f5d144266b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f5d13dc3320"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f5d13dc3320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f5d13cdda10"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5d144229f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5d13dc4080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5d13dc4080"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5d13cde880"/></to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f5d14420d90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13dc49e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d13dc49e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13cdd270"/></to>
    </wire>
    <wire loc="76:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7f5d14415a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f5d12631020"/></to>
    </wire>
    <wire loc="15:../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f5d12631020"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f5d1262fa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f5d143b2b50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d134c2020"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d134c2020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f5d1340f4b0"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d14437c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d13f38020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d13f38020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d143bdb60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f284e0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d124f35a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d1251ccc0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12625020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d1198fca0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12960540"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11a8c900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11aac620"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11ac0900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11ae8690"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11afbaf0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12b86dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12c0fb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12c2d430"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12d8a620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12e80020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13b6b7e0"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d131ff720"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11d3d140"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d138ef020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13c15610"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13c59c50"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13f2ea90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d140d7400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5d144bdc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5d14b733a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5d14b733a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5d1471d140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5d144b16c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d1467e700"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d1467e700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d14678910"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d144b1dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f5d14675060"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f5d14657020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f5d14657020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d14654020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5d14675740"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d14677c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f5d14675e20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d14328020"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d14654020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d1463fcb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5d1464d6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5d1463d3d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5d147f54c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5d1463c680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f5d145f95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d145366d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f5d145e7020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d1452eb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f5d145f0700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d1453b160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f5d145d4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d14515cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f5d145f7aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d1453c480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f5d145db020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d14515020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f5d145d1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d144fdcb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f5d145e25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d1450e220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f5d145fab10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d1458b9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f5d145d6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d145242f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f5d145dd3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d14525610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f5d145e65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d14526220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f5d145ef700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d145347a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f5d145d3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d1450c2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f5d145e5be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d1451e6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f5d145f6890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d14535ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f5d1460a060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d14599540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f5d145dbda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d1450d610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f5d146000c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d1453d020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f5d145e1a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d145076d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f5d145ea6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d14543a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f5d145d5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d1451c7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f5d145f2cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d14545de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f5d145dc1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d1451dac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f5d145d2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d145057a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f5d145e30c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d14517b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f5d145d9b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d14506ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f5d145d7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d1452ccb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f5d145d8a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d144fd020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f5d145de570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5d1452c020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f5d145df020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5d144ffb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5d14597450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14598d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5d14597aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5d144f8a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5d14596120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5d144f5260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d14542930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d14599540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d14540020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14598d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d1453a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d14599540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d145397a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14598d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d14532610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d14599540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d14531c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14598d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5d145902f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5d14590940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5d144f59f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5d1458e020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5d144f4240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d1452bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d145292f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d14522160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d145217a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d1451b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d1451ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d14514b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d145112f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d1450b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d1450a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d14504610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d14502c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d144fcb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5d144fa2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d1471b040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f5d14715490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f5d14b0a3b0"/></to>
    </wire>
    <wire loc="241:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f5d14367600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d14328020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d14351110"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5d14349ce0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5d14352960"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5d14352960"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d14112020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5d1434d020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5d1432bb60"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5d1432bb60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d140fdb90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5d14348340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5d1432ae70"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5d1432ae70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d140f8710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d141012f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f5d142d29a0"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f5d142d29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141aed10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d140fcde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f5d142d09a0"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f5d142d09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141a9740"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d140f7930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f5d142ce9a0"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f5d142ce9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141a4100"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5d14313810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14247740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5d142ff810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14217100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f5d142b5ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14209100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f5d14290cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1417e740"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f5d142b3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14205d10"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f5d142fb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1420e740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f5d142e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141de460"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f5d142c19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14187100"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f5d142adcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141fa100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f5d1429dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1419b740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f5d14288cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14179100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5d1430d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14239740"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f5d142abcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141f6d10"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5d14309810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14230d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f5d142f4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141ff740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f5d142e09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141cf100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f5d142cc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141a0d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f5d142bb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14179100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5d14317810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14251100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5d14303810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14221d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f5d142ee810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141f1740"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f5d142b7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14209100"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f5d14296cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1418c740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f5d1428acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14179100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f5d142a3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141b2100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f5d142ea810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141e8e60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f5d142d69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141b8740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f5d142c59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14191d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f5d14294cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14187100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f5d142a9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141c1100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5d14311810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14242100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5d142fd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14213d10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f5d142ca9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1419b740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f5d142f9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14209100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f5d142e49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141d9e00"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f5d142bf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14183d10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f5d142a5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141b8740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5d14319870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14281d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5d14307810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1422b740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f5d142f2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141fa100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f5d142de9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141cbd10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f5d142a1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141f1740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f5d1429bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14196100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f5d1428ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14179100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f5d142da9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141c1100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f5d1429fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141ec100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5d14315810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1424dd10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5d14301810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1421c740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f5d142ec810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141ec100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f5d142a7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141bdd10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f5d14292cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14183d10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f5d142e89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141e39f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f5d142d49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141b2100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f5d142c39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1418c740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5d1430f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1423ed10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f5d142c89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14196100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5d1430b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14234100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f5d142f7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14205d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f5d142e29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141d4740"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f5d142bd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1417e740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5d14323810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14256740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5d14305810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14226100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f5d142f0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141f6d10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f5d142dc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141c6740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f5d142afca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141ff740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f5d14299cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d14191d10"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f5d142b1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141ff740"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f5d142d89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141bdd10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f5d1428ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1417e740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f5d14286cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d141a0d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f5d142b99f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5d1420e740"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140d61d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140d61d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d13f60690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d140d7400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13fdc760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5d140cda80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5d13f52cf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d13fdc760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12011490"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f5d13f5ac30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d13fafcf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5d13fa91d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d13fda020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5d13fda020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d1200a140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d13f47020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d14059020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d14059020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d1401d0f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d12011490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11ff5e60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f5d12004b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d12011ce0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5d12011ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d11ff4720"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d12007690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d14059020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11ff1910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11ffbc50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11ffbc50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11fee020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11ff92b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11ff92b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11fed440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11ff75d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11ff75d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f5d145e7020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f5d145de570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f5d145e5be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f5d145dc1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f5d145e30c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f5d145db020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f5d145e25a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f5d145dbda0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f5d145e1a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f5d145d9b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f5d145df020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f5d145d8a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5d1401a540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5d1404f020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5d1404f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d1403e0a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d1403c2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f5d13fa5490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f5d13f55e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f5d13f2c370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f5d13f29390"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d13f324f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13f2ea90"/></to>
    </wire>
    <wire loc="97:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7f5d13f0ae60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d13ecd800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f5d13f09a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d125c6980"/></to>
    </wire>
    <wire loc="98:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d13f17bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13ecb570"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f5d13f143b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f5d13ecbdc0"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f5d13ec7c70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f5d13f09a80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7f5d13ec8760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f5d13dc3320"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d13eb9a50"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13c9d020"/></to>
    </wire>
    <wire loc="104:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d13ead720"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d133ce6e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f5d13ec2cc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f5d12a78020"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d13e9c8a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d1331d020"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d1331d020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d133117a0"/></to>
    </wire>
    <wire loc="107:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f5d13ea55f0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f5d12a36540"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f5d12a36540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f5d12a32360"/></to>
    </wire>
    <wire loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7f5d13e51380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f5d13cdb310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f5d13f143b0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7f5d13cdbab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d129f0840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f5d13cda3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d13cb9140"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d13cb9140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7f5d13cd5730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d13cb3b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d13cb3b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d13ccbe00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d13cc95e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7f5d13f0ae60"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d13cc7270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7f5d13cc62b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13f17bb0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d13cc6a10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d134c2020"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f5d13cd0ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d13cac4e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d13cac4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f5d13cc5590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f5d12a36540"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d13cc4a40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d1331d020"/></to>
    </wire>
    <wire loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7f5d13cc3ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f5d13cc2ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7f5d13cc12f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7f5d13cc22f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7f5d13cc1ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d13ca1020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d13c9c4a0"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13c96800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13ca0690"/></to>
    </wire>
    <wire loc="9:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13ca0690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13c56300"/></to>
    </wire>
    <wire loc="12:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c55da0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c33020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c46b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c297e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c297e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c149f0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f5d13c1a1b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f5d13c11cd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5d13c1cd90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5d13c128d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d13c24980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d13c15c80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f5d13c0fe40"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b67220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b67220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b61af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5d13c0a0e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5d13b22e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5d13b22e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b14b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5d13c09380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f5d13b1e6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5d13b1e6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b06d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5d13c076a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f5d13b1cce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5d13b1cce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13afb710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5d13c050e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f5d13ae5d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5d13ae5d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5d139c7a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5d13bf01d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d13570e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d13570e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5d13bee2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f5d1356d7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5d1356d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5d13bee9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f5d1356bae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5d1356bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5d13bf1a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1356ead0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1356ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d13bf1120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d1356a160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d1356a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13bf5b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13560870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13560870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5d13bfc3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f5d1355e880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5d1355e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5d13bfcc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f5d1355c0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5d1355c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13bf75f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13565e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13565e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13bf4020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13563670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13563670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5d13c01520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f5d13550500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5d13550500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13bf9a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13551ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13551ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13bf48e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13561e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13561e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5d13bf31c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f5d13563e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5d13563e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13bf3a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13562e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13562e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f5d13bedd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1353ea80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d1353ea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f5d13bed020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d135119e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d135119e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5d13bfd810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5d134e4b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c0f450"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c33020"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f5d13be2820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f5d13be3940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d13b6b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d13b61260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d13b61260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11eb5a10"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b61af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d11eb42a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d11eb5a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11eaea10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5d11eb42a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d11ea75f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d11eaea10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d11e91510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f5d11ea1d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d11ead2a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5d11ead2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5d11e91da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d11ea39b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d13b4b080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d13b4b080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d13b46cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11e8c020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11e961b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11e961b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11e8b760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11e958f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11e958f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11e8aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11e94c10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11e94c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5d13b420f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5d1404f020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5d13b20090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b0f710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5d13b1f390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b0a1d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5d13b68b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b19020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5d13b1d9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b00b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b172f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5d14313810"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b13de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f5d142e69a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b0e930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5d14315810"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b09480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5d14319870"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b04020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f5d142de9a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13affde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f5d142e89a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13afa930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f5d142e09a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5d13ae5150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5d13adda20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5d13ae4a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5d139b8a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d13acc5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f5d145e65a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f5d13acb8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f5d145d6a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13aca7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f5d142e89a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5d139c6610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5d13ab98a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5d13ab98a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5d13aa58a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5d139b7610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5d13abb8f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5d13abb8f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5d13aab810"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5d13aaea30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f5d13a9aa30"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5d13ab58a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f5d13aa28a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5d13ab38a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f5d13aa08a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5d13abf8a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f5d13aa78a0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5d13ab08a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f5d13a9d8a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5d13ab88a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f5d13aa48a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5d13aada30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f5d13a99a30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5d13ab28a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f5d13a9f8a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5d13aba8a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5d13aa68a0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5d13aafa30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f5d13a9ba30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5d13ab78a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f5d13aa38a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5d13ab48a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f5d13aa18a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5d13ac08a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f5d13aa88a0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5d13ab18a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f5d13a9e8a0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5d1356d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d1355f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5d135570a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5d1355e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5d1354b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d1354d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5d1356b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5d13553880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d1354e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5d13559880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5d1355a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d1356fa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13971920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d1356ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5d13569490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d13552c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5d13569be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d1354ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5d135530a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d13562670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d135540a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5d13557880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d13554880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5d1354cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d1354dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5d1355a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5d135550a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5d13550ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5d1355c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5d1354bce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d1356e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5d13565670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d13561670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5d135580a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5d13558880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d1355f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5d135662f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5d13565020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d1356a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d13551500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5d1354c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d135590a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5d13555880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5d1356de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5d1355b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5d13566940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5d1355b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5d135520a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5d1354a9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d1396dbb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d1396a020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d1396adb0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1396e810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13969ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f5d13958b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138f9770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d138f9770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5d13968400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d138d7c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d138d7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d11dbfc30"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5d13966080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5d138d68f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5d138d68f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5d11dbc0c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5d1395c680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5d13596020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5d13596020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5d11dba2b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d13964a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f5d13954bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138efb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5d11dba2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5d1386d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5d11dbc0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5d13871dd0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d11dbfc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d13876a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11dbd8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11db02c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11db02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d136fc8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5d13871dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5d137f5440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d11dbc6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d13870480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d13870480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d137f5a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d1386b600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d11dbaa50"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11da3760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d138715e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5d1386c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d11db1640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d11db1640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d136fd5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d138666a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d11dabc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d11dabc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5d13701a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d138715e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d137f6c40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5d1386d510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5d137f3700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d13876a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d137f7e80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d137f2e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d1386b600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5d137f2060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f5d1386c370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d137edde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d138666a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5d137f1490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d137e5860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d137e5860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5d137d8020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d137ec5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f5d137ebc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5d137db8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d137d3750"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d137de3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5d137d4dc0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5d137a5700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f5d142b7cc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f5d137a3670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f5d142b3cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5d137a1670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f5d142b1cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f5d1379f670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f5d142abcc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5d1379d670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f5d142adcc0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f5d137aa5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f5d13652430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5d11daa440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d136fe9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5d11daaa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5d1365f880"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5d1365f880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f5d13652430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d11daf2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d137e5860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d11db0a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d136fa130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d136fa130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d13666060"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d136f9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11da3760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d136fc8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d13668bf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d13668bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11d3a850"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f5d13701a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5d136f75c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d136fd5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d13669e60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d13669e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d11d3b970"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d136fe9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d136e4020"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d13666060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d11d39c30"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d13666930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d136f9020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d136e24b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d13666060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5d136e4690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d137de3b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5d136e4e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5d137db8a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d13667400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d11d39020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11d37590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d13666930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5d11d37d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5d11d3d750"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5d11d34020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f5d1364b250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5d137d8020"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5d13647d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f5d142b7cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5d13645cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f5d142b1cc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13531c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5d1353bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13534b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d1352e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5d13527e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5d1352ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5d1351a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d1351d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5d13539120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5d13522670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d1351e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5d13533c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13532c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5d13528670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5d1352be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5d1352d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d1353c760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d13538aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5d13536120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d13521a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5d13536870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d1351ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d13539dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5d13524e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d13532480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13533480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1353b750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d13525e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5d13526670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d13524670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5d1351bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d1351dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5d13529670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5d13526e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5d1351fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5d1352c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5d1351aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d1353b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5d13534370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d13531480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5d13528e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5d1352de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5d13527670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5d1352f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5d1353a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d1352fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5d13535020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5d13535cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5d1351f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13520ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d13538450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d135202f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5d1351b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d13529e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5d13525670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5d1353aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5d13539770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5d1352ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5d13535670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5d1352b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5d13522e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5d135197a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13504c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5d1350fda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13508b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d13502670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5d134fbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5d13502e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5d134ee2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d134f02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5d1350c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5d134f6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d134f12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5d13506c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13505c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5d134fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5d134fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5d13500670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13510760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d1350baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5d1350a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d134f5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5d1350a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d134f1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d1350cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5d134f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d13505480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13506480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1350f750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d134f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5d134f9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d134f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5d134efad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d134f0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5d134fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5d134f9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5d134f2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5d134ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5d134eead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d1350f100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5d13508370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d13504480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5d134fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5d13500e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5d134fb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13503670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5d1350e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d13503e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5d13509020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5d13509cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5d134f22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5d134f4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d1350b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d134f42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5d134ef2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d134fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5d134f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5d1350eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5d1350c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5d134ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5d13509670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5d134fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5d134f6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5d134ed7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f5d134c1020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d125c6980"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d13ca36f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d1340fda0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7f5d133febb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f5d134c1020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f5d1340e720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d133eabd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d133eabd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f5d13403020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d133e3560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d133e3560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7f5d13409ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d133db020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d133db020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d133fe410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d133fd400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f5d133f4980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f5d13dc3320"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5d133f1270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5d13dc4080"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133f0590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133d0560"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133d0560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133c8d20"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f5d133fc5a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f5d12a49ae0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7f5d133f60f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d12a424a0"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5d12a424a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d11a8a020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f5d133f1b60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f5d12a78020"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7f5d133ef2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7f5d133efad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d133ce6e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d133ac890"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f5d133cc930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f5d133ada50"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7f5d133d1d40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7f5d133aba90"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f5d133cb9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13dc49e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f5d133cb9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13ca36f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d133d1540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d133c71d0"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d12a94020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d133cb130"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f5d12a948c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7f5d133cb9d0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7f5d12a931a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d13221020"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d13221020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d132006d0"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f5d12a93dd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d1331c980"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d1331c980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13310790"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7f5d133c6ae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d133ab290"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f5d133a81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f5d1331c020"/></to>
    </wire>
    <wire loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f5d1331c020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f5d13319da0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f5d13315720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f5d13221af0"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f5d13221af0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f5d131ffd60"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d13271a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d133c71d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d132702d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d133a8b20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f5d133a3c30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f5d12a78020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f5d133c52d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f5d12a78020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d12a925c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5d133a2790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d12a5fa40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5d12a5fa40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d11aacd10"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7f5d1339e1c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d12a59970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d12a59970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f5d1338ae40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7f5d1330f060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d13276a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7f5d1330f860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d1323f9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7f5d1330e0a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d1323d9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7f5d1330e8a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d1323b9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7f5d1330d270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d132397b0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d132397b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d13308450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d13308c50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133c8d20"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f5d13307900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f5d13315720"/></to>
    </wire>
    <wire loc="39:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d133062d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13305300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13ca0690"/></to>
    </wire>
    <wire loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7f5d132d1380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d13276a30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d11bfd1f0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f5d11bfd9f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d1323f9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d11bf3020"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f5d11bf3820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d1323d9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d11be96a0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f5d11be8020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d1323b9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d11bdfdb0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f5d11bde5e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d1321f020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d131fe940"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f5d131fc060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f22420"/></to>
    </wire>
    <wire loc="30:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f22420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f1db40"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5d131fcbd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5d12f1f020"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5d12f1f020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5d12f17020"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f5d131f90f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5d12f1fd00"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5d12f1fd00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5d12f19a00"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5d131f9e20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f5d12f1ea30"/></to>
    </wire>
    <wire loc="34:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5d12f1ea30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f5d12f18820"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5d131ed020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b108f0"/></to>
    </wire>
    <wire loc="21:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b108f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5d12f0a470"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f5d131ee020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f5d12b0b020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f5d12b0b020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f5d12b05450"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d131cabc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d13219870"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7f5d131cf900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d12b0ce70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d12b0ce70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7f5d131eba10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d12af5a40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5d12af5a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d11afa210"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7f5d131d7150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d12acb020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5d12acb020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d11ae8d80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7f5d131db5f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d12aa3020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5d12aa3020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5d11abe020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f5d131d4c50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f5d12ac5850"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d131f84e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d133117a0"/></to>
    </wire>
    <wire loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f5d12f526e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f1db40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12b7ab80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5d12f18820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12be25e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5d12f17020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5d12be0170"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5d12f19a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12be48e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d12b7ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5d12b76d90"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12f02170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12d06a70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12d06a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12cf6020"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5d12f0a470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b65020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b65020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b60080"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12f0b640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12cfcd20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12f17d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12be2c90"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12be2c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12bd8a20"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12f027f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12b7a080"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12b7a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12b722d0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d12be25e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f5d12bd8370"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12f13080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5d12d076e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5d12d076e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5d12cf8c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12f1ad00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d12be5be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12be5be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d12bda7b0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d12be48e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5d12bd94d0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5d12be0170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5d12bd5020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12f16a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12be1a50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12be1a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12bd7840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5d12b76d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f05b20"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f05b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12efdd90"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12bdf6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12c36dd0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d12c36dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12c2f660"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12c33b50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12b662a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d12b662a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12b633a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12b65d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12b7ece0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d12b7ece0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5d12b77860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12b77860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12eff790"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d12eff790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12ef38f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5d12bdf020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12b7b980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d12b7b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5d12b76690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5d12b76690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12c16aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d12c16aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12c12e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5d12c13950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12efe490"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d12efe490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12d8e7c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12ef5230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12ef2650"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d12d8e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d12d88020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12ef14b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d13c24980"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5d12eef1a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5d13c1cd90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5d12eee3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d12e8f9b0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5d12eee3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d12d915c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d12d915c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d12d8aca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d12e8f9b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d12e806a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5d12eed080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5d12e8c300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5d12e8c300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12e7f020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5d12eede00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12e8b020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12e8b020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12e7fcf0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12ee4b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12edc130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12cf7640"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d12eecc60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f5d12edcb90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d12c41390"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d12c41390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d12ee5470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f5d12ed75d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f5d12ed8660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f5d12ed9730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5d12e8aca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5d12e7dc90"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f5d12e89470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f5d12e7c4b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f5d12e7b020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b67220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5d12e6ad60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f5d13b68b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5d12e67080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5d13b22e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5d12e61370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f5d13b1d9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5d12e6a1e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f5d13ae5150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5d12e606e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d12dc1c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12dc1c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12e5f4e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12dc08f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12dc08f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d12e5c020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f5d12dbf2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d12dbf2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5d12e5c730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f5d12dbecc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5d12dbecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12e5ce60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12dbd370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12dbd370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12e5a5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12dbcd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12dbcd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12e5d6b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12db6c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12db6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12e5e020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12d9d7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12d9d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12e5ed80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12da22f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12da22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12e5ad00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12db7480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12db7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12e580c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12db3e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12db3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12e58990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12db2670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12db2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5d12e59930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f5d12db97b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5d12db97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12e56530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12d9fad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12d9fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d12e57380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5d12da12f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d12da12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d12e57bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f5d12da1ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d12da1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12e4f780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12d91df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12d91df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12d89550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12e77210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12e760c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5d12e74200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5d12d05550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5d12d05550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5d12cf6a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12e62570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12cfd480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12cfd480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12cee8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d12e55110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d12db4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5d12dbe020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d12db8c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5d12dabe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5d12db2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12d9e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5d12da6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5d12db7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5d12dac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5d12dafe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5d12db1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5d12dba370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d12da5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5d12dbaac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12da2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d12dbc060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5d12da8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d12db6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5d12dbf940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d12da9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5d12daa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d12da8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5d12dad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5d12daae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5d12da3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5d12db0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12d9ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5d12db8490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d12db4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5d12dace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5d12db1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5d12dab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5d12db3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5d12dbe670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12db9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5d12db9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5d12da32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5d12da4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12dbc6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d12da42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5d12d9f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d12dade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5d12da9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5d12dbd9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5d12db0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5d12daf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5d12da6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f5d12d8d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f5d12d887c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d12d73150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5d12d86020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5d13b22e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5d12d85380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f5d13b20090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5d12d846b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f5d13b1f390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5d12d83a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5d13ae4a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5d12d826e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d12c8c520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12c8c520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12d81530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12c69480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12c69480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12d80ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12c86060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12c86060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5d12d803a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f5d12c86d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5d12c86d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d7f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d7e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5d12d7cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5d12d05550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5d12d7eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c297e0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12d773e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12c7e840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12c7e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12d77cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12c7c060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12c7c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12d78b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12c85ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12c85ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12d756d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12c6ac60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12c6ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d12d76590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5d12c6cc60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5d12c6cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d12d76e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f5d12c6b480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5d12c6b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12d74020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12c6c480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12c6c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d12d748b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f5d12c8bc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5d12c8bc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f5d12d679d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5d12d01660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5d12cf2af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d12c99020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d13b4b080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5d12cec3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5d12c9bcf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5d12ceb6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5d140cda80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d12c940b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d12c7f620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5d12c8a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d12c82620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5d12c75840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5d12c7c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12c88cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5d12c71060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12c6dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5d12c81620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12c80620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5d12c77060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5d12c79840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5d12c7b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12c8b2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12c866b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d12c70480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5d12c85490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d12c879c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5d12c72840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d12c81e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12c82e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5d12c8a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d12c73840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5d12c74060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d12c72060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12c6a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5d12c78060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5d12c74840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5d12c6d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5d12c7a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5d12c84e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d12c80e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5d12c77840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5d12c7b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5d12c75060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5d12c7e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5d12c88020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5d12c847b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5d12c6ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5d12c6e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d12c70c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5d12c6bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d12c78840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5d12c73060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5d12c88670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5d12c87370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5d12c7a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5d12c84160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5d12c79060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5d12c71840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12c67160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12c2db40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5d12c33b50"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d12c2c8f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d12c30690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d12c30690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5d12c2b760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12c2a020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5d12c13200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5d12c0f570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5d12c0e3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5d12c13950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12c0ea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12bd5d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5d12bdf6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5d12bd4b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5d12bdf020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12bd32f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12bd2170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5d12bd2b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5d12b85410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f5d12ba6db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f5d12b78800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d12b74580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d12b74580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d12b60dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5d12b65d70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f5d12b5faf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d12b2a350"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5d12b2a350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f5d12b5d650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5d12b28750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5d12b28750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12b5e9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5d12d076e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12b58a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f5d12b542a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12f20dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12f027f0"/></to>
    </wire>
    <wire loc="22:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12b0f670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12f13080"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12b05c70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d12a2f990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133d0560"/></to>
    </wire>
    <wire loc="30:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f5d12a2e8b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f5d13dc3320"/></to>
    </wire>
    <wire loc="31:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7f5d12a2c260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7f5d13ec7580"/></to>
    </wire>
    <wire loc="32:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f5d12a2c9b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d134c2020"/></to>
    </wire>
    <wire loc="33:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d12a2b540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d13ecd800"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d129f0840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d11a762e0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f5d11a76ae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d129da5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d12960b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5d12960b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d129517c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5d129d6600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5d129bb300"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d129d5800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d129660d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d129d1800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12964a10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5d129d2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5d129666c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5d12960540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5d12951170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d129592b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d129c3300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5d129634a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d1295b790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5d12962120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d1295dc60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5d12954970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f5d126458c0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d1295b790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12822de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5d1295dc60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5d128226c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f5d12821c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5d12954970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d12946020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d129592b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d1281f920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d129592b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d12815cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d129592b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5d12820590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5d12947c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f5d12820e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f5d1294b720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5d12949020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5d1281ae00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5d12940860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d127f0080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d127f0080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d12658080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5d1280dd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5d127f0890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5d127f0890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5d1265e440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f5d128eb6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f5d129224f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f5d128efc70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5d128e8a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f5d1281c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f5d1281c800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5d127ee020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5d1265d440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5d1265d440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5d127d9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5d1265e440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5d127dc860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d1265c020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d126588e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12657020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1265f020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d1265f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d127de7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d1265fc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d119f95d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d119f95d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d126a1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d127d7450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d1265c020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d119f37c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d127dda30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5d127d81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d119fa880"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d119fa880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d126a3280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d127d61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d119f3020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d119f3020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5d126a4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d127dda30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d1276bdc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5d127d9020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5d12768890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5d127dc860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5d1276a6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d127de7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1276b020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d127663e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d127d7450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5d127675b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f5d127d81d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d127615b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d127d61d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5d12766a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d12751d30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d12751d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5d1274a550"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d12760020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5d126bd110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5d126bd110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5d1404f020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5d1275e120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d1274e860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5d12745130"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d12751500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d1274dbc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5d12745a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f5d142a7cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f5d12743990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f5d142a5cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5d12741990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f5d142a3cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f5d1273f990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f5d1429fcc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5d1273d990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f5d142a1cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d119f85a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d12751d30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d119f9d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d126a1d20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d126a1d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d12696060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d126a0af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d119f37c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d126a1510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d12698bd0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d12698bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d1198a3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f5d126a4510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5d1269e230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d126a3280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d12699e30"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5d12699e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5d1198c540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d12696060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d119898b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5d1269d2f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d1274e860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d12696930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d126a0af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d1269c120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d12696060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d1267b9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d12697400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d12697400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d1198ab20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d12691b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d12751500"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11988210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d12696930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5d119889d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5d1198e330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5d11986c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d119563a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d12691b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5d11956b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5d1267b400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d119540f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d1267b9d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d11954d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d12678720"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d1262c7f0"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d12625850"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f5d1262fa20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f5d12626020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d12624e20"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d133d1540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d12622600"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5d125d7020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5d1467b220"/></to>
    </wire>
    <wire loc="20:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f5d125d7650"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d125d6620"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d13ca1020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d125d6c80"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c33020"/></to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d125d53a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d1331d020"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5d125c8130"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5d13dc4080"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d125da8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13dc49e0"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d125da8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13f17bb0"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5d125da8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5d13ca36f0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f5d125c6980"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f5d11946ce0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f5d11945500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5d12516ca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f5d12541760"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5d12514df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5d12548870"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5d12548870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5d119360c0"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5d12513a90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5d12547590"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5d12547590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5d129d5e10"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f5d124f42a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f5d12516400"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5d12546270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5d129d2020"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5d125458f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d129d1800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d11936d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d125a2ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5d11935970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5d129d2020"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5d125a2ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5d12556580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5d12555400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5d129d6600"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5d12554060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5d129d2020"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5d12553720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5d129d5e10"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5d12552480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5d12552c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f5d1250dd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f5d124f3c00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f5d124f42a0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5d124e9b90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5d1467b220"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5d124e63c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5d129da5c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f5d14472110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af7910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f5d145cb890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f5d145cbc30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f5d145ca020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f5d145ca3a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f5d145ca720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f5d145caa90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f5d145cae20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f5d145c9200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f5d145c95d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f5d1458de70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f5d1458a270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f5d14280190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f5d14280540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f5d142808f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f5d14280ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f5d1427f060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5d1408c9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5d1408c9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5d1404a120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5d1404a120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5d14039a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5d14039a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5d14036290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5d14036290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5d14036680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5d14036680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5d14036e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5d14036e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5d14034260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f5d14034a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f5d14034a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5d1405aac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5d1405aac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5d140132d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5d140132d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5d140136c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5d140136c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5d14011020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5d14011020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5d140113f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d13fd44f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d13fd44f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d13fa3d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d13fa3d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5d13fa00d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d13f501f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d13f501f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5d136dd020" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f5d136d00d0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f5d136b47e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7f5d13275020" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f5d12af7910" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af7910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f5d12af7c80" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f5d12af0e00" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5d12af0e00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f5d12aed180" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f5d12ac7a50" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f5d12ac7a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f5d12ac7dd0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5d125bf8b0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5d125b85d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f5d1259b0d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f5d12543de0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f5d12543de0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f5d125401c0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f5d1467a720" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d1467a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d1467aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5d1467b220" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5d1467b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5d1467b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d1467e700" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d1467e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d1467ea80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5d14675740" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f5d14675740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d14675ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d14678910" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d14678910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d14678c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f5d14675060" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f5d14675060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d146753e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f5d14675e20" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f5d14675e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d146741c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d14677c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d14677c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d1466e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f5d14657020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f5d14657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d146573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5d1464d6c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5d1464d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5d14653660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5d1464dbd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5d1464dd60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5d14653020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5d1464da40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5d146531b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5d14653340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5d146534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d14654020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d14654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d146543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5d1463d3d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5d1463d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5d1463c340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5d1463d8e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5d1463da70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5d1463dc00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5d1463d750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5d1463dd90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5d1463c020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5d1463c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f5d1463c680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5d1463c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5d1463ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d1463fcb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d1463fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d1463d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f5d145f95a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f5d145f95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145f9920"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145f9ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145f9c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145f9dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145f8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145f81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145f8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145f84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f5d145e7020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f5d145e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145e73a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145e7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145e7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145e79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145e7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145e6020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f5d145f0700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f5d145f0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145f0a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145f0c10"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145f0da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145ef020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145ef1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f5d145d4a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f5d145d4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d3020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f5d145f7aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f5d145f7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145f7e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145f6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145f61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145f6340"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f5d145db020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f5d145db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145db3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145db530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145db6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145db850"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145db9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f5d145d1a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f5d145d1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d0020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f5d145e25a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f5d145e25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145e2920"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145e2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145e2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145e1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145e1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145e14d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f5d145fab10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f5d145fab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d14601020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d146011b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14601340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d146014d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d14601660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d146017f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d14601980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d14601b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d14601ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f5d145d6a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f5d145d6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d5020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f5d145dd3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f5d145dd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145dd760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145dd8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145dda80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145ddc10"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145ddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f5d145e65a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f5d145e65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145e6a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145e6bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e6d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145e5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145e51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145e54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145e5660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f5d145ef700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f5d145ef700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145efa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145efc10"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145efda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145e9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145e91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f5d145d3a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f5d145d3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d2020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f5d145e5be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f5d145e5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145e4020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145e41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145e44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145e4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145e4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145e4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145e4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f5d145f6890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f5d145f6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145f6c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145f6da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145f1020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145f11b0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f5d1460a060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f5d1460a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1460a3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1460a570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1460a700"/>
        <function-ref name="get" scoped="" ref="0x7f5d1460a890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1460aa20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1460abb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d1460ad40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14609020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d146091b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d14609340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d146094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f5d145dbda0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f5d145dbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d9180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145d9310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145d94a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145d9630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f5d146000c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f5d146000c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d14600440"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d146005d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14600760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d146008f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d14600a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14600c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d14600da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145f9020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f5d145e1a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f5d145e1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145e1dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145e0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145e0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145e04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145e07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145e0980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f5d145ea6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f5d145ea6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145eaa50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145eabe0"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145ead70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145f0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145f01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f5d145d5a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f5d145d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d4020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f5d145f2cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f5d145f2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145f70a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145f7230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145f73c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145f7550"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145f76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f5d145dc1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f5d145dc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145dc570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145dc700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145dc890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145dca20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145dcbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f5d145d2a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f5d145d2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d1020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f5d145e30c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f5d145e30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145e3440"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145e35d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e3760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145e38f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145e3a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e3c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145e3da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145e2020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f5d145e96c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f5d145e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d145e9a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d145e9bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145e9d60"/>
        <function-ref name="get" scoped="" ref="0x7f5d145e8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145e81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145e8340"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d145e84d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145e8660"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d145e87f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d145e8980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d145e8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f5d145d9b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f5d145d9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d8020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145d81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145d8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145d84d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f5d145d7a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f5d145d7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d145d6020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145d61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145d6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145d64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d145d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f5d145d8a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f5d145d8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145d7020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145d71b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145d7340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145d74d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f5d145de570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f5d145de570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145de8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d145dea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145dec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d145deda0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f5d145df020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f5d145df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145df3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145df530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145df6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145df850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145df9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145dfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145dfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145de020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5d14597aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5d14597aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14597e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5d14597450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5d14597450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d145977d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5d14596120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5d14596120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d145964a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5d14598d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d14598d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14597180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d14599540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14599540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d145998c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d14599a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14599be0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14599d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14598020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145981b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d14598340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145984d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14598660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d145987f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d14598980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5d14590940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5d14590940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14590cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5d145902f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5d145902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14590670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5d1458e020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5d1458e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d1458e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5d14591bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d14591bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14590020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d145923e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d145923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d14592760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d145928f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14592a80"/>
        <function-ref name="get" scoped="" ref="0x7f5d14592c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14592da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14591020"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d145911b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14591340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d145914d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d14591660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d145917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d14543a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d14543a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14543e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d14542020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145421b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14542340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145424d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d14542660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d1458b9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d1458b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d1458bd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d14545020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145451b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d14545340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145454d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14545660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145457f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d14545980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d14545b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d14540020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d14540020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d145403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d14545de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d14545de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14543180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d14543310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145434a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d14543630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145437c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d14542930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14542930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d14542cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d14542e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14541020"/>
        <function-ref name="get" scoped="" ref="0x7f5d145411b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14541340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145414d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d14541660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145417f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14541980"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d14541b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d14541ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d1453b160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d1453b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1453b4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d1453b670"/>
        <function-ref name="captured" scoped="" ref="0x7f5d1453b800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1453b990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1453bb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d1453bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d1453d020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d1453d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d1453d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d1453d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1453d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d1453d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d1453d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1453db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d1453dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d1453c020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d1453c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d145397a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d145397a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14539b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d1453c480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d1453c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1453c800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d1453c990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d1453cb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d1453ccb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1453ce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d1453a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d1453a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1453a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1453a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1453a6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1453a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1453a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1453ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d1453ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14539020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d145391b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d14539340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d145394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d145347a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d145347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14534b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d14534cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5d14534e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14532020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145321b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d14532340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d145366d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d145366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d14536a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d14536be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14536d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d14535020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145351b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14535340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145354d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d14535660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145357f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d14531c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d14531c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14530020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d14535ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d14535ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14535e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d14534020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145341b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d14534340"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145344d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d14532610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14532610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d14532990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d14532b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14532cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14532e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14531020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145311b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d14531340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145314d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14531660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d145317f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d14531980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d1452ccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d1452ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1452b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d1452b230"/>
        <function-ref name="captured" scoped="" ref="0x7f5d1452b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1452b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1452b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d1452b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d1452eb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d1452eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d1452d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d1452d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1452d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d1452d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d1452d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1452d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d1452d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d1452db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d1452dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d145292f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d145292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14529670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d1452c020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d1452c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1452c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d1452c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d1452c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d1452c850"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1452c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d1452bb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d1452bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1452a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1452a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1452a340"/>
        <function-ref name="get" scoped="" ref="0x7f5d1452a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1452a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1452a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d1452a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1452ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1452aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d1452ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d14529020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d145242f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d145242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14524670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d14524800"/>
        <function-ref name="captured" scoped="" ref="0x7f5d14524990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14524b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14524cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d14524e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d14526220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d14526220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d145265a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d14526730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d145268c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d14526a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d14526be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14526d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d14525020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d145251b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d14525340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d145217a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d145217a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14521b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d14525610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d14525610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14525990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d14525b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d14525cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d14525e40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d14524020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d14522160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14522160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d145224e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d14522670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14522800"/>
        <function-ref name="get" scoped="" ref="0x7f5d14522990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14522b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14522cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d14522e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14521020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d145211b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d14521340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d145214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d1451c7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d1451c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1451cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d1451ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5d1451ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1451b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1451b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d1451b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d1451e6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d1451e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d1451ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d1451ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1451ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d1451d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d1451d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1451d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d1451d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d1451d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d1451d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d1451ac50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d1451ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14519020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d1451dac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d1451dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1451de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d1451c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d1451c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d1451c340"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1451c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d1451b610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d1451b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1451b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1451bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1451bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1451be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1451a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1451a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d1451a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1451a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1451a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d1451a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d1451a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d14515cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d14515cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145140a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d14514230"/>
        <function-ref name="captured" scoped="" ref="0x7f5d145143c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14514550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145146e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d14514870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d14517b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d14517b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d14516020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d145161b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14516340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d145164d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d14516660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d145167f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d14516980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d14516b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d14516ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d145112f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d145112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14511670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d14515020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d14515020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d145153a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d14515530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145156c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d14515850"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145159e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d14514b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14514b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d14512020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d145121b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14512340"/>
        <function-ref name="get" scoped="" ref="0x7f5d145124d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14512660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145127f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d14512980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14512b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14512ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d14512e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d14511020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d1450c2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d1450c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1450c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d1450c800"/>
        <function-ref name="captured" scoped="" ref="0x7f5d1450c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1450cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1450ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d1450ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d1450e220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d1450e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d1450e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d1450e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1450e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d1450ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d1450ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1450ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d1450d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d1450d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d1450d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d1450a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d1450a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d1450ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d1450d610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d1450d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d1450d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d1450db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d1450dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d1450de40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1450c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d1450b160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d1450b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1450b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1450b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1450b800"/>
        <function-ref name="get" scoped="" ref="0x7f5d1450b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1450bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1450bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d1450be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1450a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1450a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d1450a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d1450a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d145057a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d145057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14505b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d14505cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5d14505e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14504020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145041b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d14504340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d145076d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d145076d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d14507a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d14507be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14507d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d14506020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d145061b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14506340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d145064d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d14506660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d145067f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d14502c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d14502c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d14501020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d14506ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d14506ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d14506e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d14505020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d145051b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d14505340"/>
        <function-ref name="fired" scoped="" ref="0x7f5d145054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d14504610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14504610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d14504990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d14504b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d14504cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14504e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d14502020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d145021b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d14502340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d145024d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14502660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d145027f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d14502980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d144fdcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d144fdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d144fc0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d144fc230"/>
        <function-ref name="captured" scoped="" ref="0x7f5d144fc3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d144fc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d144fc6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d144fc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5d144ffb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5d144ffb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d144fe020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d144fe1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d144fe340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d144fe4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d144fe660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d144fe7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d144fe980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d144feb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d144feca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5d144fa2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5d144fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d144fa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5d144fd020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5d144fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d144fd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d144fd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d144fd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d144fd850"/>
        <function-ref name="fired" scoped="" ref="0x7f5d144fd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d144fcb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d144fcb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d144fb020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d144fb1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d144fb340"/>
        <function-ref name="get" scoped="" ref="0x7f5d144fb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d144fb660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d144fb7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d144fb980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d144fbb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d144fbca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d144fbe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d144fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f5d144f4240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5d144f4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d144f45c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f5d144f8a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5d144f8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d144f8e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f5d144f5260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5d144f5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d144f55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f5d144f59f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5d144f59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d144f5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f5d147f54c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5d147f54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5d147f5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f5d14b0a3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f5d14b0a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f5d14b0a730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5d14b0a8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5d14b0aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f5d14931bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f5d14931bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5d14a6d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f5d14655b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5d14655b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5d144bcb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5d144bc1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5d144bc340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5d144bc4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5d144bc020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5d144bc660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5d144bc7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5d144bc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5d144b1dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5d144b1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d144af180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5d144bd590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5d144bd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5d144bd910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5d144b16c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f5d144b16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d144b1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5d144bdc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5d144bdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d144b1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5d144b11b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5d144b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5d14be2410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5d14be2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d14be2790"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d14be2920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5d14b733a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5d14b733a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d14b73720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5d14b738b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5d14b73a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5d1471b040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5d1471b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d1471b3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d1471b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f5d14715490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f5d14715490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f5d14715810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5d147159a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5d14715b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5d1471d140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5d1471d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d1471d4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5d1471d650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5d1471d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f5d144229f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f5d144229f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5d14422d70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5d14425020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5d144251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f5d1441b8b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d1441b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d1441bc30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d1441bdc0"/>
        <function-ref name="start" scoped="" ref="0x7f5d14421020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d144211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5d14459750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5d14459750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5d14459ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5d1439a7a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d1439a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1439ab20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d1439acb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d1439ae40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d143b1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d143b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5d143a35a0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d143a35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d143a3a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d143a3bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d143a3d40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d143f1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d143f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f5d143b2b50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f5d143b2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f5d1441a020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f5d1441a1b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f5d1441a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5d143bdb60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d143bdb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d14414020"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d144141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7f5d14415a20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7f5d14415a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f5d14415da0"/>
        <function-ref name="bind" scoped="" ref="0x7f5d1441f020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f5d1441f1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f5d1441f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f5d14367600" loc="241:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f5d14367600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d14367980"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d14367b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f5d14420d90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f5d14420d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d14424180"/>
        <function-ref name="stop" scoped="" ref="0x7f5d14424310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7f5d1443a820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7f5d1443a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d14438cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d14444300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d144380d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d14444c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d14437660"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d144371e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d14444780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d14458480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d144386e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d14458950"/>
        <function-ref name="stop" scoped="" ref="0x7f5d14458e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f5d143ae130" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d143ae130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d143ae4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d144450d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d144450d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d14445450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d144455e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d14445770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d14445900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d14445a90"/>
        <function-ref name="get" scoped="" ref="0x7f5d14445c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d14445db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d144594d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d14459020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d144591b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d14459340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f5d144266b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f5d144266b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f5d14426a30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d14430b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f5d14430ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f5d14430020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d144301b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f5d14430340"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d144304d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f5d14430660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f5d14426d50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f5d144307f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f5d14430980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f5d14426bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5d14437c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d14437c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d14432170"/>
        <function-ref name="fired" scoped="" ref="0x7f5d14435720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d14433510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d14433090"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d14432a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d144325f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d14435ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d144368a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d14433b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d14436d70"/>
        <function-ref name="stop" scoped="" ref="0x7f5d144352a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5d14358d50" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d14358d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d14355100"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d14355290"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d14355420"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d143555b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d14355740"/>
        <function-ref name="get" scoped="" ref="0x7f5d143558d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d14355a60"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d143541b0"/>
        <function-ref name="set" scoped="" ref="0x7f5d14355bf0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d14355d80"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d14354020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f5d14349ce0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5d14349ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1434e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1434e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1434e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1434e550"/>
        <function-ref name="get" scoped="" ref="0x7f5d1434e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1434e870"/>
        <function-ref name="set" scoped="" ref="0x7f5d1434ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1434eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d14351110" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d14351110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d14351490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f5d1434d020" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5d1434d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1434d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1434d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1434d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1434d850"/>
        <function-ref name="get" scoped="" ref="0x7f5d1434d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1434db70"/>
        <function-ref name="set" scoped="" ref="0x7f5d1434dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14348020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5d14351710" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d14351710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d14351a90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d14351c20"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d14351db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d14350020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d143501b0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14350340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d143504d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d14350b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14350660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d143507f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d14350980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f5d14348340" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5d14348340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d143486c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14348850"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143489e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14348b70"/>
        <function-ref name="get" scoped="" ref="0x7f5d14348d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14347020"/>
        <function-ref name="set" scoped="" ref="0x7f5d143471b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14347340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5d14352960" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5d14352960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14352ce0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14352e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1432b030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1432b1c0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1432b350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1432b4e0"/>
        <function-ref name="set" scoped="" ref="0x7f5d1432b670"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1432b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5d1432bb60" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5d1432bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1432a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1432a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1432a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1432a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1432a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1432a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d1432a980"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1432ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f5d14328020" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d14328020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d143283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5d1432ae70" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5d1432ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14329220"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d143293b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14329540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d143296d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14329860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d143299f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d14329b80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14329d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5d14313810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5d14313810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14313b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14313d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14312020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14312340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14312660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14312980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14312b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14312ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14312e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14311020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143112b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14311440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5d142ff810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5d142ff810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ffb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142ffd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142fe340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142fe660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142fe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142fe980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142feb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142feca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142fee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142fd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142fd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f5d142b5ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f5d142b5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142b4a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142b3020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142b3760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f5d14290cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f5d14290cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1428f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1428f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1428f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1428f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1428f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1428f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1428fa00"/>
        <function-ref name="get" scoped="" ref="0x7f5d1428fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1428fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1428e020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1428e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1428e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1428e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1428e760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1428e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f5d142b3cc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f5d142b3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142b2a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142b1020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142b1760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f5d142fb810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f5d142fb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142fbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142fbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142fa340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142fa660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142fa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142fa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142fab10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142faca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142fae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142f9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142f92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142f9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f5d142e69a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f5d142e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142e5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142e54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142e57f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142e5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142e5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142e5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142e4440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f5d142d29a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f5d142d29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142d2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142d1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142d11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142d1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142d14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142d1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142d17f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142d1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142d1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142d1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142d0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142d01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142d0440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142d05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f5d142c19a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f5d142c19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142c1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142c0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142c01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142c0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142c04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142c0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142c07f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142c0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142c0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142c0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142c0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142bf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142bf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142bf440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142bf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f5d142adcc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f5d142adcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142ac230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142ac3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142ac550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142ac6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142ac870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142aca00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142acb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142acd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142ab020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ab760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f5d1429dcb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f5d1429dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1429c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1429c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1429c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1429c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1429c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1429c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1429ca00"/>
        <function-ref name="get" scoped="" ref="0x7f5d1429cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1429cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1429b020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1429b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1429b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1429b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1429b760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1429b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f5d14288cc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f5d14288cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14287230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142873c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14287550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142876e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14287870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14287a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14287b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14287d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14286020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14286340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14286760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5d1430d810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5d1430d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1430db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1430dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1430c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1430c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1430c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1430c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1430c660"/>
        <function-ref name="get" scoped="" ref="0x7f5d1430c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1430c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1430cb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d1430cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1430ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1430b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1430b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1430b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f5d142abcc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f5d142abcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142aa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142aa230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142aa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142aa550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142aa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142aa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142aaa00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142aab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142aad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142a9020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142a9760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5d14309810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5d14309810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14309b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14309d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14308020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14308340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14308660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143087f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14308980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14308b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14308ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14308e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14307020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143072b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14307440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f5d142f4810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f5d142f4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142f4b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142f4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142f3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142f3660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142f37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142f3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142f3b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142f3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142f3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142f2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142f22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142f2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f5d142e09a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f5d142e09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142e0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142df020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142df1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142df340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142df4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142df660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142df7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142df980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142dfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142dfca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142dfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142de020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142de1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142de440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142de5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f5d142cc9a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f5d142cc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ccd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142cb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142cb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142cb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142cb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142cb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142cb7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142cb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142cbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142cbca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142cbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142ca020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ca1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ca440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ca5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f5d142bb9a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f5d142bb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142bbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142ba020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142ba4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142ba7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142bab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142baca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142bae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142b91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142b9440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142b95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5d14317810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5d14317810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14317b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14317d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14316020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14316340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14316660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14316980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14316b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14316ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14316e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14315020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143152b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14315440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5d14303810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5d14303810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14303c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14303e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14302020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14302340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14302660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143027f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14302980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14302b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14302ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14302e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14301020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143012b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14301440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f5d142ee810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f5d142ee810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142eeb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142eed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142ed340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142ed660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142ed7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142ed980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142edb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142edca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142ede30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ec020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ec2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ec440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f5d142b7cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f5d142b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142b6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142b63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142b6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142b66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142b6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142b6a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142b6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142b6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142b5020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142b5760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f5d14296cb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f5d14296cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14295230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142953c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14295550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142956e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14295870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14295a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14295b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14295d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14294020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14294340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14294760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f5d1428acb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f5d1428acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142890a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14289230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142893c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14289550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142896e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14289870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14289a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14289b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14289d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14288020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14288340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14288760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f5d142a3cc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f5d142a3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142a2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142a23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142a2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142a26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142a2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142a2a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142a2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142a2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142a1020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142a11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142a1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142a14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142a1760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f5d142ea810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f5d142ea810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ead90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142e97f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142e8440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f5d142d69a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f5d142d69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142d6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142d5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142d5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142d54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142d5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142d57f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142d5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142d5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142d5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142d5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142d4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142d41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142d4440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142d45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f5d142c59a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f5d142c59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142c5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142c4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142c41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142c4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142c44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142c4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142c47f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142c4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142c4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142c4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142c4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142c3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142c31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142c3440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142c35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f5d14294cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f5d14294cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14293230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142933c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14293550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142936e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14293870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14293a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14293b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14293d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14292020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14292340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14292760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f5d142a9cb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f5d142a9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142a80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142a8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142a83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142a8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142a86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142a8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142a8a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142a8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142a8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142a7020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142a7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142a74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142a7760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5d14311810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5d14311810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14311b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14311d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14310020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14310340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14310660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143107f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14310980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14310b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14310ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14310e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1430f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1430f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1430f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5d142fd810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5d142fd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142fdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142fdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142fc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142fc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142fc660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142fc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142fc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142fcb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142fcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142fce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142fb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142fb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142fb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f5d142ca9a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f5d142ca9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142cad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142c9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142c9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142c94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142c9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142c97f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142c9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142c9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142c9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142c9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142c8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142c81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142c8440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142c85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f5d142f9810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f5d142f9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142f9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142f9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142f8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142f81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142f8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142f8660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142f87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142f8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142f8b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142f8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142f8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142f7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142f72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f5d142e49a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f5d142e49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142e4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142e3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142e31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142e3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142e34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142e3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142e37f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142e3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142e3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142e3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142e2440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142e25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f5d142d09a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f5d142d09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142d0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142cf020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142cf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142cf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142cf7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142cf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142cfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142cfca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142cfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142ce020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ce1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ce440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ce5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f5d142bf9a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f5d142bf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142bfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142be020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142be1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142be340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142be4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142be660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142be7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142be980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142beb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142beca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142bee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142bd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142bd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142bd440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142bd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f5d142a5cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f5d142a5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142a40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142a4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142a43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142a4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142a46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142a4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142a4a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142a4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142a4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142a3020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142a31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142a3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142a34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142a3760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5d14319870" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5d14319870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14319bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14319d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14324020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14324340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14324660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14324980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14324b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14324ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14324e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14323020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143232b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14323440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5d14307810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5d14307810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14307b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14307d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14306020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14306340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14306660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143067f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14306980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14306b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14306ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14306e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14305020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143052b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14305440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f5d142f2810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f5d142f2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142f2b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142f2d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142f1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142f11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142f1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142f14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142f1660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142f17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142f1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142f1b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142f1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142f1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142f0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142f02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142f0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f5d142de9a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f5d142de9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ded20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142dd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142dd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142dd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142dd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142dd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142dd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142dd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142ddb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142ddca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142dde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142dc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142dc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142dc440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142dc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f5d142a1cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f5d142a1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142a00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142a0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142a03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142a0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142a06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142a0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142a0a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142a0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142a0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1429f020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1429f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1429f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1429f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1429f760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1429f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f5d1429bcb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f5d1429bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1429a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1429a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1429a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1429a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1429a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1429a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1429aa00"/>
        <function-ref name="get" scoped="" ref="0x7f5d1429ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1429ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14299020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14299340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14299760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f5d1428ecb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f5d1428ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1428d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1428d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1428d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1428d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1428d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1428d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1428da00"/>
        <function-ref name="get" scoped="" ref="0x7f5d1428db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1428dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1428c020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1428c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1428c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1428c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1428c760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1428c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f5d142da9a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f5d142da9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142dad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142d9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142d91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142d9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142d94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142d9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142d97f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142d9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142d9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142d9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142d9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142d8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142d81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142d8440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142d85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f5d1429fcc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f5d1429fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1429e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1429e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1429e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1429e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1429e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1429e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1429ea00"/>
        <function-ref name="get" scoped="" ref="0x7f5d1429eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1429ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1429d020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1429d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1429d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1429d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1429d760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1429d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5d14315810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5d14315810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14315b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14315d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14314020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14314340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14314660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143147f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14314980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14314b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14314ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14314e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14313020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143132b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14313440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5d14301810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5d14301810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14301b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14301d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14300020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143001b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14300340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143004d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14300660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143007f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14300980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14300b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14300ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14300e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ff020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ff2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ff440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f5d142ec810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f5d142ec810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ecb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142ecd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142eb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142eb660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142eb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142eb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142ebb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142ebca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142ebe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ea020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ea2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ea440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f5d142a7cc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f5d142a7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142a6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142a63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142a6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142a66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142a6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142a6a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142a6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142a6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142a5020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142a51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142a5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142a54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142a5760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f5d14292cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f5d14292cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14291230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142913c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14291550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142916e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14291870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14291a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14291b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14291d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14290020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14290340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14290760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f5d142e89a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f5d142e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142e8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142e77f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142e6440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f5d142d49a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f5d142d49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142d4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142d3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142d3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142d34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142d3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142d37f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142d3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142d3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142d3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142d3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142d2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142d21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142d2440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142d25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f5d142c39a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f5d142c39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142c3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142c2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142c21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142c2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142c24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142c2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142c27f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142c2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142c2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142c2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142c2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142c1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142c11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142c1440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142c15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5d1430f810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5d1430f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1430fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1430fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1430e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1430e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1430e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1430e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1430e660"/>
        <function-ref name="get" scoped="" ref="0x7f5d1430e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1430e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1430eb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d1430eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1430ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1430d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1430d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1430d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f5d142c89a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f5d142c89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142c8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142c6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142c61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142c6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142c64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142c6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142c67f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142c6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142c6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142c6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142c6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142c5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142c51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142c5440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142c55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5d1430b810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5d1430b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1430bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1430bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1430a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1430a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1430a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1430a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1430a660"/>
        <function-ref name="get" scoped="" ref="0x7f5d1430a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1430a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1430ab10"/>
        <function-ref name="set" scoped="" ref="0x7f5d1430aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1430ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14309020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143092b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14309440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f5d142f7810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f5d142f7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142f7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142f7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142f5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142f5660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142f57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142f5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142f5b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142f5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142f5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142f4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142f42b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142f4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f5d142e29a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f5d142e29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142e2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142e1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142e14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142e17f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142e1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142e1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142e1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142e1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142e0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142e01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142e0440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142e05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f5d142ce9a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f5d142ce9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ced20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142cd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142cd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142cd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142cd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142cd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142cd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142cdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142cdca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142cde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142cc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142cc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142cc440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142cc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f5d142bd9a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f5d142bd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142bdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142bc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142bc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142bc7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142bc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142bcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142bcca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142bce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142bb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142bb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142bb440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142bb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5d14323810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5d14323810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14323b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14323d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14318020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14318340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14318660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14318980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14318b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14318ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14318e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14317020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143172b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14317440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5d14305810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5d14305810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14305b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14305d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14304020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d143041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14304340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d143044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14304660"/>
        <function-ref name="get" scoped="" ref="0x7f5d143047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14304980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14304b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d14304ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14304e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14303020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d143032b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14303440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f5d142f0810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f5d142f0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142f0b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142f0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142ef340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142ef660"/>
        <function-ref name="get" scoped="" ref="0x7f5d142ef7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142ef980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142efb10"/>
        <function-ref name="set" scoped="" ref="0x7f5d142efca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142efe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ee020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ee2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ee440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f5d142dc9a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f5d142dc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142dcd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142db020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142db340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142db4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142db7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142db980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142dbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142dbca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142dbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142da020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142da1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142da440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142da5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f5d142afca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f5d142afca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142ae230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142ae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142ae550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142ae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142ae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142aea00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142aeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142aed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142ad020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142ad760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f5d14299cb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f5d14299cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14297230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142973c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14297550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142976e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14297870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14297a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14297b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14297d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14296020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14296340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14296760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f5d142b1cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f5d142b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142b0a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d142b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142af020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142af760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f5d142d89a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f5d142d89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142d8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142d7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142d7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142d74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142d7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142d77f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d142d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142d7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142d7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d142d7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142d6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142d61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142d6440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142d65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f5d1428ccb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f5d1428ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1428b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1428b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1428b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1428b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1428b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1428b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1428ba00"/>
        <function-ref name="get" scoped="" ref="0x7f5d1428bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1428bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1428a020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1428a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1428a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1428a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1428a760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1428a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f5d14286cc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f5d14286cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14285230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142853c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14285550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142856e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14285870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14285a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d14285b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14285d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14284020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14284340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14284760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f5d142b99f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f5d142b99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142b81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d142b8350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142b84e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d142b8670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142b8800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142b8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142b8b20"/>
        <function-ref name="get" scoped="" ref="0x7f5d142b8cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142b8e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d142b7020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d142b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d142b7760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14281d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14281d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1425a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1425a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1425a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1425a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1425a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1425a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1425aa40"/>
        <function-ref name="get" scoped="" ref="0x7f5d1425abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1425ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14259020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14259340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14259760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14256740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14256740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14256ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14256c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14256de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14255020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142551b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14255340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142554d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14255660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142557f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14255980"/>
        <function-ref name="set" scoped="" ref="0x7f5d14255b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14255ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14255e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14254120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14251100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14251100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14251480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14251610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142517a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14251930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14251ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14251c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14251de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14250020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14250340"/>
        <function-ref name="set" scoped="" ref="0x7f5d142504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14250660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14250a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14250c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1424dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1424dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1424b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1424b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1424b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1424b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1424b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1424b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1424ba40"/>
        <function-ref name="get" scoped="" ref="0x7f5d1424bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1424bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1424a020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1424a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1424a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1424a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1424a760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1424a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14247740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14247740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14247ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14247c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14247de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14246020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14246340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142464d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14246660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14246980"/>
        <function-ref name="set" scoped="" ref="0x7f5d14246b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14246ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14246e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14245120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14242100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14242100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14242480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14242610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142427a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14242930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14242ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14242c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14242de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14241020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14241340"/>
        <function-ref name="set" scoped="" ref="0x7f5d142414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14241660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14241a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14241c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1423ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1423ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1423d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1423d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1423d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1423d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1423d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1423d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1423da40"/>
        <function-ref name="get" scoped="" ref="0x7f5d1423dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1423dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1423c020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1423c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1423c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1423c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1423c760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1423c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14239740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14239740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14239ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14239c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14239de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14238020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14238340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d142384d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14238660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142387f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14238980"/>
        <function-ref name="set" scoped="" ref="0x7f5d14238b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14238ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14238e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14237120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14234100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14234100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14234480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14234610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142347a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14234930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14234ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14234c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14234de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14233020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142331b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14233340"/>
        <function-ref name="set" scoped="" ref="0x7f5d142334d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14233660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142337f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14233a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14233c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14230d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14230d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1422f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1422f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1422f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1422f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1422f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1422f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1422fa40"/>
        <function-ref name="get" scoped="" ref="0x7f5d1422fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1422fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1422e020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1422e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1422e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1422e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1422e760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1422e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1422b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1422b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1422bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1422bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1422bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1422a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1422a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1422a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1422a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1422a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1422a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1422a980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1422ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1422aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1422ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14229120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14226100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14226100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14226480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14226610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142267a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14226930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14226ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14226c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14226de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14224020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14224340"/>
        <function-ref name="set" scoped="" ref="0x7f5d142244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14224660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14224a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14224c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14221d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14221d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14220180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14220310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142204a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14220630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d142207c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14220950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14220ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14220c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14220e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1421f020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1421f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1421f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1421f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1421f760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1421f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1421c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1421c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1421cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1421cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1421cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1421b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1421b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1421b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1421b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1421b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1421b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1421b980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1421bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1421bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1421be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1421a120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1421a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14217100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14217100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14217480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14217610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142177a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14217930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14217ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14217c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14217de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14216020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14216340"/>
        <function-ref name="set" scoped="" ref="0x7f5d142164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14216660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14216a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14216c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14213d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14213d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142120e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14212270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14212400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14212590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14212720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142128b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14212a40"/>
        <function-ref name="get" scoped="" ref="0x7f5d14212bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14212d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14211020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14211340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14211760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1420e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1420e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1420eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1420ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1420ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1420d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1420d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1420d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1420d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1420d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1420d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1420d980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1420db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1420dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1420de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1420c120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1420c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14209100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14209100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14209480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14209610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d142097a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14209930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14209ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14209c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14209de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14208020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d142081b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14208340"/>
        <function-ref name="set" scoped="" ref="0x7f5d142084d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14208660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142087f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14208a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14208c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14205d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14205d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d142040e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14204270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14204400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14204590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14204720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d142048b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14204a40"/>
        <function-ref name="get" scoped="" ref="0x7f5d14204bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14204d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14203020"/>
        <function-ref name="set" scoped="" ref="0x7f5d142031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14203340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d142034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14203760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d142038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141ff740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141ffac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141ffc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141ffde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141fe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141fe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141fe980"/>
        <function-ref name="set" scoped="" ref="0x7f5d141feb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141feca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141fee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141fd120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141fa100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141fa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141fa480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141fa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141fa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141fa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141faac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141fac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141fade0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141f9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141f91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141f9340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141f94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141f9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141f97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141f9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141f9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141f6d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141f6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141f50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141f5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141f5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141f5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141f5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141f58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141f5a40"/>
        <function-ref name="get" scoped="" ref="0x7f5d141f5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141f5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141f4020"/>
        <function-ref name="set" scoped="" ref="0x7f5d141f41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141f4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141f44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141f4760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141f48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141f1740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141f1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141f1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141f1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141f1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141f01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141f0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141f04d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141f0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141f07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141f0980"/>
        <function-ref name="set" scoped="" ref="0x7f5d141f0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141f0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141f0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141ef120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141ec100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141ec480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141ec610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141ec7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141ec930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141ecac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141ecc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141ecde0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141eb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141eb340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141eb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141eb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141eb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141eba80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141e8e60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141e8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141e7210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141e73a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141e7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141e76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141e7850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141e79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141e7b70"/>
        <function-ref name="get" scoped="" ref="0x7f5d141e7d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141e6020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141e61b0"/>
        <function-ref name="set" scoped="" ref="0x7f5d141e6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141e64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141e6660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141e68f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141e6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141e39f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141e39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141e3d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141e2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141e21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141e2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141e24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141e2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141e27f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141e2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141e2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141e2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d141e2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141e1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141e11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141e1440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141e15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141de460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141de460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141de7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141de970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141deb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141dec90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141dee20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141dc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141dc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141dc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141dc660"/>
        <function-ref name="set" scoped="" ref="0x7f5d141dc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141dc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141dcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141dcda0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141d9e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141d9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141d81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141d8350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141d84e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141d8670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141d8800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141d8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141d8b20"/>
        <function-ref name="get" scoped="" ref="0x7f5d141d8cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141d8e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141d7020"/>
        <function-ref name="set" scoped="" ref="0x7f5d141d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141d7760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141d4740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141d4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141d4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141d4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141d34d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141d3980"/>
        <function-ref name="set" scoped="" ref="0x7f5d141d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141d2120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141cf100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141cf480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141cf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141cf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141cf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141cfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141cfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141cfde0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141ce340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141cea80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141cbd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141cbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141ca0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141ca270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141ca400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141ca590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141ca720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141ca8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141caa40"/>
        <function-ref name="get" scoped="" ref="0x7f5d141cabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141cad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141c9020"/>
        <function-ref name="set" scoped="" ref="0x7f5d141c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141c9760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141c6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141c6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141c6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141c6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141c51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141c5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141c54d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141c5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141c57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141c5980"/>
        <function-ref name="set" scoped="" ref="0x7f5d141c5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141c5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141c5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141c4120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141c1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141c1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141c1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141c17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141c1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141c1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141c1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141c1de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141c0340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141c0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141bdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141bdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141bc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141bc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141bc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141bc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141bc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141bc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141bca40"/>
        <function-ref name="get" scoped="" ref="0x7f5d141bcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141bcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141bb020"/>
        <function-ref name="set" scoped="" ref="0x7f5d141bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141bb760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141b8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141b8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141b8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141b8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141b8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141b64d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141b6980"/>
        <function-ref name="set" scoped="" ref="0x7f5d141b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141b5120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141b2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141b2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141b2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141b27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141b2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141b2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141b2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141b2de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141b1340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141aed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141ad400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141ada40"/>
        <function-ref name="get" scoped="" ref="0x7f5d141adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141add60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141ac020"/>
        <function-ref name="set" scoped="" ref="0x7f5d141ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141ac760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141a9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141a9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141a9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141a9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141a84d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141a8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141a8980"/>
        <function-ref name="set" scoped="" ref="0x7f5d141a8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141a8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141a8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141a7120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141a4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141a4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d141a4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141a47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141a4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d141a4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141a4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d141a4de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d141a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141a3340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d141a3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d141a0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d141a0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1419f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1419f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1419f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1419f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1419f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1419f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1419fa40"/>
        <function-ref name="get" scoped="" ref="0x7f5d1419fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1419fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1419e020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1419e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1419e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1419e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1419e760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1419e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1419b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1419b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1419bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1419bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1419bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1419a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1419a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1419a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1419a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1419a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1419a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1419a980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1419ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1419aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1419ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14199120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14196100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14196100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14196480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14196610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141967a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14196930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14196ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14196c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14196de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14195020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14195340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14195660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14195a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14195c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14191d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14191d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14190270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14190400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14190590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14190720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14190a40"/>
        <function-ref name="get" scoped="" ref="0x7f5d14190bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14190d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1418f020"/>
        <function-ref name="set" scoped="" ref="0x7f5d1418f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1418f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1418f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1418f760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1418f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1418c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1418c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1418cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1418cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1418cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1418b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1418b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1418b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1418b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1418b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1418b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1418b980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1418bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1418bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1418be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1418a120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1418a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14187100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14187100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14187480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14187610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141877a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14187930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14187ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14187c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14187de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14186020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14186340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14186660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14186a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14186c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14183d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14183d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141820e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14182270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14182400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14182590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14182720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d141828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14182a40"/>
        <function-ref name="get" scoped="" ref="0x7f5d14182bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14182d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14181020"/>
        <function-ref name="set" scoped="" ref="0x7f5d141811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14181340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14181760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d141818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d1417e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d1417e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1417eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1417ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1417ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1417d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1417d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1417d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1417d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1417d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1417d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1417d980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1417db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1417dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1417de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1417c120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1417c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5d14179100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5d14179100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14179480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14179610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d141797a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14179930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14179ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14179c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14179de0"/>
        <function-ref name="get" scoped="" ref="0x7f5d14178020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d141781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d14178340"/>
        <function-ref name="set" scoped="" ref="0x7f5d141784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d14178660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d141787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14178a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14178c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d141012f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d141012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d14101670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14101800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d14101990"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d14101b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14101cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d14101e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14100020"/>
        <function-ref name="get" scoped="" ref="0x7f5d141001b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d14100340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d141004d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d14100660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d141007f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d14100980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d14100c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14100da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d14112020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d14112020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d141123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d14112530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d141126c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d14112850"/>
        <function-ref name="get" scoped="" ref="0x7f5d141129e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d14112b70"/>
        <function-ref name="set" scoped="" ref="0x7f5d14112d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5d14101020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d140fcde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d140fcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d140fb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d140fb310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d140fb4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d140fb630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d140fb7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d140fb950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d140fbae0"/>
        <function-ref name="get" scoped="" ref="0x7f5d140fbc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d140fbe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d140fa020"/>
        <function-ref name="set" scoped="" ref="0x7f5d140fa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d140fa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d140fa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d140fa760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d140fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d140fdb90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d140fdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d140fc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d140fc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d140fc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d140fc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d140fc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d140fc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d140fc980"/>
        <function-ref name="clr" scoped="" ref="0x7f5d140fcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d140f7930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d140f7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d140f7cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d140f7e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d140f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d140f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d140f6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d140f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d140f6660"/>
        <function-ref name="get" scoped="" ref="0x7f5d140f67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d140f6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d140f6b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d140f6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d140f6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d140f5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d140f52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d140f5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d140f8710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d140f8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d140f8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d140f8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d140f8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d140f7020"/>
        <function-ref name="get" scoped="" ref="0x7f5d140f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d140f7340"/>
        <function-ref name="set" scoped="" ref="0x7f5d140f74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d140f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d140e9640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d140e9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13f3cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13f3d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13f3c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13f3dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13f3b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13f3b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13f3d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13f3e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13f3c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13f3e860"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13f3ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5d140e0610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140e0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d140dcc40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d140dd1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d140dc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d140ddae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d140db590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d140db110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d140dd660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d140df390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d140dc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d140df860"/>
        <function-ref name="stop" scoped="" ref="0x7f5d140dfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5d140d61d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f5d140d61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d140d2630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d140d5c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d140d49d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d140d4550"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d140d1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d140d2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d140d40d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d140d6dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d140d2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d140d52e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d140d57b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5d140cda80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5d140cda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d140d06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d140d7400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d140d7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d140d7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d13fda020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d13fda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13fd8870"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13fd9840"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d13fd8220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13fd9d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d13fd8d30"/>
        <function-ref name="start" scoped="" ref="0x7f5d13fdae30"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13fd9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13fdc760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13fdc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13fdcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d12011ce0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d12011ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d1200d670"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1200f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d1200d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d1200fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d1200db30"/>
        <function-ref name="start" scoped="" ref="0x7f5d12010b60"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1200f090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12011490" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12011490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d12011810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5d11ff75d0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11ff75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d11ff7950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d11ff7ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d11ff7c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d11ff7e00"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11ff6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5d11ffbc50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11ffbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d11ffa020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d11ffa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11ffa340"/>
        <function-ref name="get" scoped="" ref="0x7f5d11ffa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11ffa660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d11ffa7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d11ffa980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d11ffab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d11ffaca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d11ffae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d11ff9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5d11ff92b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11ff92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d11ff9630"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d11ff97c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11ff9950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d11ff9ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d11ff9c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11ff9e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d11ff7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d11ff71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d11ff7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5d140aaba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d140aaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d140a9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d140a91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d140a9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d140a94d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d140a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5d140ae4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d140ae4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d140ae850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d140ae9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d140aeb70"/>
        <function-ref name="get" scoped="" ref="0x7f5d140aed00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d140ad020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d140ad1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d140ad340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d140ad4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d140ad660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d140ad7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d140ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5d140ab280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d140ab280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d140ab600"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d140ab790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d140ab920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d140abab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d140abc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d140abdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d140aa020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d140aa1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d140aa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f5d11fed440" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11fed440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d11fed7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d11fed950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d11fedae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d11fedc70"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11fede00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5d11ff1910" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11ff1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d11ff1c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d11ff1e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11fef020"/>
        <function-ref name="get" scoped="" ref="0x7f5d11fef1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11fef340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d11fef4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d11fef660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d11fef7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d11fef980"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d11fefb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d11fefca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d11ff4720" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d11ff4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d11ff1020"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11ff2020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d11ff29a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d11ff24e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d11ff14e0"/>
        <function-ref name="start" scoped="" ref="0x7f5d11ff35b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d11ff3ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11ff5e60" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11ff5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11ff4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5d11fee020" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11fee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d11fee3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d11fee530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11fee6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d11fee850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d11fee9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11feeb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d11feed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d11fed020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d11fed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5d14059020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d14059020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d14059e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14058800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14058340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14058cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f5d1404f020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5d1404f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d1404fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1404e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1404e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1404ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5d1403c2c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d1403c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1403c640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1403c7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d1403c960"/>
        <function-ref name="get" scoped="" ref="0x7f5d1403caf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d1403cc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1403ce10"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d1403b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1403b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1403b340"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d1403b4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d1403b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5d1403e0a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d1403e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d1403d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1403d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1403d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1403de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5d1401a540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5d1401a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d140193d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d14019d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d14019890"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d14017260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5d1401d0f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d1401d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d1401b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1401b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1401b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1401be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d1200a140" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d1200a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12008b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5d120099f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d120084e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12008020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d12007020"/>
        <function-ref name="start" scoped="" ref="0x7f5d12009020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12009530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f5d12004b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f5d12004b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d120014e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d120024e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d12002e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d120029a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d120019a0"/>
        <function-ref name="start" scoped="" ref="0x7f5d120039d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12002020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5d12007690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d12007690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d120055b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d12004020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d12005a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d120044e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f5d13fa5490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f5d13fa5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13fa5810"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13fa59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5d13fa91d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d13fa91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13fa7b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13fa89f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d13fa74e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13fa7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d13fa5020"/>
        <function-ref name="start" scoped="" ref="0x7f5d13fa8020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13fa8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d13fafcf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d13fafcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13faa220"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13fad7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13fac590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13fac110"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13faab20"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13faa6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13fadc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13fae940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13facba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13faee10"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13fad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f5d13f55e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f5d13f55e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13f54220"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13f543b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f5d13f5ac30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f5d13f5ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13f55110"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13f586a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13f564a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13f56020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13f55a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13f55590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13f58b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13f59860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13f56ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13f59d30"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13f58220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d13f60690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d13f60690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13f5ccf0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13f5d260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13f5c090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13f5dba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13f5a680"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13f5a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13f5d700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13f5f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13f5c6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13f5f880"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13f5fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5d13f52cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5d13f52cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d13f51980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5d13f47020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d13f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d13f47e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d13f45800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d13f45340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d13f45cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d13f38020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d13f38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13f35630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13f37a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13f36920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13f364a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13f33020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13f35ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13f36020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13f38c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13f35020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13f37110"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13f375e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5d13f2f4e0" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d13f2f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d13f2f860"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d13f2f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5d13f2c370" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f5d13f2c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13f2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13f324f0" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13f324f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13f32870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5d13f284e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d13f284e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d13f28860"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d13f289f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5d13f29390" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f5d13f29390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13f28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13f2ea90" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13f2ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13f2ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7f5d13f0ae60" loc="72:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7f5d13f0ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f5d13f18210"/>
        <function-ref name="isRoot" scoped="" ref="0x7f5d13f183a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f5d13f18530"/>
        <function-ref name="hasParent" scoped="" ref="0x7f5d13f186c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d13f18850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f5d13f189e0"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13f18b70"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5d13f18d00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f5d13f17020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f5d13f171b0"/>
        <function-ref name="isParent" scoped="" ref="0x7f5d13f17340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f5d13f174d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d13f17660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f5d13f178f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f5d13f09a80" loc="76:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f5d13f09a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13f09e00"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13f08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d13f17bb0" loc="73:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d13f17bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13f09020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13f091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f5d13f143b0" loc="71:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f5d13f143b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13f14730"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13f148c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7f5d13ead720" loc="91:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d13ead720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f5d13eadaa0"/>
        <function-ref name="initiate" scoped="" ref="0x7f5d13eadc30"/>
        <function-ref name="linkResult" scoped="" ref="0x7f5d13eaddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d13eb9a50" loc="89:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d13eb9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d13eb9dd0"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13ec0020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d13ec01b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d13ec0340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d13ec04d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d13ec0660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d13ec07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f5d13ec7c70" loc="86:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f5d13ec7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13ec9020"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13ec91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f5d13e9c8a0" loc="93:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d13e9c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f5d13eab660"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f5d13e9cdb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f5d13eab020"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f5d13eab1b0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f5d13eab340"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f5d13e9cc20"/>
        <function-ref name="getContext" scoped="" ref="0x7f5d13eab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f5d13ea55f0" loc="92:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f5d13ea55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5d13ea5970"/>
        <function-ref name="OCP" scoped="" ref="0x7f5d13ea5b00"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f5d13ea5c90"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13ea5e20"/>
        <function-ref name="resetRank" scoped="" ref="0x7f5d13eb0020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f5d13eb01b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f5d13eb0340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f5d13eb04d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f5d13eb0660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f5d13eb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7f5d13ecd800" loc="80:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d13ecd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f5d13ecdb80"/>
        <function-ref name="isRoot" scoped="" ref="0x7f5d13ecdd10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f5d13ecc020"/>
        <function-ref name="hasParent" scoped="" ref="0x7f5d13ecc1b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d13ecc340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f5d13ecc4d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13ecc660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5d13ecc7f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f5d13ecc980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f5d13eccb10"/>
        <function-ref name="isParent" scoped="" ref="0x7f5d13eccca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f5d13ecce30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d13ecb020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f5d13ecb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7f5d13ec7580" loc="83:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7f5d13ec7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d13ec7900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7f5d13ec8760" loc="88:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7f5d13ec8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f5d13ec8ae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d13ec6b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f5d13ec6ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f5d13ec6020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d13ec61b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f5d13ec6340"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13ec64d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f5d13ec6660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f5d13ec8e00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f5d13ec67f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f5d13ec6980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f5d13ec8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f5d13eb2580" loc="90:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d13eb2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f5d13eb2900"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f5d13eb2a90"/>
        <function-ref name="delRoute" scoped="" ref="0x7f5d13eb2c20"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f5d13eb2db0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f5d13ebf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f5d13ec2cc0" loc="87:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f5d13ec2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f5d13ec80a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f5d13ec8230"/>
        <function-ref name="findTLV" scoped="" ref="0x7f5d13ec83c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7f5d13e51380" loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7f5d13e51380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13e51800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13e51990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d13ecb570" loc="81:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d13ecb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13ecb8f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13ecba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f5d13ecbdc0" loc="82:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f5d13ecbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13eca180"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13eca310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f5d13dc4080" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f5d13dc4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5d13dc4400"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5d13dc4590"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5d13dc4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7f5d13dc3320" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f5d13dc3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f5d13dc36a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d13dc2670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f5d13dc2800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f5d13dc3b50"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d13dc3ce0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f5d13dc3e70"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13dc2030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f5d13dc21c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f5d13dc39c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f5d13dc2350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f5d13dc24e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f5d13dc3830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d13dc49e0" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d13dc49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13dc4d60"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13dc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f5d13cde880" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f5d13cde880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5d13cdec00"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5d13cded90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5d13cdd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7f5d13cdbab0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7f5d13cdbab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13cdbe30"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13cda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7f5d13cc6a10" loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d13cc6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f5d13cc5020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f5d13cc51b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f5d13cc5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7f5d13cc3ac0" loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7f5d13cc3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13cc3e40"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13cc2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7f5d13cd5730" loc="56:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7f5d13cd5730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13cd1c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13cd21e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13cd1020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13cd2ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13cd0590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13cd0110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13cd2660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13cd3390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13cd1630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13cd3860"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cd3d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5d13ccbe00" loc="58:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d13ccbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d13cc91c0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d13cc9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f5d13cda3d0" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7f5d13cda3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13cd6870"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13cd8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13cd7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13cd7780"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13cd51e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13cd6cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13cd7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13cd8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13cd6260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13cd84f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cd89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f5d13cc2ad0" loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7f5d13cc2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13cc2e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13cc1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d13cc7270" loc="60:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d13cc7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d13cc75f0"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13cc7780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d13cc7910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d13cc7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d13cc7c30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d13cc7dc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d13cc6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7f5d13cc12f0" loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7f5d13cc12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13cc1670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13cc1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f5d13cdb310" loc="52:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f5d13cdb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13cdb690"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13cdb820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f5d13cc4a40" loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d13cc4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7f5d13cc37f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f5d13cc3020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f5d13cc31b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f5d13cc3340"/>
        <function-ref name="matchContext" scoped="" ref="0x7f5d13cc34d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7f5d13cc4dc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f5d13cc3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f5d13cc95e0" loc="59:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d13cc95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f5d13cc9960"/>
        <function-ref name="isRoot" scoped="" ref="0x7f5d13cc9af0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f5d13cc9c80"/>
        <function-ref name="hasParent" scoped="" ref="0x7f5d13cc9e10"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d13cc8020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f5d13cc81b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13cc8340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5d13cc84d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f5d13cc8660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f5d13cc87f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f5d13cc8980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f5d13cc8b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d13cc8ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f5d13cc7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f5d13cc5590" loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f5d13cc5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5d13cc5910"/>
        <function-ref name="OCP" scoped="" ref="0x7f5d13cc5aa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f5d13cc5c30"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13cc5dc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7f5d13cc4020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f5d13cc41b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f5d13cc4340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f5d13cc44d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f5d13cc4660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f5d13cc47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7f5d13cc22f0" loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7f5d13cc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13cc2670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13cc2800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7f5d13cc1ad0" loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7f5d13cc1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13cc1e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13cbf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7f5d13cd0ae0" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f5d13cd0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13ccb110"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ccd5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13ccc4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13ccc020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13ccba10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13ccb590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13ccda30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13cce750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13cccab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13ccec20"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13ccd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7f5d13cdda10" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f5d13cdda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f5d13cddd90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f5d13cdce30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f5d13cdb020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f5d13cdc340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d13cdc4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f5d13cdc660"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d13cdc7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f5d13cdc980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f5d13cdcb10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f5d13cdcca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d13cdc020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f5d13cdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7f5d13cc62b0" loc="61:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7f5d13cc62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13cc6630"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cc67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d13cdd270" loc="48:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d13cdd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13cdd5f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cdd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d13cb9140" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d13cb9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13cb6630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13cb8b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13cb7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13cb74a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13cb4020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13cb6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13cb7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13cb9d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13cb6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13cb8220"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cb86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d13cb3b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d13cb3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13cae110"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13cb15b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13cb04a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13cb0020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13caea10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13cae590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13cb1a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13cb2750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13cb0ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13cb2c20"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cb1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d13cac4e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d13cac4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13ca8a20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13caa020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13caada0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13caa920"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13ca74a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13ca7020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13caa4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13cab110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13ca8410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13cab5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13cabab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f5d13ca68d0" loc="30:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d13ca68d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d13ca6c50"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13ca6de0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d13ca2020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d13ca21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d13ca2340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d13ca24d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d13ca2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f5d13ca1020" loc="31:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d13ca1020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f5d13ca13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f5d13c96800" loc="36:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13c96800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f5d13c96b80"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13c96d10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13c9a020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13c9a1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13c9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f5d13c9d020" loc="32:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d13c9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d13c9d3a0"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13c9d530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d13c9d6c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d13c9d850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d13c9d9e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d13c9db70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d13c9dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f5d13c9c4a0" loc="33:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d13c9c4a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f5d13c9c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f5d13ca0690" loc="3:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13ca0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f5d13ca0a10"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13ca0ba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13ca0d30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13c59020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13c591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f5d13c55da0" loc="8:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c55da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5d13c54180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5d13c46b80" loc="10:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c46b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5d13c53020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5d13c531b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5d13c53340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5d13c534d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5d13c53660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13c537f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5d13c53980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5d13c53b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5d13c53ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5d13c53e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13c51020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13c511b0"/>
        <function-ref name="sync" scoped="" ref="0x7f5d13c51340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5d13c515d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5d13c51760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f5d13c56300" loc="5:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13c56300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f5d13c56680"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13c56810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13c569a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13c56b30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13c56cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13c59c50" loc="4:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13c59c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13c56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f5d13c33020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5d13c333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5d13c297e0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5d13c29b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5d13c29cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5d13c29e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5d13c28030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5d13c281c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13c28350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5d13c284e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5d13c28670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5d13c28800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5d13c28990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13c28b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13c28cb0"/>
        <function-ref name="sync" scoped="" ref="0x7f5d13c28e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5d13c23120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5d13c232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5d13c1a1b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5d13c1a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13c1ada0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d13c18260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5d13c1cd90" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5d13c1cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5d13c22180"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5d13c22310"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5d13c224a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5d13c22630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5d13c227c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5d13c22950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5d13c22ae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5d13c22c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d13c24980" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d13c24980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13c24d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13c29020"/>
        <function-ref name="request" scoped="" ref="0x7f5d13c291b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13c29340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13c294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5d13c149f0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5d13c149f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5d13c14d70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5d13c13020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5d13c131b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5d13c13340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5d13c134d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13c13660"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5d13c137f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5d13c13980"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5d13c13b10"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5d13c13ca0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13c13e30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13c12020"/>
        <function-ref name="sync" scoped="" ref="0x7f5d13c121b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5d13c12440"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5d13c125d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f5d13bf48e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13bf48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf4c60"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bf4df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f5d13c0f450" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d13c0f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5d13c0f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f5d13c0fe40" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f5d13c0fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13c0b6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13c0c6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d13c0b090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13c0cb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d13c0bba0"/>
        <function-ref name="start" scoped="" ref="0x7f5d13c0dca0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13c0c1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f5d13bf75f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13bf75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf7970"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bf7b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f5d13c09380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5d13c09380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13c09700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13c09890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13c09a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13c09bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13c09d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13c07020"/>
        <function-ref name="set" scoped="" ref="0x7f5d13c071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13c07340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5d13c11cd0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5d13c11cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13c10940"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d13c10dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f5d13be2820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f5d13be2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13be2ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13be2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f5d13bf31c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5d13bf31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf3540"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bf36d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5d13bf3a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13bf3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf3df0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bf2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f5d13bfc3d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5d13bfc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bfc750"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bfc8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5d13bfd810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5d13bfd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5d13bfdb90"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13bfdd20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5d13c04020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5d13c041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5d13c0a0e0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5d13c0a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13c0a460"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13c0a5f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13c0a780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13c0a910"/>
        <function-ref name="get" scoped="" ref="0x7f5d13c0aaa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13c0ac30"/>
        <function-ref name="set" scoped="" ref="0x7f5d13c0adc0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13c09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f5d13bf1120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d13bf1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13bf16a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f5d13c076a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5d13c076a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13c07a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13c07bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13c07d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13c06020"/>
        <function-ref name="get" scoped="" ref="0x7f5d13c061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13c06340"/>
        <function-ref name="set" scoped="" ref="0x7f5d13c064d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13c06660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13c15610" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13c15610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13c15990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5d13bf4020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13bf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf43a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bf4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f5d13bf1a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5d13bf1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13bf1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5d13bf01d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5d13bf01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13bf0550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13bf06e0"/>
        <function-ref name="request" scoped="" ref="0x7f5d13bf0870"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13bf0a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13bf0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f5d13bedd90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f5d13bedd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13bec180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13bec310"/>
        <function-ref name="request" scoped="" ref="0x7f5d13bec4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13bec630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13bec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5d13c128d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5d13c128d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5d13c12c50"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5d13c12de0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5d13c11020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5d13c111b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5d13c11340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5d13c114d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5d13c11660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5d13c117f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f5d13bfcc80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5d13bfcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf70a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bf7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f5d13bf5b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13bf5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13bf5e80"/>
        <function-ref name="write" scoped="" ref="0x7f5d13bfc030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f5d13bee2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5d13bee2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13bee630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d13beca80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d13beca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d13bece00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d13beb020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d13beb1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d13beb340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d13beb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13beb660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d13beb7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d13bebe30"/>
        <function-ref name="set" scoped="" ref="0x7f5d13beb980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d13bebb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d13bebca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f5d13be3940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f5d13be3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13be3cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13be3e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d13c15c80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d13c15c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13c140a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13c14230"/>
        <function-ref name="request" scoped="" ref="0x7f5d13c143c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13c14550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13c146e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f5d13c01520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5d13c01520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13c018a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13c01a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f5d13bf9a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13bf9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13c01020"/>
        <function-ref name="write" scoped="" ref="0x7f5d13c011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f5d13c050e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5d13c050e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d13c05460"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13c055f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5d13c05780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5d13c05910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f5d13bed020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f5d13bed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13bed3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13bed530"/>
        <function-ref name="request" scoped="" ref="0x7f5d13bed6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13bed850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13bed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f5d13bee9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5d13bee9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13beed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13b6b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13b6b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13b6bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5d13b67220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b67220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13b64b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13b66a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d13b644e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13b64020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d13b63020"/>
        <function-ref name="start" scoped="" ref="0x7f5d13b66090"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13b665a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13b61260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13b61260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d13b615e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5d13b61af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5d13b61af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13b26390"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13b27360"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d13b27ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13b27820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d13b26850"/>
        <function-ref name="start" scoped="" ref="0x7f5d13b29970"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13b29e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d11eb42a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d11eb42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d11eb2b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11eb3aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d11eb24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d11eb2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d11eb1020"/>
        <function-ref name="start" scoped="" ref="0x7f5d11eb30d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d11eb35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11eb5a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11eb5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11eb5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d11ead2a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d11ead2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d11eaab30"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11eacaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d11eaa4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d11eaa020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d11ea9020"/>
        <function-ref name="start" scoped="" ref="0x7f5d11eac0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d11eac5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11eaea10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11eaea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11eaed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5d11e94c10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11e94c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d11e93020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d11e931b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d11e93340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d11e934d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11e93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5d11e961b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11e961b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d11e96530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d11e966c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11e96850"/>
        <function-ref name="get" scoped="" ref="0x7f5d11e969e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11e96b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d11e96d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d11e95020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d11e951b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d11e95340"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d11e954d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d11e95660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5d11e958f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11e958f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d11e95c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d11e95e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11e94020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d11e941b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d11e94340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11e944d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d11e94660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d11e947f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d11e94980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f5d11e8aa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5d11e8aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d11e8ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5d11e89020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5d11e891b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5d11e89340"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11e894d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5d11e8c020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5d11e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d11e8c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d11e8c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11e8c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5d11e8c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11e8c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d11e8cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d11e8cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d11e8b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d11e8b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5d11e8b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5d11e8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d11e91da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d11e91da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d11e8e670"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11e8f610"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d11e8e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d11e8fad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d11e8eb30"/>
        <function-ref name="start" scoped="" ref="0x7f5d11e90bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d11e8f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11e91510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11e91510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11e91890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5d11e8b760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d11e8b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d11e8bae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d11e8bc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d11e8be00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d11e8a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d11e8a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d11e8a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d11e8a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d11e8a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d11e8a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5d13b4b080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d13b4b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d13b4a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d13b4a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d13b4a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d13b4ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5d13b420f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5d13b420f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d13b41020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d13b419a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d13b414e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d13b41e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5d13b46cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d13b46cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d13b44b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d13b43550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d13b43090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d13b43a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5d11ea75f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5d11ea75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d11ea5e50"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11ea6e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d11ea5800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d11ea5340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d11ea3340"/>
        <function-ref name="start" scoped="" ref="0x7f5d11ea6430"/>
        <function-ref name="stop" scoped="" ref="0x7f5d11ea6940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f5d11ea1d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f5d11ea1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d11e9d670"/>
        <function-ref name="fired" scoped="" ref="0x7f5d11e9f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d11e9d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d11e9fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d11e9db30"/>
        <function-ref name="start" scoped="" ref="0x7f5d11ea0b60"/>
        <function-ref name="stop" scoped="" ref="0x7f5d11e9f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5d11ea39b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d11ea39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d11ea27e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d11ea11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d11ea2ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d11ea1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f5d13b20090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5d13b20090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b20410"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b205a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b20730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b208c0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b20a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b20be0"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b20d70"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f5d13b1f390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5d13b1f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b1f710"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b1f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b1fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b1fbc0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b1fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b1e020"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b1e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f5d13b1e6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5d13b1e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b1ea20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b1ebb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b1ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b1d020"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b1d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b1d340"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b1d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b1d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f5d13b22e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5d13b22e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b21210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b213a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b21530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b216c0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b21850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b219e0"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b21b70"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b21d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f5d13b1cce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5d13b1cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b1b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b1b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b1b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b1b550"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b1b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b1b870"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b1ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b1bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f5d13b68b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5d13b68b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b22020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b22340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b224d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b22660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b227f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b22980"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b22b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f5d13b1d9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5d13b1d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b1dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b1c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b1c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b1c340"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b1c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b1c660"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b1c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b1c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13b172f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b17670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b17800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13b17990"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b17b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b17cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13b17e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b16020"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b161b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13b16340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13b164d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b16660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13b167f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13b16980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13b16c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b16da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13b19020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b19530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b19850"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b19b70"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b19d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b17020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13b13de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b13de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b12180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b12310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13b124a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b12630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b127c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13b12950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b12ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b12c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13b12e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13b11020"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13b11340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13b114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13b11760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13b14b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b14b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b13020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b131b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b13340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b134d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b13660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b137f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b13980"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b13b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13b0e930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b0e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b0ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b0ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13b0d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b0d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b0d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13b0d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b0d660"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b0d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13b0d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13b0db10"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b0dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13b0de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13b0c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13b0c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b0c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13b0f710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b0f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b0fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b0fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b0fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b0e020"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b0e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b0e340"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b0e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b0e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13b09480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b09480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b09800"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b09990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13b09b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b09cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b09e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13b08020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b081b0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b08340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13b084d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13b08660"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b087f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13b08980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13b08b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13b08da0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13b0a1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b0a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b0a550"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b0a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b0a870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b0aa00"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b0ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b0ad20"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b09020"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13b04020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13b04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b043a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b04530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13b046c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b04850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b049e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13b04b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b04d00"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13b021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13b02340"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13b02660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13b027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13b02a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b02c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13b06d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b06d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13b05180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13b05310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13b054a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13b05630"/>
        <function-ref name="get" scoped="" ref="0x7f5d13b057c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13b05950"/>
        <function-ref name="set" scoped="" ref="0x7f5d13b05ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13b05c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13affde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13affde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13afe180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13afe310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13afe4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13afe630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13afe7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13afe950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13afeae0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13afec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13afee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13afd020"/>
        <function-ref name="set" scoped="" ref="0x7f5d13afd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13afd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13afd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13afd760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13afd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13b00b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13b00b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13aff020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13aff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13aff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13aff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13aff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13aff7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d13aff980"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13affb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5d13afa930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5d13afa930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13afacb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13afae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13af9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13af91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13af9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13af94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13af9660"/>
        <function-ref name="get" scoped="" ref="0x7f5d13af97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13af9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13af9b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d13af9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13af9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13af8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13af82b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13af8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5d13afb710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13afb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13afba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13afbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13afbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13afa020"/>
        <function-ref name="get" scoped="" ref="0x7f5d13afa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13afa340"/>
        <function-ref name="set" scoped="" ref="0x7f5d13afa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13afa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f5d13ae5150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5d13ae5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5d13ae54d0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ae5660"/>
        <function-ref name="captured" scoped="" ref="0x7f5d13ae57f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5d13ae5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f5d13ae5d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5d13ae5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d13ae4180"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ae4310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5d13ae44a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5d13ae4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f5d13ae4a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5d13ae4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d13ae4da0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ae0020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5d13ae01b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5d13ae0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f5d13acb8f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f5d13acb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5d13acbc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5d13acbe00"/>
        <function-ref name="captured" scoped="" ref="0x7f5d13aca020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d13aca1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d13aca340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5d13aca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5d13adda20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5d13adda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5d13addda0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13acc020"/>
        <function-ref name="captured" scoped="" ref="0x7f5d13acc1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5d13acc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5d13acc5d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5d13acc5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5d13acc950"/>
        <function-ref name="getControl" scoped="" ref="0x7f5d13accae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5d13accc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5d13acce00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5d13acb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5d13acb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5d13acb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5d13acb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5d13acb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f5d13aca7a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5d13aca7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d13acab20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13acacb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13acae40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13ac7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13ac71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13ac7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13ac74d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d13ac7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13ac77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13ac7980"/>
        <function-ref name="set" scoped="" ref="0x7f5d13ac7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13ac7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d13ac7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13ac6120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d13ac62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5d13ab98a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5d13ab98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab8020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5d13aaea30" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5d13aaea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aaedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aad020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aad1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aad340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aad4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5d13ab58a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5d13ab58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab5c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab4020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5d13ab38a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5d13ab38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab2020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5d13abf8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5d13abf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13abfc20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13abfdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aba020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aba1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aba340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5d13ab08a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5d13ab08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab0d20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aaf020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aaf1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aaf340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aaf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aaf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5d13ab88a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5d13ab88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab7020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5d13aada30" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5d13aada30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aaddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aac020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aac1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aac340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aac4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5d13abb8f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5d13abb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13abbc70"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13abbe00"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ac0020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ac01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ac0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ac04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5d13ab28a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5d13ab28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab1020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5d13aba8a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5d13aba8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13abac20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13abadb0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab9020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab91b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab9340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5d13aafa30" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5d13aafa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aafdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aae020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aae1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aae340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aae4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5d13ab78a0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5d13ab78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab5020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5d13ab48a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5d13ab48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab3020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5d13ac08a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5d13ac08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ac0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ac0db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13abf020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13abf1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13abf340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13abf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5d13ab18a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5d13ab18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13ab1c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13ab1db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13ab0020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13ab01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13ab0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13ab04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5d13aa58a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5d13aa58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa5c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa4020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5d13a9aa30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5d13a9aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13a9adb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13a99020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a991b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a99340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a994d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5d13aa28a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5d13aa28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa1020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5d13aa08a0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5d13aa08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa0db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a9f020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a9f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a9f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a9f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5d13aa78a0" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5d13aa78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa6020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5d13a9d8a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5d13a9d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13a9dd20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13a9b020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a9b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a9b340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a9b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a9b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5d13aa48a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5d13aa48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa3020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5d13a99a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5d13a99a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13a99db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13a98020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a981b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a98340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a984d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5d13aab810" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5d13aab810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aabb90"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aabd20"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa8020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5d13a9f8a0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5d13a9f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13a9fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13a9fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a9e020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a9e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a9e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5d13aa68a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5d13aa68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa5020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5d13a9ba30" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5d13a9ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13a9bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13a9a020"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a9a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a9a340"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a9a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5d13aa38a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5d13aa38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa2020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5d13aa18a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5d13aa18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa1c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa1db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa0020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5d13aa88a0" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5d13aa88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13aa8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13aa8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13aa7020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13aa71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13aa7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13aa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5d13a9e8a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5d13a9e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d13a9ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13a9edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d13a9d020"/>
        <function-ref name="edge" scoped="" ref="0x7f5d13a9d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5d13a9d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d13a9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5d139c6610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5d139c6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d139c6990"/>
        <function-ref name="fired" scoped="" ref="0x7f5d139c6b20"/>
        <function-ref name="disable" scoped="" ref="0x7f5d139c6cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d139c6e40"/>
        <function-ref name="enable" scoped="" ref="0x7f5d139b9020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d139b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5d139c7a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5d139c7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d139c7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d139c6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5d139c61b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5d139c6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5d139b7610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5d139b7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d139b7990"/>
        <function-ref name="fired" scoped="" ref="0x7f5d139b7b20"/>
        <function-ref name="disable" scoped="" ref="0x7f5d139b7cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5d139b7e40"/>
        <function-ref name="enable" scoped="" ref="0x7f5d139b5020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5d139b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5d139b8a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5d139b8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d139b8df0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d139b7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5d139b71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5d139b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5d13561e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13561e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13560410"/>
        <function-ref name="write" scoped="" ref="0x7f5d135605a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5d1356d160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5d1356d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5d13565e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13565e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13563210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5d1355f880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d1355f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355fc00"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5d135570a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5d135570a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13557420"/>
        <function-ref name="write" scoped="" ref="0x7f5d135575b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5d1355e0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5d1355e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355e420"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5d1354b500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5d1354b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354b880"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5d1354d500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d1354d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354d880"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5d1356b490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5d1356b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5d13553880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5d13553880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13553c00"/>
        <function-ref name="write" scoped="" ref="0x7f5d13553d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5d1354e500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d1354e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354e880"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5d13563e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5d13563e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13562210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5d13562e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13562e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13561210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5d13559880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5d13559880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13559c00"/>
        <function-ref name="write" scoped="" ref="0x7f5d13559d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5d1355a0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5d1355a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355a420"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5d1355e880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5d1355e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355ec00"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d1356fa90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d1356fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d1356fe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d1356e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d1356e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5d1356ae00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d1356ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135691c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5d13569490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5d13569490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13569910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5d13552c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d13552c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135510a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13551230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5d13569be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5d13569be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13566020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5d1354ece0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d1354ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5d1356a160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d1356a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5d135530a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5d135530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13553420"/>
        <function-ref name="write" scoped="" ref="0x7f5d135535b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5d13562670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d13562670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135629f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13562b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5d13563670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13563670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135639f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13563b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5d1356ead0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1356ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5d135540a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d135540a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13554420"/>
        <function-ref name="write" scoped="" ref="0x7f5d135545b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5d13557880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5d13557880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13557c00"/>
        <function-ref name="write" scoped="" ref="0x7f5d13557d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5d13554880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d13554880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13554c00"/>
        <function-ref name="write" scoped="" ref="0x7f5d13554d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5d1354cce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5d1354cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5d1354dce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d1354dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5d1355a880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5d1355a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355ac00"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5d135550a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5d135550a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13555420"/>
        <function-ref name="write" scoped="" ref="0x7f5d135555b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5d13550ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5d13550ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5d1355c880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5d1355c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355cc00"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5d1354bce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5d1354bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d1354a0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d1354a230"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354a3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d1354a550"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d1354a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5d1356e480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d1356e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5d13565670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5d13565670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135659f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13565b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5d13561670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d13561670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135619f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13561b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5d135580a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5d135580a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13558420"/>
        <function-ref name="write" scoped="" ref="0x7f5d135585b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5d1355c0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5d1355c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355c420"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5d13558880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5d13558880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13558c00"/>
        <function-ref name="write" scoped="" ref="0x7f5d13558d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5d13560870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13560870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13560bf0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13560d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5d1356d7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5d1356d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5d1355f0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d1355f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355f420"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d13570e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d13570e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1356f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1356f350"/>
        <function-ref name="request" scoped="" ref="0x7f5d1356f4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1356f670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1356f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5d135662f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5d135662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13566670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5d13565020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5d13565020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5d13550500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5d13550500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13550880"/>
        <function-ref name="write" scoped="" ref="0x7f5d13550a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5d13551ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13551ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135500a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13550230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5d1356a7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d1356a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5d13551500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d13551500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13551880"/>
        <function-ref name="write" scoped="" ref="0x7f5d13551a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5d1354c500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5d1354c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1354c880"/>
        <function-ref name="write" scoped="" ref="0x7f5d1354ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5d135590a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d135590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13559420"/>
        <function-ref name="write" scoped="" ref="0x7f5d135595b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5d13555880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5d13555880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13555c00"/>
        <function-ref name="write" scoped="" ref="0x7f5d13555d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5d1356de00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5d1356de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5d1356bae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5d1356bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1356be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5d1355b0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5d1355b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355b420"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5d13566940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5d13566940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13566cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5d1355b880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5d1355b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1355bc00"/>
        <function-ref name="write" scoped="" ref="0x7f5d1355bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5d135520a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5d135520a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13552820"/>
        <function-ref name="write" scoped="" ref="0x7f5d135529b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5d1354a9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5d1354a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d1354ad30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d13549020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135491b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d13549340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d135494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f5d13976630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f5d13976630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d139769b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d13976b40"/>
        <function-ref name="write" scoped="" ref="0x7f5d13976cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d13976e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d13975020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d13977670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13977670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d139779f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d13977b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d13977d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f5d139758c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f5d139758c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13975c40"/>
        <function-ref name="write" scoped="" ref="0x7f5d13975dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f5d139736f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f5d139736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13973a70"/>
        <function-ref name="write" scoped="" ref="0x7f5d13973c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d1397a950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d1397a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1397acd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1397ae60"/>
        <function-ref name="request" scoped="" ref="0x7f5d13977020"/>
        <function-ref name="granted" scoped="" ref="0x7f5d139771b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13977340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f5d13972510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f5d13972510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13972890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f5d1395c680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5d1395c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1395ca00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d1395cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f5d1396dbb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f5d1396dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d1396c020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d1396c1b0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1396c340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d1396c4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d1396c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d13971920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13971920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d13971ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d13971e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d1396e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f5d13966080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5d13966080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5d13966400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f5d13958b90" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f5d13958b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d13964020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d139641b0"/>
        <function-ref name="isState" scoped="" ref="0x7f5d13964340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d139644d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d13964660"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d139647f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5d13968400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5d13968400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13968780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13968910"/>
        <function-ref name="request" scoped="" ref="0x7f5d13968aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13968c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13968dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f5d1396a020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f5d1396a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1396a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1396a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f5d1396adb0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f5d1396adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13969180"/>
        <function-ref name="write" scoped="" ref="0x7f5d13969310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d13964a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d13964a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d13964df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d1395e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d1395e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d1395e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d1395e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1395e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d1395e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d1395ee30"/>
        <function-ref name="set" scoped="" ref="0x7f5d1395e980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d1395eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d1395eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d1396e810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d1396e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1396eb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1396ed20"/>
        <function-ref name="request" scoped="" ref="0x7f5d1396d020"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1396d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1396d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f5d13954bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f5d13954bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d13953020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d139531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f5d13969ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f5d13969ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13968020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d138f9770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d138f9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d138f9af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d138f9c80"/>
        <function-ref name="isState" scoped="" ref="0x7f5d138f9e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d138f5020"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d138f51b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d138f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d138f41d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d138f41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d138f4550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d138f46e0"/>
        <function-ref name="isState" scoped="" ref="0x7f5d138f4870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d138f4a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d138f4b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d138f4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d138ef020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d138ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d138ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d138efb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d138efb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d138ee020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d138ee1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f5d138ee340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d138ee4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d138ee660"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d138ee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5d13596020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5d13596020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d135963a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d13596530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5d138d68f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5d138d68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5d138d6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d138d7c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d138d7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d138d6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d138d61b0"/>
        <function-ref name="request" scoped="" ref="0x7f5d138d6340"/>
        <function-ref name="granted" scoped="" ref="0x7f5d138d64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d138d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d11dbd8f0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11dbd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d11dbdc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d11dbde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5d11dba2b0" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5d11dba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11dba630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d11dba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5d11dbaa50" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d11dbaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d11dbadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5d11dbc0c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5d11dbc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5d11dbc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d11dbfc30" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d11dbfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d11dbd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d11dbd1b0"/>
        <function-ref name="request" scoped="" ref="0x7f5d11dbd340"/>
        <function-ref name="granted" scoped="" ref="0x7f5d11dbd4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d11dbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5d11dbc6d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d11dbc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5d11dbca50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5d11dbcbe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5d11dbcd70"/>
        <function-ref name="write" scoped="" ref="0x7f5d11dba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5d138715e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d138715e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d13871960"/>
        <function-ref name="configure" scoped="" ref="0x7f5d13871af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5d1386d510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5d1386d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1386d890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d1386da20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5d1386b600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d1386b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d1386b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5d13871dd0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5d13871dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5d13870180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5d1386c370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5d1386c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1386c6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1386c880"/>
        <function-ref name="request" scoped="" ref="0x7f5d1386ca10"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1386cba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1386cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d13876a20" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d13876a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13876da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13872020"/>
        <function-ref name="request" scoped="" ref="0x7f5d138721b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13872340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d138724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5d13870480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d13870480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5d13870800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5d13870990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5d13870b20"/>
        <function-ref name="write" scoped="" ref="0x7f5d13870cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5d138666a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d138666a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d13866a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d13866bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5d137f6c40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d137f6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d137f5020"/>
        <function-ref name="configure" scoped="" ref="0x7f5d137f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5d137f3700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5d137f3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d137f3aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d137f3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5d137f2e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5d137f2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d137f11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5d137f5440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5d137f5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5d137f57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5d137f1490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5d137f1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d137f1810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d137f19a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d137f1b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d137f1cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d137f1e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d137f0020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d137f01b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d137f0340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d137f04d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d137f0660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d137f07f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d137f0980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d137f0b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d137f0da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d137ef020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d137ef1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d137ef340"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d137ef4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d137ef660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d137ef7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d137ef980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d137efb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d137efca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d137efe30"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d137ee020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d137ee3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d137ee540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d137ee6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f5d137ee860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d137ee9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d137eeb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d137eed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d137ed020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d137ed1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f5d137ed340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d137ed4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d137ed660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d137ed7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d137ed980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d137edb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d137ec5a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d137ec5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d137ec920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d137ecab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d137ecc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d137ecdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d137eb020"/>
        <function-ref name="get" scoped="" ref="0x7f5d137eb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d137eb340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d137eb980"/>
        <function-ref name="set" scoped="" ref="0x7f5d137eb660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d137eb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d137eb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5d137f2060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5d137f2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d137f2400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d137f2590"/>
        <function-ref name="request" scoped="" ref="0x7f5d137f2720"/>
        <function-ref name="granted" scoped="" ref="0x7f5d137f28b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d137f2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d137f7e80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d137f7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d137f6240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d137f63d0"/>
        <function-ref name="request" scoped="" ref="0x7f5d137f6560"/>
        <function-ref name="granted" scoped="" ref="0x7f5d137f66f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d137f6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5d137f5a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5d137f5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5d137f5dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5d137f3020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5d137f31b0"/>
        <function-ref name="write" scoped="" ref="0x7f5d137f3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5d137edde0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d137edde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d137ec180"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d137ec310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f5d137ebc50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f5d137ebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d137ea020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d137ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f5d137db8a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5d137db8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d137dbc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5d137de3b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d137de3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d137de730"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d137de8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5d137e5860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d137e5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d137e5be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d137e5d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d137e2020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d137e21b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d137e2340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d137e24d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d137e2660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d137e27f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d137e2980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d137e2b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d137e2ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d137e2e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d137e1020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d137e12b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d137e1440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d137e15d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d137e1760"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d137e18f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d137e1a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d137e1c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d137e1da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d137e0020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d137e01b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d137e0340"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d137e04d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d137e0860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d137e09f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d137e0b80"/>
        <function-ref name="tx" scoped="" ref="0x7f5d137e0d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d137df020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d137df1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d137df340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d137df4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d137df660"/>
        <function-ref name="rx" scoped="" ref="0x7f5d137df7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d137df980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d137dfb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d137dfca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d137dfe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d137de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5d137a1670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5d137a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d137a19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d137a1b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d137a1d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d137a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d137a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d137a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d137a04d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d137a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d137a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d137a0980"/>
        <function-ref name="set" scoped="" ref="0x7f5d137a0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d137a0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d137a0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1379f120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1379f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5d137d4dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5d137d4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d137d3180"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d137d3310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f5d1379f670" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f5d1379f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1379f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1379fb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1379fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1379e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1379e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1379e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1379e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1379e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1379e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1379e980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1379eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1379eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1379ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1379d120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1379d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5d1379d670" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5d1379d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1379d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1379db80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1379dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1379c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1379c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1379c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1379c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1379c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1379c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1379c980"/>
        <function-ref name="set" scoped="" ref="0x7f5d1379cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1379cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1379ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1379b120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1379b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f5d137d8020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5d137d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d137d83a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d137d8530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d137d86c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d137d8850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d137d89e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d137d8b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d137d8d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d137d7020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d137d71b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d137d7340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d137d74d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d137d7660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d137d77f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d137d7a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d137d7c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d137d7da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d137d6020"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d137d61b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d137d6340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d137d64d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d137d6660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d137d67f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d137d6980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d137d6b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d137d6ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d137d5220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d137d53b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d137d5540"/>
        <function-ref name="tx" scoped="" ref="0x7f5d137d56d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d137d5860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d137d59f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d137d5b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d137d5d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d137d4020"/>
        <function-ref name="rx" scoped="" ref="0x7f5d137d41b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d137d4340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d137d44d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d137d4660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d137d47f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d137d4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f5d137aa5b0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5d137aa5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5d137aa930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5d137aaac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5d137aac50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5d137aade0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5d137d1020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5d137d11b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5d137d1340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5d137d14d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d137d1660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5d137d17f0"/>
        <function-ref name="getData" scoped="" ref="0x7f5d137d1980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5d137d1b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5d137d1ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5d137d0020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5d137d01b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f5d137d0340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5d137d04d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5d137d0660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5d137d07f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5d137d0980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5d137d0b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5d137d0ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5d137d0e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5d137a9020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5d137a91b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5d137a9540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5d137a96d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5d137a9860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5d137a99f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5d137a9b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5d137a9d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5d137a8020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5d137a81b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5d137a8340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5d137a84d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5d137a8660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5d137a87f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5d137a8980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5d137a8b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5d137a8ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5d137a8e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5d137a7020"/>
        <function-ref name="setData" scoped="" ref="0x7f5d137a71b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5d137a7340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5d137a74d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5d137a7660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5d137a77f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5d137a7980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5d137a7b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5d137a6420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5d137a65b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5d137a6740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5d137a68d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5d137a6a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5d137a6bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5d137a6d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5d137a5020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5d137a51b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5d137a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f5d137a3670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f5d137a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d137a39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d137a3b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d137a3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d137a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d137a21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d137a2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d137a24d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d137a2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d137a27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d137a2980"/>
        <function-ref name="set" scoped="" ref="0x7f5d137a2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d137a2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d137a2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d137a1120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d137a12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5d137d3750" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d137d3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d137d3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5d137a5700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5d137a5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d137a5a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d137a5c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d137a5da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d137a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d137a41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d137a4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d137a44d0"/>
        <function-ref name="get" scoped="" ref="0x7f5d137a4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d137a47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d137a4980"/>
        <function-ref name="set" scoped="" ref="0x7f5d137a4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d137a4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d137a4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d137a3120"/>
        <function-ref name="clr" scoped="" ref="0x7f5d137a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d11db02c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11db02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d11db0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d11db07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f5d11daa440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5d11daa440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d11daa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d11da3760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11da3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d11da3ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f5d11da3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f5d11daaa50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5d11daaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5d11daadd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5d11da9020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5d11da91b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5d11da9340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5d11da94d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5d11da9660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5d11da97f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5d11da9980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d11da9b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5d11da9ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f5d11da9e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5d11da8020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5d11da81b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5d11da8440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5d11da85d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f5d11da8760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5d11da88f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5d11da8a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5d11da8c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5d11da8da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5d11da7020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5d11da71b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5d11da7340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5d11da74d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5d11da7660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5d11da79f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5d11da7b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5d11da7d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5d11da6020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5d11da61b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5d11da6340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5d11da64d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5d11da6660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5d11da67f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5d11da6980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5d11da6b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5d11da6ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5d11da6e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5d11da5020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5d11da51b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5d11da5340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5d11da54d0"/>
        <function-ref name="setData" scoped="" ref="0x7f5d11da5660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5d11da57f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5d11da5980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5d11da5b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5d11da5ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5d11da5e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5d11da4020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5d11da45b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5d11da4740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5d11da48d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5d11da4a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5d11da4bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5d11da4d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5d11da3020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5d11da31b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5d11da3340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5d11da34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5d11dabc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d11dabc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d11daa020"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d11daa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d11db1640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d11db1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d11db19c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d11db1b50"/>
        <function-ref name="request" scoped="" ref="0x7f5d11db1ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d11db1e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d11db0030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5d11daf2b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d11daf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d11daf630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d11daf7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d11daf950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d11dafae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d11dafc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d11dafe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d11dae020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d11dae1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d11dae340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d11dae4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d11dae660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d11dae7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d11dae980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d11daec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d11daeda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d11dad020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d11dad1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d11dad340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d11dad4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d11dad660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d11dad7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d11dad980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d11dadb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d11dadca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d11dade30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d11dac220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d11dac3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d11dac540"/>
        <function-ref name="tx" scoped="" ref="0x7f5d11dac6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d11dac860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d11dac9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d11dacb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d11dacd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d11dab020"/>
        <function-ref name="rx" scoped="" ref="0x7f5d11dab1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d11dab340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d11dab4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d11dab660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d11dab7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d11dab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d11db0a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d11db0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d11db0de0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d11daf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d136fc8a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d136fc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d136fcc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d136fcdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d136f9020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d136f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d136f93a0"/>
        <function-ref name="configure" scoped="" ref="0x7f5d136f9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5d13701a80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5d13701a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d13701e00"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d136fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d136fd5c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d136fd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d136fd940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d136fdad0"/>
        <function-ref name="request" scoped="" ref="0x7f5d136fdc60"/>
        <function-ref name="granted" scoped="" ref="0x7f5d136fddf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d136fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5d136fe9a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d136fe9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d136fed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d136fa130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d136fa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d136fa4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d136fa640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5d136e24b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d136e24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d136e2830"/>
        <function-ref name="userId" scoped="" ref="0x7f5d136e29c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5d136f75c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5d136f75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d136f7960"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d136f7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f5d136e4e70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5d136e4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d136e2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5d136e4020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d136e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d136e43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5d136e4690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5d136e4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d136e4a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d136e4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d13668bf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d13668bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d13667020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d136671b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d13666930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d13666930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d13666cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f5d13666e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5d13667400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d13667400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13667780"/>
        <function-ref name="requested" scoped="" ref="0x7f5d13667910"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13667aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13667c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d13667dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d13669e60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d13669e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13668230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d136683c0"/>
        <function-ref name="request" scoped="" ref="0x7f5d13668550"/>
        <function-ref name="granted" scoped="" ref="0x7f5d136686e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d13668870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d13666060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d13666060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d136663e0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d13666570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11d3d140" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11d3d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11d3d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5d11d3d750" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5d11d3d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5d11d3dad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5d11d3dc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5d11d3ddf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d11d3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d11d3a850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d11d3a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d11d3abf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d11d3ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d11d37590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11d37590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d11d37930"/>
        <function-ref name="configure" scoped="" ref="0x7f5d11d37ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5d11d37d50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d11d37d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5d11d36100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5d11d36290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5d11d36420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d11d365b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5d11d39020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d11d39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d11d393a0"/>
        <function-ref name="requested" scoped="" ref="0x7f5d11d39530"/>
        <function-ref name="granted" scoped="" ref="0x7f5d11d396c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d11d39850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d11d399e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d11d36800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d11d36800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d11d36b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d11d36d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d11d35020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d11d351b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d11d35340"/>
        <function-ref name="get" scoped="" ref="0x7f5d11d354d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d11d35660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d11d35ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d11d35980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d11d357f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d11d35b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d11d3b970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d11d3b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d11d3bd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d11d3a020"/>
        <function-ref name="request" scoped="" ref="0x7f5d11d3a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d11d3a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d11d3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d11d39c30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d11d39c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d11d37020"/>
        <function-ref name="userId" scoped="" ref="0x7f5d11d371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5d11d34020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f5d11d34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d11d343a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d11d34530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f5d1365f880" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5d1365f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5d1365fc00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5d1365fd90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5d1365c020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5d1365c1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5d1365c340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5d1365c4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5d1365c660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5d1365c7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d1365c980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5d1365cb10"/>
        <function-ref name="getData" scoped="" ref="0x7f5d1365cca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5d1365ce30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5d1365b020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5d1365b2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5d1365b440"/>
        <function-ref name="getIV" scoped="" ref="0x7f5d1365b5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5d1365b760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5d1365b8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5d1365ba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5d1365bc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5d1365bda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5d1365a020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5d1365a1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5d1365a340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5d1365a4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5d1365a860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5d1365a9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5d1365ab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5d1365ad10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5d13659020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5d136591b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5d13659340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5d136594d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5d13659660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5d136597f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5d13659980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5d13659b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5d13659ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5d13659e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5d13658020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5d136581b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5d13658340"/>
        <function-ref name="setData" scoped="" ref="0x7f5d136584d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5d13658660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5d136587f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5d13658980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5d13658b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5d13658ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5d13658e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5d13657420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5d136575b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5d13657740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5d136578d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5d13657a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5d13657bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5d13657d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5d13656020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5d136561b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5d13656340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f5d1364b250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f5d1364b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d1364b5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d1364b760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d1364b8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d1364ba80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d1364bc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d1364bda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d1364a020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d1364a1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d1364a340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d1364a4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d1364a660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d1364a7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d1364a980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d1364ac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d1364ada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d13649020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d136491b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d13649340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d136494d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d13649660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d136497f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d13649980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d13649b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d13649ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d13649e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d13648220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d136483b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d13648540"/>
        <function-ref name="tx" scoped="" ref="0x7f5d136486d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d13648860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d136489f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d13648b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d13648d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d13647020"/>
        <function-ref name="rx" scoped="" ref="0x7f5d136471b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d13647340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d136474d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d13647660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d136477f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d13647980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5d13645cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5d13645cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d136440a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13644230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d136443c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13644550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d136446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d13644870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13644a00"/>
        <function-ref name="get" scoped="" ref="0x7f5d13644b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13644d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13643020"/>
        <function-ref name="set" scoped="" ref="0x7f5d136431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13643340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d136434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13643760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d136438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f5d13652430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5d13652430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5d136527b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5d13652940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5d13652ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5d13652c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5d13652df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5d13651020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5d136511b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5d13651340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5d136514d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5d13651660"/>
        <function-ref name="getData" scoped="" ref="0x7f5d136517f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5d13651980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5d13651b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5d13651da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5d13650020"/>
        <function-ref name="getIV" scoped="" ref="0x7f5d136501b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5d13650340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5d136504d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5d13650660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5d136507f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5d13650980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5d13650b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5d13650ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5d13650e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5d1364f020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5d1364f3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5d1364f540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5d1364f6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5d1364f860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5d1364f9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5d1364fb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5d1364fd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5d1364e020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5d1364e1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5d1364e340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5d1364e4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5d1364e660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5d1364e7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5d1364e980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5d1364eb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5d1364eca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5d1364ee30"/>
        <function-ref name="setData" scoped="" ref="0x7f5d1364d020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5d1364d1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5d1364d340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5d1364d4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5d1364d660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5d1364d7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5d1364d980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5d1364c020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5d1364c1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5d1364c340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5d1364c4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5d1364c660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5d1364c7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5d1364c980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5d1364cb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5d1364cca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5d1364ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5d13647d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5d13647d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d136460e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d13646270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d13646400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d13646590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d13646720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d136468b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d13646a40"/>
        <function-ref name="get" scoped="" ref="0x7f5d13646bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d13646d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d13645020"/>
        <function-ref name="set" scoped="" ref="0x7f5d136451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d13645340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d136454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d13645760"/>
        <function-ref name="clr" scoped="" ref="0x7f5d136458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5d13531c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13531c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352f210"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5d1353bda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5d1353bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1353a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5d13534b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13534b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13533020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5d1352e670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d1352e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5d13527e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5d13527e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13526210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5d1352ee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5d1352ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352d210"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5d1351a2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5d1351a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351a670"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5d1351d2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d1351d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351d670"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5d13539120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5d13539120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135394a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5d13522670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5d13522670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135229f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13522b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5d1351e2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d1351e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351e670"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5d13533c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5d13533c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13532020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5d13532c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13532c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13531020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5d13528670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5d13528670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135289f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13528b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5d1352be50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5d1352be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13529210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5d1352d670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5d1352d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d1353c760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d1353c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d1353cae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d1353cc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d1353ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5d13538aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d13538aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13538e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5d13536120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5d13536120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135365a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5d13521a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d13521a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13521df0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13520020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5d13536870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5d13536870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13536bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5d1351ead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d1351ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351ee50"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5d13539dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d13539dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13538180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5d13524e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5d13524e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13522210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5d13532480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d13532480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13532800"/>
        <function-ref name="write" scoped="" ref="0x7f5d13532990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5d13533480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13533480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13533800"/>
        <function-ref name="write" scoped="" ref="0x7f5d13533990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5d1353b750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1353b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1353bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5d13525e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d13525e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13524210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5d13526670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5d13526670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135269f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13526b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5d13524670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d13524670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135249f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13524b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5d1351bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5d1351bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351be50"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5d1351dad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d1351dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351de50"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5d13529670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5d13529670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135299f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13529b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5d13526e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5d13526e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13525210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5d1351fad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5d1351fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351fe50"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5d1352c670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5d1352c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5d1351aad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5d1351aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d1351ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d13519020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135191b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d13519340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d135194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5d1353b100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d1353b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1353b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5d13534370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5d13534370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135346f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13534880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5d13531480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d13531480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13531800"/>
        <function-ref name="write" scoped="" ref="0x7f5d13531990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5d13528e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5d13528e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13527210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5d1352de50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5d1352de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352c210"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5d13527670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5d13527670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135279f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13527b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5d1352f670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5d1352f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5d1353a450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5d1353a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1353a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5d1352fe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d1352fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352e210"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d1353ea80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d1353ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1353ee00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1353c020"/>
        <function-ref name="request" scoped="" ref="0x7f5d1353c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1353c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1353c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5d13535020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5d13535020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5d13535cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5d13535cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135340a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5d1351f2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5d1351f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351f670"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5d13520ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5d13520ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13520e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5d13538450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d13538450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135387d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5d135202f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d135202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13520670"/>
        <function-ref name="write" scoped="" ref="0x7f5d13520800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5d1351b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5d1351b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1351b670"/>
        <function-ref name="write" scoped="" ref="0x7f5d1351b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5d13529e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d13529e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13528210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5d13525670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5d13525670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135259f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13525b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5d1353aaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5d1353aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1353ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5d13539770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5d13539770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d13539af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5d1352ce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5d1352ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352b210"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5d13535670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5d13535670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135359f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5d1352b670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5d1352b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d1352b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d1352bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5d13522e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5d13522e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13521610"/>
        <function-ref name="write" scoped="" ref="0x7f5d135217a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5d135197a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5d135197a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d13519b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d13519cb0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13519e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d13518020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d135181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5d13504c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d13504c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13503210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5d1350fda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5d1350fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5d13508b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d13508b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13506020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5d13502670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d13502670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135029f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13502b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5d134fbe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5d134fbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f9210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5d13502e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5d13502e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13500210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5d134ee2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5d134ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134ee670"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5d134f02f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d134f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f0670"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5d1350c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5d1350c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5d134f6670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5d134f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f69f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5d134f12f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d134f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f1670"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5d13506c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5d13506c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13505020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5d13505c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d13505c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13504020"/>
        <function-ref name="write" scoped="" ref="0x7f5d135041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5d134fc670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5d134fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5d134fee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5d134fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fd210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5d13500670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5d13500670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135009f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13500b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d13510760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d13510760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d13510ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d13510c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d13510e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5d1350baa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d1350baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5d1350a120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5d1350a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5d134f5a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d134f5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f5df0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5d1350a870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5d1350a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5d134f1ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d134f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f1e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5d1350cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d1350cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5d134f7e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5d134f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f6210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5d13505480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d13505480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13505800"/>
        <function-ref name="write" scoped="" ref="0x7f5d13505990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5d13506480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d13506480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13506800"/>
        <function-ref name="write" scoped="" ref="0x7f5d13506990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5d1350f750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5d1350f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5d134f8e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d134f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f7210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5d134f9670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5d134f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f99f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5d134f7670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d134f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f79f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5d134efad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5d134efad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134efe50"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5d134f0ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d134f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f0e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5d134fd670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5d134fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5d134f9e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5d134f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f8210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5d134f2ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5d134f2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f2e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5d134ff670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5d134ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134ff9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5d134eead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5d134eead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d134eee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d134ed020"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ed1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d134ed340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d134ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5d1350f100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d1350f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5d13508370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5d13508370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135086f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13508880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5d13504480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d13504480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13504800"/>
        <function-ref name="write" scoped="" ref="0x7f5d13504990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5d134fce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5d134fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fb210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5d13500e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5d13500e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134ff210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5d134fb670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5d134fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5d13503670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5d13503670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d135039f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d13503b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5d1350e450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5d1350e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5d13503e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d13503e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d13502210"/>
        <function-ref name="write" scoped="" ref="0x7f5d135023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d135119e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d135119e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d13511d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d13510020"/>
        <function-ref name="request" scoped="" ref="0x7f5d135101b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d13510340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d135104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5d13509020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5d13509020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5d13509cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5d13509cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135080a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5d134f22f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5d134f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f2670"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5d134f4ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5d134f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f4e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5d1350b450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d1350b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5d134f42f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d134f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f4670"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5d134ef2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5d134ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134ef670"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5d134fde50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d134fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fc210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5d134f8670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5d134f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f89f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5d1350eaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5d1350eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5d1350c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5d1350c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d1350caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5d134ffe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5d134ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fe210"/>
        <function-ref name="write" scoped="" ref="0x7f5d134fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5d13509670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5d13509670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d135099f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5d134fe670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5d134fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134fe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5d134f6e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5d134f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d134f5610"/>
        <function-ref name="write" scoped="" ref="0x7f5d134f57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5d134ed7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5d134ed7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d134edb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d134edcb0"/>
        <function-ref name="write" scoped="" ref="0x7f5d134ede40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d134ec020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d134ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f5d134e4b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5d134e4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5d134e1020"/>
        <function-ref name="changed" scoped="" ref="0x7f5d134e11b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5d134e1340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5d134e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7f5d134c2020" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f5d134c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f5d134c23a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f5d134c2530"/>
        <function-ref name="startDAO" scoped="" ref="0x7f5d134c26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f5d134c1020" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f5d134c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d134c13a0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d134c1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d13ca36f0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d13ca36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13ca3a70"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13ca3c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f5d133f1270" loc="57:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f5d133f1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5d133f15f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5d133f1780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5d133f1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7f5d133f60f0" loc="55:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7f5d133f60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d133f4260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d133f5660"/>
        <function-ref name="empty" scoped="" ref="0x7f5d133f6ce0"/>
        <function-ref name="put" scoped="" ref="0x7f5d133f5ae0"/>
        <function-ref name="size" scoped="" ref="0x7f5d133f51e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7f5d133febb0" loc="52:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7f5d133febb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133fd020"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5d133fe410" loc="51:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d133fe410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d133fe790"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d133fe920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7f5d133ef2f0" loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7f5d133ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d133ef670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d133ef800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7f5d13409ae0" loc="49:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7f5d13409ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13404110"/>
        <function-ref name="fired" scoped="" ref="0x7f5d134075b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d134064a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13406020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13404a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13404590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13407a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13408750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13406ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13408c20"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13407130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f5d133fc5a0" loc="54:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f5d133fc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5d133f94a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5d133f8260"/>
        <function-ref name="element" scoped="" ref="0x7f5d133f88d0"/>
        <function-ref name="full" scoped="" ref="0x7f5d133fa680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d133f9020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d133f9b50"/>
        <function-ref name="empty" scoped="" ref="0x7f5d133fa200"/>
        <function-ref name="size" scoped="" ref="0x7f5d133fab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d133fd400" loc="53:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d133fd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d133fd780"/>
        <function-ref name="changed" scoped="" ref="0x7f5d133fd910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d133fdaa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d133fdc30"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d133fddc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d133fc020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d133fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7f5d133efad0" loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7f5d133efad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d133efe50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d133ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7f5d1340f4b0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f5d1340f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f5d1340f830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f5d1340f9c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f5d1340fb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7f5d1340e720" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f5d1340e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d1340bc40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1340c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d1340b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d1340cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13409590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13409110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d1340c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d1340d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d1340b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d1340d860"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1340dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7f5d13403020" loc="50:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f5d13403020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d133ff630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13402a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13401920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d134014a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d133fe020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d133ffab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d13401020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13403c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d133ff020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d13402110"/>
        <function-ref name="stop" scoped="" ref="0x7f5d134025e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7f5d133f4980" loc="56:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f5d133f4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f5d133f4d00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f5d133f2e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f5d133f1020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f5d133f2340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d133f24d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f5d133f2660"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d133f27f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f5d133f2980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f5d133f2b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f5d133f2ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d133f2020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f5d133f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f5d133f1b60" loc="58:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f5d133f1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f5d133f0020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f5d133f01b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f5d133f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f5d133f0590" loc="59:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133f0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f5d133f0910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f5d133f0aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f5d133f0c30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f5d133f0dc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f5d133ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d1340fda0" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d1340fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d1340e180"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1340e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d133eabd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d133eabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d133e5110"/>
        <function-ref name="fired" scoped="" ref="0x7f5d133e76a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d133e64a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d133e6020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d133e5a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d133e5590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d133e7b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d133e9860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d133e6ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d133e9d30"/>
        <function-ref name="stop" scoped="" ref="0x7f5d133e7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d133e3560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d133e3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d133dfa20"/>
        <function-ref name="fired" scoped="" ref="0x7f5d133e0020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d133e0da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d133e0920"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d133de4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d133de020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d133e04a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d133e11b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d133df410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d133e1680"/>
        <function-ref name="stop" scoped="" ref="0x7f5d133e1b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d133db020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d133db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d133d8630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d133daa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d133d9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d133d94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d133d7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d133d8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d133d9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d133dbc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d133d8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d133da110"/>
        <function-ref name="stop" scoped="" ref="0x7f5d133da5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d133d2510" loc="31:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d133d2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d133d2890"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d133d2a20"/>
        <function-ref name="start" scoped="" ref="0x7f5d133d2bb0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d133d2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f5d133ce6e0" loc="36:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d133ce6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f5d133cea60"/>
        <function-ref name="initiate" scoped="" ref="0x7f5d133cebf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f5d133ced80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f5d133cc930" loc="35:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f5d133cc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f5d133cccb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f5d133cce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f5d133d1d40" loc="33:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f5d133d1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133d00e0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133d0270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f5d133cb9d0" loc="41:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f5d133cb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d133cbd50"/>
        <function-ref name="stop" scoped="" ref="0x7f5d133ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f5d133d0560" loc="34:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133d0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f5d133d08e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f5d133d0a70"/>
        <function-ref name="delRoute" scoped="" ref="0x7f5d133d0c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f5d133d0d90"/>
        <function-ref name="addRoute" scoped="" ref="0x7f5d133cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f5d133cb130" loc="40:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d133cb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d133cb4b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d133cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d133d1540" loc="32:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d133d1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133d18c0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133d1a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d133c7a10" loc="17:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d133c7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d133c7d90"/>
        <function-ref name="changed" scoped="" ref="0x7f5d133c6020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d133c61b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d133c6340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d133c64d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d133c6660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d133c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d133c5bf0" loc="20:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d133c5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d133c4020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d133c41b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d133c4340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d133c44d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d133c4660"/>
        <function-ref name="get" scoped="" ref="0x7f5d133c47f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d133c4980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d133c3020"/>
        <function-ref name="set" scoped="" ref="0x7f5d133c4b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d133c4ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d133c4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7f5d133c6ae0" loc="18:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7f5d133c6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133c6e60"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f5d133c52d0" loc="19:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f5d133c52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f5d133c5650"/>
        <function-ref name="delTLV" scoped="" ref="0x7f5d133c57e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f5d133c5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d133c71d0" loc="14:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d133c71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133c7550"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133c76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f5d133ac890" loc="22:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f5d133ac890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f5d133acc10"/>
        <function-ref name="initiate" scoped="" ref="0x7f5d133acda0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f5d133ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7f5d133a81d0" loc="28:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f5d133a81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133a8550"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133a86e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d133a8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f5d133a2790" loc="31:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d133a2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f5d14472110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d133a0860"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d133a1cb0"/>
        <function-ref name="empty" scoped="" ref="0x7f5d133a13b0"/>
        <function-ref name="put" scoped="" ref="0x7f5d133a0170"/>
        <function-ref name="size" scoped="" ref="0x7f5d133a1830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7f5d1338ae40" loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f5d1338ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d133891e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d13389370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f5d133ada50" loc="21:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f5d133ada50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f5d133addd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f5d133ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f5d133aba90" loc="24:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f5d133aba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133abe10"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d133aa2a0" loc="25:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d133aa2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d133aa620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d133a8b20" loc="29:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d133a8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d133a3020"/>
        <function-ref name="changed" scoped="" ref="0x7f5d133a31b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d133a3340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d133a34d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d133a3660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d133a37f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d133a3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7f5d1339e1c0" loc="34:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7f5d1339e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d1339b630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1339dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d1339c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d1339c550"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13399020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d1339bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d1339c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d1339edb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d1339b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d1339d2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1339d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f5d133c8d20" loc="20:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d133c8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f5d133ad0e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f5d133ad270"/>
        <function-ref name="delRoute" scoped="" ref="0x7f5d133ad400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f5d133ad590"/>
        <function-ref name="addRoute" scoped="" ref="0x7f5d133ad720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f5d133a3c30" loc="30:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f5d133a3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f5d133a2020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f5d133a21b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f5d133a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d133ab290" loc="23:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d133ab290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d133ab610"/>
        <function-ref name="recv" scoped="" ref="0x7f5d133ab7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f5d1331c020" loc="11:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f5d1331c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1331c3a0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1331c530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d1331c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f5d13315720" loc="15:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f5d13315720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13315aa0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13315c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d13315dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f5d1331d020" loc="10:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d1331d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f5d1331dd00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f5d1331d530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f5d1331d6c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f5d1331d850"/>
        <function-ref name="matchContext" scoped="" ref="0x7f5d1331d9e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f5d1331d3a0"/>
        <function-ref name="getContext" scoped="" ref="0x7f5d1331db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d1331c980" loc="12:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d1331c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d1331cd00"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1331b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f5d13319da0" loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f5d13319da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13311180"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13311310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d133114a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f5d13305300" loc="45:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f5d13305300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f5d13305780"/>
        <function-ref name="changed" scoped="" ref="0x7f5d13305910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d13305aa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d13305c30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d13305dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5d13308450" loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d13308450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d133087d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d13308960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f5d13307900" loc="43:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f5d13307900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13307c80"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13307e10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d13306020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7f5d1330e0a0" loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7f5d1330e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1330e420"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1330e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d133062d0" loc="44:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d133062d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d13306650"/>
        <function-ref name="changed" scoped="" ref="0x7f5d133067e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d13306970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d13306b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d13306c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d13306e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d13305020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7f5d1330f060" loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7f5d1330f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1330f3e0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1330f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f5d133117a0" loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d133117a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f5d133104d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f5d13311cb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f5d13311e40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f5d13310020"/>
        <function-ref name="matchContext" scoped="" ref="0x7f5d133101b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f5d13311b20"/>
        <function-ref name="getContext" scoped="" ref="0x7f5d13310340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7f5d1330e8a0" loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7f5d1330e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1330ec20"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1330edb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7f5d1330f860" loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7f5d1330f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1330fbe0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1330fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7f5d1330d270" loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7f5d1330d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d133096e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5d1330ccb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d1330aa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d1330a5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13308020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13309b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d1330a170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d1330de60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d133090d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d1330c360"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1330c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f5d13308c50" loc="42:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d13308c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f5d13307020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f5d133071b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f5d13307340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f5d133074d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f5d13307660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7f5d132d1380" loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7f5d132d1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d132d1700"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d132d1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d13310790" loc="30:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d13310790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d13310b10"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13310ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d13276a30" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d13276a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13276dd0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13240020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7f5d13271280" loc="50:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7f5d13271280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13271600"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13271790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d132702d0" loc="54:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d132702d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d13270650"/>
        <function-ref name="changed" scoped="" ref="0x7f5d132707e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d13270970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d13270b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d13270c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d13270e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d1326f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d1326f2a0" loc="55:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d1326f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d1326f620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d1326f7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d1326f940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d1326fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d1326fc60"/>
        <function-ref name="get" scoped="" ref="0x7f5d1326fdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d1326e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d1326e660"/>
        <function-ref name="set" scoped="" ref="0x7f5d1326e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d1326e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d1326e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f5d13271a80" loc="53:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d13271a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13271e00"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13270020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f5d11bfd9f0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f5d11bfd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11bfdd70"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11bfc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d11bfd1f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d11bfd1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11bfd590"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11bfd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d1323f9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d1323f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1323fd50"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1323e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f5d11bf3820" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f5d11bf3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11bf3ba0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11bf3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d11bf3020" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d11bf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11bf33c0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11bf3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d1323d9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d1323d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1323dd50"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1323c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f5d11be8020" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f5d11be8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11be83a0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11be8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d11be96a0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d11be96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11be9a40"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11be9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d1323b9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d1323b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1323bd50"/>
        <function-ref name="recv" scoped="" ref="0x7f5d1323a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f5d11bde5e0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f5d11bde5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11bde960"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11bdeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d11bdfdb0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d11bdfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11bde180"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11bde310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d132397b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d132397b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d13235c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d13236260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d13235020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d13236b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d13234590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d13234110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d132366e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d13238400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d13235630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d132388d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13238da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d13221020" loc="35:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d13221020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d132213a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d13221530"/>
        <function-ref name="start" scoped="" ref="0x7f5d132216c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d13221850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f5d1321f020" loc="37:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d1321f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f5d132288c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f5d13226090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1321c170"/>
        <function-ref name="get" scoped="" ref="0x7f5d1321fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f5d13221af0" loc="36:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f5d13221af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d13221e70"/>
        <function-ref name="recv" scoped="" ref="0x7f5d13220030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d132201c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d13219230" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d13219230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d132195b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5d13219870" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d13219870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d13219bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d13219d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d13218020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d132181b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d13218340"/>
        <function-ref name="get" scoped="" ref="0x7f5d132184d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d13218660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d13218ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d132187f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d13218980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d13218b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d132006d0" loc="43:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d132006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d13200a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d13200be0"/>
        <function-ref name="start" scoped="" ref="0x7f5d13200d70"/>
        <function-ref name="stop" scoped="" ref="0x7f5d131ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7f5d131db5f0" loc="68:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7f5d131db5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d131d8710"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d131dab10"/>
        <function-ref name="empty" scoped="" ref="0x7f5d131da210"/>
        <function-ref name="put" scoped="" ref="0x7f5d131d8020"/>
        <function-ref name="size" scoped="" ref="0x7f5d131da690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f5d131fe940" loc="49:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d131fe940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f5d132288c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f5d13226090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d131fda70"/>
        <function-ref name="get" scoped="" ref="0x7f5d131fd560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f5d131fc060" loc="53:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f5d131fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d131fc3e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d131fc570"/>
        <function-ref name="start" scoped="" ref="0x7f5d131fc700"/>
        <function-ref name="stop" scoped="" ref="0x7f5d131fc890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f5d131ffd60" loc="47:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f5d131ffd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d131fe180"/>
        <function-ref name="recv" scoped="" ref="0x7f5d131fe310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d131fe4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7f5d131ee020" loc="62:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f5d131ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f5d131ee3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f5d131ee530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f5d131decb0" loc="64:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d131decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5d131eb0a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5d131eb230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5d131eb3c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5d131eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d131ff720" loc="44:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d131ff720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d131ffaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f5d131d4c50" loc="70:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f5d131d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5d131d1ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5d131d0880"/>
        <function-ref name="element" scoped="" ref="0x7f5d131cf020"/>
        <function-ref name="full" scoped="" ref="0x7f5d131d3ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d131d1660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d131d01d0"/>
        <function-ref name="empty" scoped="" ref="0x7f5d131d3860"/>
        <function-ref name="size" scoped="" ref="0x7f5d131d11e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7f5d131cf900" loc="73:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7f5d131cf900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d131cbe80"/>
        <function-ref name="fired" scoped="" ref="0x7f5d131cc4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d131cb260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d131ccda0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d131ca7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d131ca320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d131cc920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d131cd560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d131cb870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d131cda30"/>
        <function-ref name="stop" scoped="" ref="0x7f5d131cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f5d12f526e0" loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f5d12f526e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12f52a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12f52bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f5d131f84e0" loc="60:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d131f84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f5d131f0340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f5d131f89f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f5d131f8b80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f5d131f8d10"/>
        <function-ref name="matchContext" scoped="" ref="0x7f5d131f0020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f5d131f8860"/>
        <function-ref name="getContext" scoped="" ref="0x7f5d131f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7f5d131eba10" loc="67:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7f5d131eba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d131dcc00"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d131dc090"/>
        <function-ref name="empty" scoped="" ref="0x7f5d131e3750"/>
        <function-ref name="put" scoped="" ref="0x7f5d131dc510"/>
        <function-ref name="size" scoped="" ref="0x7f5d131e3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d131cabc0" loc="75:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d131cabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d131c8020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d131c81b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d131c8340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d131c84d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d131c8660"/>
        <function-ref name="get" scoped="" ref="0x7f5d131c87f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d131c8980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d131c7020"/>
        <function-ref name="set" scoped="" ref="0x7f5d131c8b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d131c8ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d131c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7f5d131f90f0" loc="56:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5d131f90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d131f9470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d131f9600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d131f9790"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d131f9920"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d131f9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7f5d131fcbd0" loc="55:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5d131fcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d131fa020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d131fa1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d131fa340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d131fa4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d131fa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7f5d131ed020" loc="63:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5d131ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5d131ed3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5d131ed530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5d131ed6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5d131ed850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5d131ed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7f5d131d7150" loc="69:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7f5d131d7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d131d4260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d131d6660"/>
        <function-ref name="empty" scoped="" ref="0x7f5d131d7d40"/>
        <function-ref name="put" scoped="" ref="0x7f5d131d6ae0"/>
        <function-ref name="size" scoped="" ref="0x7f5d131d61e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7f5d131f9e20" loc="57:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5d131f9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d131f81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12f22420" loc="19:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f22420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12f227a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12f22930"/>
        <function-ref name="start" scoped="" ref="0x7f5d12f22ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12f22c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5d12f1ea30" loc="23:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5d12f1ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12f1edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5d12f1f020" loc="21:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5d12f1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12f1f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12f1f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12f1f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12f1f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d12f1f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5d12f1fd00" loc="22:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5d12f1fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12f1e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12f1e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12f1e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12f1e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12f1e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12f1db40" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f1db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12f1a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12f1a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f5d12f1a340"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12f1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5d12f02170" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12f02170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5d12f024f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5d12f0a470" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5d12f0a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5d12f0a7f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5d12f0a980"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5d12f0ab10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5d12f0aca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5d12f0ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5d12f0b640" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12f0b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12f0b9c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12f0bb50"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12f0bce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12f0be70"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12f14030"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12f141c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5d12f17d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12f17d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12f160e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12f16270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12f16400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12f16590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12f16720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5d12f027f0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12f027f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5d12f02b70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5d12f02d00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5d12f0a020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5d12f0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5d12f18820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5d12f18820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12f18ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5d12f13080" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12f13080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12f13400"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12f13590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d12f13720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d12f1ad00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12f1ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12f190a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12f19230"/>
        <function-ref name="request" scoped="" ref="0x7f5d12f193c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12f19550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12f196e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5d12f19a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5d12f19a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12f19d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12f18020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12f181b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12f18340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12f184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5d12f17020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5d12f17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12f173a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12f17530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12f176c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12f17850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d12f179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5d12f16a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12f16a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12f16e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12f05b20" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12f05b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12eff020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12eff1b0"/>
        <function-ref name="start" scoped="" ref="0x7f5d12eff340"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12eff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5d12ef5230" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12ef5230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5d12ef55b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5d12ef5740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5d12ef58d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5d12ef5a60"/>
        <function-ref name="setCca" scoped="" ref="0x7f5d12ef5bf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5d12ef5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12eff790" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12eff790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12effb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12effca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12effe30"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12efe020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12efe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12efe490" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12efe490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12efe810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12efdd90" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12efdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12ef3180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12ef3310"/>
        <function-ref name="start" scoped="" ref="0x7f5d12ef34a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12ef3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5d12ef2650" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12ef2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5d12ef29d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5d12ef2b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5d12ef2cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5d12ef2e80"/>
        <function-ref name="setCca" scoped="" ref="0x7f5d12ef1030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5d12ef11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5d12eede00" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5d12eede00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5d12eec1c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5d12eec350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5d12eec4e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5d12eec670"/>
        <function-ref name="setCca" scoped="" ref="0x7f5d12eec800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5d12eec990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5d12ee4b00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12ee4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12ee4e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12ee3030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12ee31c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12ee3350"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12ee34e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12ee3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f5d12eed080" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5d12eed080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12eed400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12eed590"/>
        <function-ref name="modify" scoped="" ref="0x7f5d12eed720"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12eed8b0"/>
        <function-ref name="resend" scoped="" ref="0x7f5d12eeda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12ef38f0" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12ef38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12ef3c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12ef3e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12ef2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12ef21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12ef2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5d12eecc60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d12eecc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d12ee5020"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d12ee51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5d12eee3e0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5d12eee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12eee760"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12eee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12edc130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12edc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12edc4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12edc640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12edc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f5d12eef1a0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5d12eef1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5d12eef520"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5d12eef6b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5d12eef840"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5d12eef9d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5d12eefb60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5d12eefcf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5d12eefe80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5d12eee030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d12ee5470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d12ee5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d12ee57f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d12ee5980"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d12ee5b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12ee5ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d12ee5e30"/>
        <function-ref name="get" scoped="" ref="0x7f5d12ee4020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d12ee41b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d12ee47f0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12ee4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d12ee44d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d12ee4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5d12ef14b0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12ef14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12ef1830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12ef19c0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12ef1b50"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12ef1ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12ef1e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f5d12edcb90" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f5d12edcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12ee20a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12ee2230"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12ee23c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12ee2550"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12ee26e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12ee2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f5d12ed75d0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f5d12ed75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12ed7950"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12ed7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f5d12ed8660" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f5d12ed8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12ed89e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12ed8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f5d12ed9730" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f5d12ed9730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12ed9ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12ed9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5d12e8b020" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5d12e8b3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5d12e8b530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5d12e8b6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5d12e8b850"/>
        <function-ref name="setCca" scoped="" ref="0x7f5d12e8b9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5d12e8bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5d12e8aca0" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5d12e8aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5d12e890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f5d12e8c300" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5d12e8c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12e8c680"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12e8c810"/>
        <function-ref name="modify" scoped="" ref="0x7f5d12e8c9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12e8cb30"/>
        <function-ref name="resend" scoped="" ref="0x7f5d12e8ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d12e8f9b0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d12e8f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12e8fd30"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f5d12e89470" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f5d12e89470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5d12e897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5d12e7fcf0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5d12e7fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5d12e7d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5d12e7d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5d12e7d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5d12e7d550"/>
        <function-ref name="setCca" scoped="" ref="0x7f5d12e7d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5d12e7d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5d12e74200" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5d12e74200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5d12e6d7c0"/>
        <function-ref name="clear" scoped="" ref="0x7f5d12e6c020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5d12e6d090"/>
        <function-ref name="set" scoped="" ref="0x7f5d12e6c750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5d12e58990" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12e58990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e58d10"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5d12e57380" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d12e57380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e57700"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e57890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5d12e7dc90" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5d12e7dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5d12e7c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f5d12e5ce60" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12e5ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12e5a210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f5d12e6a1e0" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5d12e6a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5d12e6a560"/>
        <function-ref name="disable" scoped="" ref="0x7f5d12e6a6f0"/>
        <function-ref name="captured" scoped="" ref="0x7f5d12e6a880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5d12e6aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f5d12e7b020" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f5d12e7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12e79870"/>
        <function-ref name="fired" scoped="" ref="0x7f5d12e7a840"/>
        <function-ref name="startAt" scoped="" ref="0x7f5d12e79220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12e7ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5d12e79d30"/>
        <function-ref name="start" scoped="" ref="0x7f5d12e7be30"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12e7a380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5d12e77210" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12e77210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12e77590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12e77720"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12e778b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12e77a40"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12e77bd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12e77d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f5d12e5ed80" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12e5ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e5d180"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e5d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5d12e5d6b0" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12e5d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e5da30"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e5dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f5d12e4f780" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12e4f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12e4fb00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5d12e4fc90"/>
        <function-ref name="sfd" scoped="" ref="0x7f5d12e4fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12e7f020" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12e7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12e7f3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12e7f530"/>
        <function-ref name="modify" scoped="" ref="0x7f5d12e7f6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12e7f850"/>
        <function-ref name="resend" scoped="" ref="0x7f5d12e7f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f5d12e5f4e0" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12e5f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d12e5f860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d12e5f9f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d12e5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f5d12e5a5c0" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12e5a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12e5a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5d12e67080" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5d12e67080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12e67400"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12e67590"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12e67720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d12e678b0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12e67a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d12e67bd0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12e67d60"/>
        <function-ref name="clr" scoped="" ref="0x7f5d12e61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12e80020" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12e80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d12e803a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12e760c0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12e760c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12e76440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12e765d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12e76760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f5d12e62570" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12e62570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12e628f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5d12e62a80"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12e62c10"/>
        <function-ref name="set" scoped="" ref="0x7f5d12e62da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5d12e5ad00" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12e5ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e59410"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e595a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5d12e606e0" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5d12e606e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12e60a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12e60bf0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12e60d80"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12e5f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12e5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f5d12e6ad60" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5d12e6ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12e69210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12e693a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12e69530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d12e696c0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12e69850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d12e699e0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12e69b70"/>
        <function-ref name="clr" scoped="" ref="0x7f5d12e69d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5d12e57bf0" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d12e57bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e56020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e561b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f5d12e56530" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12e56530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e568b0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e56a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f5d12e5c020" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d12e5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12e5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f5d12e61370" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5d12e61370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12e616f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12e61880"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12e61a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d12e61ba0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12e61d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d12e60020"/>
        <function-ref name="set" scoped="" ref="0x7f5d12e601b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d12e60340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d12e55110" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d12e55110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d12e55490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d12e55620"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d12e557b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12e55940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d12e55ad0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12e55c60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d12e55df0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d12e544d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12e54020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d12e541b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d12e54340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f5d12e580c0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12e580c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12e58440"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e585d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d12e806a0" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d12e806a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12e80a20"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12e80bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f5d12e5e020" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12e5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d12e5e3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d12e5e530"/>
        <function-ref name="write" scoped="" ref="0x7f5d12e5e6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d12e5e850"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d12e5e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f5d12e5c730" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5d12e5c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12e5cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f5d12e59930" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5d12e59930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12e59cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f5d12e7c4b0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f5d12e7c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5d12e7c830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5d12db4c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d12db4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db3210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5d12dbe020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5d12dbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5d12db8c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d12db8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db7020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5d12db2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12db2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db29f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5d12dabe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5d12dabe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12daa210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12daa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5d12db2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5d12db2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db1210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5d12d9e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12d9e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d9e670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d9e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5d12da12f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d12da12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da1670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5d12dbd370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12dbd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5d12da6670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5d12da6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da69f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5d12da22f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12da22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da2670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5d12db7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5d12db7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db6020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5d12db6c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12db6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db4020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5d12dac670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5d12dac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12dac9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dacb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5d12dafe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5d12dafe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12dad210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5d12db1670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5d12db1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db19f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d12dc08f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12dc08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d12dc0c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d12dc0e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d12dbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5d12dbcd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12dbcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dba0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5d12dba370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5d12dba370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5d12da5a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d12da5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da5df0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5d12dbaac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5d12dbaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5d12da2ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12da2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da2e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5d12dbc060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d12dbc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbc3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5d12da8e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5d12da8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da6210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5d12db6480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d12db6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db6800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5d12db7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12db7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db7800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5d12dbf940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5d12dbf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5d12da9e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d12da9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da8210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5d12daa670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5d12daa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12daa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12daab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5d12da8670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d12da8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da89f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5d12d9fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12d9fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d9fe50"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5d12da1ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d12da1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da1e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5d12dad670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5d12dad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12dad9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dadb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5d12daae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5d12daae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da9210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5d12da3ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5d12da3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da3e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5d12db0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5d12db0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db09f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5d12d9ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12d9ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d12d9ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d12d9d020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d9d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d12d9d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d12d9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5d12dbf2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d12dbf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5d12db8490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5d12db8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db8810"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5d12db4480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d12db4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db4800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5d12dace50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5d12dace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12dab210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5d12db1e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5d12db1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db0210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5d12dab670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5d12dab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12dab9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dabb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5d12db3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5d12db3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db39f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5d12dbe670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5d12dbe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbe9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5d12db3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12db3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12db2210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12db23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d12dc1c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12dc1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12dc0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12dc01b0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12dc0340"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12dc04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12dc0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5d12db9160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12db9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12db94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5d12db9e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5d12db9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12db81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5d12da32f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5d12da32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da3670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5d12da4ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5d12da4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da4e50"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5d12dbc6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12dbc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5d12da42f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d12da42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da4670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5d12d9f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5d12d9f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d9f670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d9f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5d12dade50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d12dade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12dac210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5d12da9670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5d12da9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da99f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5d12dbecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5d12dbecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5d12dbd9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5d12dbd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12dbdd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5d12db0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5d12db0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12daf210"/>
        <function-ref name="write" scoped="" ref="0x7f5d12daf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5d12db97b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5d12db97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12db9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5d12daf670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5d12daf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12daf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12dafb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5d12da6e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5d12da6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12da5610"/>
        <function-ref name="write" scoped="" ref="0x7f5d12da57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5d12d9d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12d9d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d12d9db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d12d9dcb0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d9de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d12d9c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d12d9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f5d12d91df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12d91df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12d8e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5d12d8e350"/>
        <function-ref name="sfd" scoped="" ref="0x7f5d12d8e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12d8e7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12d8e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12d8eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f5d12d8d020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f5d12d8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5d12d8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d12d915c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d12d915c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12d91940"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12d91ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f5d12d85380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5d12d85380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12d85700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12d85890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12d85a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d12d85bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12d85d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d12d84020"/>
        <function-ref name="set" scoped="" ref="0x7f5d12d841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d12d84340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5d12d7eb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5d12d7eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5d12d7d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5d12d7d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5d12d7d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5d12d7d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5d12d7d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5d12d7d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5d12d7d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5d12d7db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5d12d7dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5d12d7de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5d12d7c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5d12d7c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f5d12d7c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5d12d7c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5d12d7c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f5d12d679d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f5d12d679d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12d67d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12d66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5d12d7cd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5d12d7cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5d12d7a330"/>
        <function-ref name="clear" scoped="" ref="0x7f5d12d7aa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f5d12d7bba0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12d78210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f5d12d846b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5d12d846b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12d84a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12d84bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12d84d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d12d83020"/>
        <function-ref name="get" scoped="" ref="0x7f5d12d831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d12d83340"/>
        <function-ref name="set" scoped="" ref="0x7f5d12d834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5d12d83660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5d12d77cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12d77cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d760a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d76230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5d12d76590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d12d76590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d76910"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d76aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f5d12d756d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12d756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d75a50"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d75be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5d12d7f330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d7f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12d7f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12d7f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12d7f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12d7fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12d7fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12d7fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f5d12d89550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5d12d89550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12d898d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5d12d89a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f5d12d89bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f5d12d803a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5d12d803a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12d80720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5d12d86020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5d12d86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12d863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12d86530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12d866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d12d86850"/>
        <function-ref name="get" scoped="" ref="0x7f5d12d869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d12d86b70"/>
        <function-ref name="set" scoped="" ref="0x7f5d12d86d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5d12d85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f5d12d74020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12d74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d743a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d74530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12d8a620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12d8a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d12d8a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12d7e1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d7e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12d7e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12d7e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12d7e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12d88020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12d88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12d883a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5d12d826e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5d12d826e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12d82a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12d82bf0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12d82d80"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12d81020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12d811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5d12d76e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d12d76e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d751c0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d75350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f5d12d81530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12d81530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d12d818b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d12d81a40"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d81bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d12d81d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d12d80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f5d12d748b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d12d748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12d74e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f5d12d887c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f5d12d887c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5d12d88b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d12d73150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d12d73150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d12d734d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d12d73660"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d12d737f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12d73980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d12d73b10"/>
        <function-ref name="get" scoped="" ref="0x7f5d12d73ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d12d73e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d12d724d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12d72020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d12d721b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d12d72340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f5d12d773e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12d773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12d77760"/>
        <function-ref name="write" scoped="" ref="0x7f5d12d778f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f5d12d78b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12d78b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12d77020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f5d12d83a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5d12d83a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d12d83dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f5d12d82020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5d12d821b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5d12d82340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f5d12d80ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12d80ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12d7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d12d8aca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d12d8aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12d890a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12d89230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5d12d06a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12d06a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5d12d06df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5d12d0a670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12d0a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12d0a9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12d0ab80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12d0ad10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12d07020"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12d071b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12d07340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5d12d05550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5d12d05550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5d12d04b00"/>
        <function-ref name="clear" scoped="" ref="0x7f5d12d032a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5d12d043d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12d039d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5d12d060c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12d060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12d06440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12d065d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12d06760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5d12cfd480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12cfd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12cfd800"/>
        <function-ref name="isSet" scoped="" ref="0x7f5d12cfd990"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12cfdb20"/>
        <function-ref name="set" scoped="" ref="0x7f5d12cfdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5d12d01660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5d12d01660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5d12d00ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f5d12cff460"/>
        <function-ref name="isValid" scoped="" ref="0x7f5d12d005b0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12cffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5d12d076e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5d12d076e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12d07a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12d07bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d12d07d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5d12cf6020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5d12cf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5d12cf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5d12cfcd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12cfcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12cf80e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12cf8270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12cf8400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12cf8590"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12cf8720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12cf88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5d12ced4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d12ced4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12ced820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12ced9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12cedb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12cedcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d12cede60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5d12cf6a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5d12cf6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5d12cf4020"/>
        <function-ref name="clear" scoped="" ref="0x7f5d12cf4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5d12cf58d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12cf4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5d12cf7640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12cf7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12cf79c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12cf7b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12cf7ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5d12cee8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5d12cee8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12ceec30"/>
        <function-ref name="isSet" scoped="" ref="0x7f5d12ceedc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12ced020"/>
        <function-ref name="set" scoped="" ref="0x7f5d12ced1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f5d12cec3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5d12cec3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12ceb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f5d12ceb6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5d12ceb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12cea3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5d12cf2af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5d12cf2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5d12cf00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f5d12cf0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f5d12cf1970"/>
        <function-ref name="set" scoped="" ref="0x7f5d12cee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5d12cf8c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5d12cf8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12cf7020"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12cf71b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d12cf7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5d12c9bcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5d12c9bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12c9a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5d12c99020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d12c99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12c99e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d12c97800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d12c97340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d12c97cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d12c940b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d12c940b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12c90630"/>
        <function-ref name="fired" scoped="" ref="0x7f5d12c93b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d12c92920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d12c924a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d12c8f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d12c90ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12c92020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d12c94ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d12c90020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d12c931b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12c93680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5d12c7f620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5d12c7f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7fba0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5d12c8a940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5d12c8a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c8acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5d12c82620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5d12c82620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c829a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c82b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5d12c7c060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5d12c7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7c3e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5d12c75840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5d12c75840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c75bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c75d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5d12c7c840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5d12c7c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5d12c6ac60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5d12c6ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c69020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5d12c6cc60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5d12c6cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6b020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5d12c88cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5d12c88cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c870a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5d12c71060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5d12c71060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c713e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c71570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5d12c6dc60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5d12c6dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6c020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5d12c81620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5d12c81620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c819a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c81b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5d12c80620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5d12c80620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c809a0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c80b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5d12c77060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5d12c77060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c773e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c77570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5d12c79840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5d12c79840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c79bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c79d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5d12c7b060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5d12c7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5d12c8b2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5d12c8b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5d12c8b630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5d12c8b7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5d12c8b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5d12c866b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5d12c866b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c86a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5d12c86d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5d12c86d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c851c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5d12c70480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5d12c70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c70800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c70990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5d12c85490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5d12c85490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c85810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5d12c6c480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5d12c6c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6c800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5d12c879c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5d12c879c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c87d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5d12c72840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5d12c72840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c72bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c72d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5d12c81e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5d12c81e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c801c0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c80350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5d12c82e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5d12c82e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c811c0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c81350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5d12c8a2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5d12c8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c8a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5d12c73840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5d12c73840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c73bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c73d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5d12c74060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5d12c74060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c743e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c74570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5d12c72060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5d12c72060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c723e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c72570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5d12c6a480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5d12c6a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6a800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5d12c6b480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5d12c6b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6b800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5d12c78060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5d12c78060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c783e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c78570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5d12c74840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5d12c74840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c74bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c74d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5d12c6d480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5d12c6d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6d800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5d12c7a060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5d12c7a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5d12c69480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5d12c69480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d12c69800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d12c69990"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c69b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d12c69cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d12c69e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5d12c8bc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5d12c8bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5d12c84e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5d12c84e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c821c0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c82350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5d12c80e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5d12c80e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7f1c0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5d12c77840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5d12c77840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c77bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c77d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5d12c7b840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5d12c7b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5d12c75060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5d12c75060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c753e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c75570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5d12c7e060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5d12c7e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7e3e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5d12c88020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5d12c88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5d12c7e840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5d12c7e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7ebc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d12c8c520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12c8c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12c8c8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12c8ca30"/>
        <function-ref name="request" scoped="" ref="0x7f5d12c8cbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12c8cd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12c8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5d12c85ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5d12c85ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c85e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5d12c847b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5d12c847b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c84b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5d12c6ec60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5d12c6ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6d020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5d12c6e480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5d12c6e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6e800"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5d12c86060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5d12c86060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c863e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5d12c70c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5d12c70c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6e020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5d12c6bc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5d12c6bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c6a020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5d12c78840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5d12c78840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c78bc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c78d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5d12c73060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5d12c73060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c733e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c73570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5d12c88670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5d12c88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c889f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5d12c87370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5d12c87370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c876f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5d12c7a840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5d12c7a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c7abc0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c7ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5d12c84160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5d12c84160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5d12c844e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5d12c79060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5d12c79060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c793e0"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c79570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5d12c71840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5d12c71840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5d12c70020"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5d12c67160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5d12c67160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5d12c674e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5d12c67670"/>
        <function-ref name="write" scoped="" ref="0x7f5d12c67800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5d12c67990"/>
        <function-ref name="readDone" scoped="" ref="0x7f5d12c67b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d12c41390" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d12c41390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12c41710"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12c418a0"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12c41a30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12c41bc0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12c41d50"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12c3c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12c33b50" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12c33b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12c32020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12c321b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12c32340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12c324d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12c32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12c36dd0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12c36dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12c33180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12c33310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12c334a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12c33630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12c337c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12c2db40" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12c2db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12c2c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12c2c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12c2c340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12c2c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12c2c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12c2f660" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12c2f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12c2f9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12c2fb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12c2fd00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12c2d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12c2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5d12c2b760" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5d12c2b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5d12c2bae0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5d12c2bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12c2d430" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12c2d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d12c2d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12c2a020" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12c2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12c2a3a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12c2a530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12c2a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f5d12c2c8f0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d12c2c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12c2cc70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12c2ce00"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12c2b020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12c2b1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12c2b340"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12c2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d12c30690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d12c30690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12c30a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12c30ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12c30d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12c19020"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12c191b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12c19340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5d12c13950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5d12c13950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12c13cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12c16aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12c16aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12c16e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5d12c13200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5d12c13200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12c13580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5d12c0e3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5d12c0e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12c0e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12c0fb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12c0fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d12c0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12c12e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12c12e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12c0f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12c0ea70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12c0ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12c0edf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12c0d020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12c0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5d12c0f570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5d12c0f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12c0f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5d12bdf020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5d12bdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12bdf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12bdf6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12bdf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12bdfa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12bdfbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12bdfd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12bde020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12bde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12be48e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12be48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12be4c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12be4df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12be2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12be21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12be2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5d12be2c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12be2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12be10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12be1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12be13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12be1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12be16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12be25e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12be25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12be2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d12be5be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12be5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12be4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12be41b0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12be4340"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12be44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12be4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5d12be1a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12be1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12be1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5d12be0170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5d12be0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12be04f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12be0680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12be0810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12be09a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d12be0b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12bd5d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12bd5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12bd4180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12bd4310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12bd44a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12bd4630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12bd47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5d12bd4b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5d12bd4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12bd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f5d12ba6db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f5d12ba6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12ba5180"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12ba5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5d12bd32f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12bd32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12bd3670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12bd3800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12bd3990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12bd3b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12bd3cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12bd3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5d12bd8a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5d12bd8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12bd8da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12bd7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12bd71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12bd7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12bd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5d12bd2b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d12bd2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5d12bd1020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5d12bd11b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5d12bd1340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d12bd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12bd2170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12bd2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12bd24f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12bd2680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12bd2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5d12bd8370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5d12bd8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12bd86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d12bda7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12bda7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12bdab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12bdacc0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12bdae50"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12bd9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12bd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5d12bd94d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5d12bd94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12bd9850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12bd99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12bd9b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12bd9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12bd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5d12bd7840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5d12bd7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12bd7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5d12bd5020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5d12bd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12bd53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12bd5530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12bd56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12bd5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d12bd59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12b86dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12b86dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d12b85180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5d12b85410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5d12b85410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5d12b85790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5d12b85920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5d12b85ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d12b85c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12b7ab80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12b7ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12b78020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12b781b0"/>
        <function-ref name="start" scoped="" ref="0x7f5d12b78340"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12b784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12b77860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12b77860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12b77be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b77d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12b76020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12b761b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12b76340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5d12b76690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5d12b76690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12b76a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12b7ece0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12b7ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12b7b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b7b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12b7b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12b7b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12b7b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5d12b7a080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12b7a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5d12b7a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5d12b7a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5d12b7a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5d12b7a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f5d12b78800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f5d12b78800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12b78b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12b78d10"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12b77020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12b771b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12b77340"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12b774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5d12b76d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5d12b76d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12b75180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12b75310"/>
        <function-ref name="start" scoped="" ref="0x7f5d12b754a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12b75630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d12b7b980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d12b7b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12b7bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5d12b722d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12b722d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5d12b72650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5d12b727e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5d12b72970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5d12b72b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d12b74580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d12b74580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12b74900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12b74a90"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12b74c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12b74db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12b73020"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12b731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12b65d70" loc="47:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12b65d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12b64180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b64310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12b644a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12b64630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12b647c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12b662a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12b662a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12b66620"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b667b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12b66940"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12b66ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12b66c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5d12b65020" loc="43:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5d12b653a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5d12b65530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5d12b656c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5d12b65850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5d12b659e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d12b60dd0" loc="47:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d12b60dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12b5f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b5f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12b5f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12b5f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12b5f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f5d12b542a0" loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f5d12b542a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12b54620"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12b547b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f5d12b5d650" loc="50:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f5d12b5d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12b59c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d12b5a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d12b59020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d12b5aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d12b58590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d12b58110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12b5a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d12b5c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d12b59630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d12b5c860"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12b5cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12b633a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12b633a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12b63720"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b638b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12b63a40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12b63bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12b63d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f5d12b5faf0" loc="48:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f5d12b5faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12b5fe70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12b5e030"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12b5e1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12b5e350"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12b5e4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12b5e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5d12b58a30" loc="51:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5d12b58a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12b58db0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5d12b57020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5d12b571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5d12b5e9a0" loc="49:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12b5e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12b5ed20"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12b5d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d12b5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5d12b60080" loc="43:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b60080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5d12b60400"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5d12b60590"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5d12b60720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5d12b608b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5d12b60a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5d12b2a350" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5d12b2a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5d12b2a6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5d12b2a860"/>
        <function-ref name="isState" scoped="" ref="0x7f5d12b2a9f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5d12b2ab80"/>
        <function-ref name="requestState" scoped="" ref="0x7f5d12b2ad10"/>
        <function-ref name="forceState" scoped="" ref="0x7f5d12b29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d12b28750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d12b28750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12b24c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5d12b251e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d12b24020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d12b25ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d12b23590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d12b23110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12b25660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d12b27390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d12b24630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d12b27860"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12b27d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5d12f20dd0" loc="11:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5d12f20dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5d12b10180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5d12b10310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5d12b104a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5d12b10630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5d12b0f670" loc="13:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12b0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12b0f9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12b0fb80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d12b0fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5d12b108f0" loc="12:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5d12b108f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5d12b10c70"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5d12b10e00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5d12b0f020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5d12b0f1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5d12b0f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f5d12b0b020" loc="12:../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f5d12b0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f5d12b0b3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f5d12b0b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5d12b05c70" loc="10:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5d12b05c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5d12b04020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5d12b041b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5d12b04340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5d12b044d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f5d12b04660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5d12b047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f5d12b05450" loc="9:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f5d12b05450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f5d12b057d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f5d12b05960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d12b0ce70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d12b0ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12afc390"/>
        <function-ref name="fired" scoped="" ref="0x7f5d12aff970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d12afd720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d12afd2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d12afcc90"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d12afc810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12affdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d12b09a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d12afdd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d12aff020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12aff4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d12af5a40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d12af5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12acfb90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12acf020"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12ad0670"/>
        <function-ref name="put" scoped="" ref="0x7f5d12acf4a0"/>
        <function-ref name="size" scoped="" ref="0x7f5d12ad0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d11afa210" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d11afa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d11af7330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d11af9780"/>
        <function-ref name="empty" scoped="" ref="0x7f5d11afae00"/>
        <function-ref name="put" scoped="" ref="0x7f5d11af9c00"/>
        <function-ref name="size" scoped="" ref="0x7f5d11af9300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11afbaf0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11afbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11afbe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d12acb020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d12acb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12ac8110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12aca550"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12acbc10"/>
        <function-ref name="put" scoped="" ref="0x7f5d12aca9d0"/>
        <function-ref name="size" scoped="" ref="0x7f5d12aca0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d11ae8d80" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d11ae8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d11ae6e70"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d11ae6300"/>
        <function-ref name="empty" scoped="" ref="0x7f5d11ae79a0"/>
        <function-ref name="put" scoped="" ref="0x7f5d11ae6780"/>
        <function-ref name="size" scoped="" ref="0x7f5d11ae7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11ae8690" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11ae8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11ae8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f5d12ac5850" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d12ac5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f5d13ecfd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5d12aa86e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5d12aa7490"/>
        <function-ref name="element" scoped="" ref="0x7f5d12aa7b00"/>
        <function-ref name="full" scoped="" ref="0x7f5d12aa9900"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12aa8260"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d12aa8d90"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12aa9480"/>
        <function-ref name="size" scoped="" ref="0x7f5d12aa9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d12aa3020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d12aa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12aa1110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12aa2550"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12aa3c10"/>
        <function-ref name="put" scoped="" ref="0x7f5d12aa29d0"/>
        <function-ref name="size" scoped="" ref="0x7f5d12aa20d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d11abe020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d11abe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d11abc110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d11abd550"/>
        <function-ref name="empty" scoped="" ref="0x7f5d11abec10"/>
        <function-ref name="put" scoped="" ref="0x7f5d11abd9d0"/>
        <function-ref name="size" scoped="" ref="0x7f5d11abd0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11ac0900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11ac0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11ac0c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12a97440" loc="11:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12a97440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12a977c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12a97950"/>
        <function-ref name="start" scoped="" ref="0x7f5d12a97ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12a97c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7f5d12a931a0" loc="16:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7f5d12a931a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12a93520"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12a936b0"/>
        <function-ref name="start" scoped="" ref="0x7f5d12a93840"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12a939d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7f5d12a93dd0" loc="17:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f5d12a93dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12a92180"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12a92310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d12a925c0" loc="18:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d12a925c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d12a92940"/>
        <function-ref name="changed" scoped="" ref="0x7f5d12a92ad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d12a92c60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d12a92df0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d12a91020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d12a911b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d12a91340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f5d12a948c0" loc="15:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f5d12a948c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12a94c40"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12a94dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f5d12a94020" loc="14:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d12a94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12a943a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12a94530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7f5d12a78020" loc="15:../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f5d12a78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f5d12a783a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f5d12a78530"/>
        <function-ref name="findTLV" scoped="" ref="0x7f5d12a786c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d12a5fa40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d12a5fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f5d14472110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12a5cb90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12a5c020"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12a5d670"/>
        <function-ref name="put" scoped="" ref="0x7f5d12a5c4a0"/>
        <function-ref name="size" scoped="" ref="0x7f5d12a5daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d11aacd10" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d11aacd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f5d14472110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d11aaae10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d11aaa2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f5d11aab940"/>
        <function-ref name="put" scoped="" ref="0x7f5d11aaa720"/>
        <function-ref name="size" scoped="" ref="0x7f5d11aabdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11aac620" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11aac620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11aac9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5d12a59970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5d12a59970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d1467fdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5d144a5200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5d12a56e80"/>
        <function-ref name="fired" scoped="" ref="0x7f5d12a574a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5d12a56260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5d12a57da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5d12a557a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5d12a55320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5d12a57920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5d12a585a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5d12a56870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5d12a58a70"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12a57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f5d12a49ae0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d12a49ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5d12a47990"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5d12a45740"/>
        <function-ref name="element" scoped="" ref="0x7f5d12a45db0"/>
        <function-ref name="full" scoped="" ref="0x7f5d12a48bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12a47510"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d12a45090"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12a48750"/>
        <function-ref name="size" scoped="" ref="0x7f5d12a47090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d12a424a0" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d12a424a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12a3f570"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12a409d0"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12a400d0"/>
        <function-ref name="put" scoped="" ref="0x7f5d12a40e50"/>
        <function-ref name="size" scoped="" ref="0x7f5d12a40550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5d11a8a020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f5d11a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f5d143bf020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f5d143bf4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d11a88110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d11a89550"/>
        <function-ref name="empty" scoped="" ref="0x7f5d11a8ac10"/>
        <function-ref name="put" scoped="" ref="0x7f5d11a899d0"/>
        <function-ref name="size" scoped="" ref="0x7f5d11a890d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d11a8c900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d11a8c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d11a8cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f5d12a36540" loc="8:../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f5d12a36540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5d12a368c0"/>
        <function-ref name="OCP" scoped="" ref="0x7f5d12a36a50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f5d12a36be0"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d12a36d70"/>
        <function-ref name="resetRank" scoped="" ref="0x7f5d12a33020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f5d12a331b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f5d12a33340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f5d12a334d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f5d12a33660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f5d12a337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7f5d12a2c260" loc="43:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7f5d12a2c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12a2c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f5d12a2c9b0" loc="44:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f5d12a2c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f5d12a2cd30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f5d12a2b020"/>
        <function-ref name="startDAO" scoped="" ref="0x7f5d12a2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f5d12a32360" loc="40:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f5d12a32360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5d12a326e0"/>
        <function-ref name="OCP" scoped="" ref="0x7f5d12a32870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f5d12a32a00"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d12a32b90"/>
        <function-ref name="resetRank" scoped="" ref="0x7f5d12a32d20"/>
        <function-ref name="getOCP" scoped="" ref="0x7f5d12a2f020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f5d12a2f1b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f5d12a2f340"/>
        <function-ref name="getParent" scoped="" ref="0x7f5d12a2f4d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f5d12a2f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f5d12a2e8b0" loc="42:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f5d12a2e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f5d12a2ec30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d12a2dca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f5d12a2de30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f5d12a2d1b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d12a2d340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f5d12a2d4d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d12a2d660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f5d12a2d7f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f5d12a2d020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f5d12a2d980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f5d12a2db10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f5d12a2edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f5d12a2f990" loc="41:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f5d12a2f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f5d12a2fd10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f5d12a2e020"/>
        <function-ref name="delRoute" scoped="" ref="0x7f5d12a2e1b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f5d12a2e340"/>
        <function-ref name="addRoute" scoped="" ref="0x7f5d12a2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f5d12a2b540" loc="45:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f5d12a2b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f5d12a2b8c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7f5d12a2ba50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f5d12a2bbe0"/>
        <function-ref name="hasParent" scoped="" ref="0x7f5d12a2bd70"/>
        <function-ref name="validInstance" scoped="" ref="0x7f5d12a2a020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f5d12a2a1b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f5d12a2a340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5d12a2a4d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f5d12a2a660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f5d12a2a7f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f5d12a2a980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f5d12a2ab10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f5d12a2aca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f5d12a29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d129f0840" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d129f0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d129f0be0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d129f0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f5d11a76ae0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f5d11a76ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11a76e60"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11a75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d11a762e0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d11a762e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11a76680"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11a76810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d129da5c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d129da5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d129da940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d129daad0"/>
        <function-ref name="start" scoped="" ref="0x7f5d129dac60"/>
        <function-ref name="stop" scoped="" ref="0x7f5d129dadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5d129d6600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d129d6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d129d6980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d129d6b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d129d6ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d129d6e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d129d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5d129d5e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d129d5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d129d31c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d129d3350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d129d34e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d129d3670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d129d3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d129d5800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d129d5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d129d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d129c3300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d129c3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d129c3680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d129c3810"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d129c39a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d129c3b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d129c3cc0"/>
        <function-ref name="get" scoped="" ref="0x7f5d129c3e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d129bd020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d129bd660"/>
        <function-ref name="set" scoped="" ref="0x7f5d129bd1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d129bd340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d129bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5d129d1800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d129d1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d129d1b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d129d1d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d129c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5d129d2020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5d129d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5d129d23a0"/>
        <function-ref name="source" scoped="" ref="0x7f5d129d2530"/>
        <function-ref name="address" scoped="" ref="0x7f5d129d26c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5d129d2850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d129d29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5d129d2b70"/>
        <function-ref name="type" scoped="" ref="0x7f5d129d2d00"/>
        <function-ref name="setType" scoped="" ref="0x7f5d129d1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5d129d11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5d129d1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5d129d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5d129634a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5d129634a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12963820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d129639b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12963b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12963cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12963e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5d12962120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5d12962120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d129624a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5d129bb300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d129bb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d129bb6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d129bb830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d129bb9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d129bbb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d129bbce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5d12965d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d12965d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12964180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12964310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d129644a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12964630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d129647c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d129660d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d129660d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12966470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5d12964a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5d12964a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12964d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12963020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d129631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5d129666c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5d129666c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5d12966a40"/>
        <function-ref name="source" scoped="" ref="0x7f5d12966bd0"/>
        <function-ref name="address" scoped="" ref="0x7f5d12966d60"/>
        <function-ref name="destination" scoped="" ref="0x7f5d12965020"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d129651b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5d12965340"/>
        <function-ref name="type" scoped="" ref="0x7f5d129654d0"/>
        <function-ref name="setType" scoped="" ref="0x7f5d12965660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5d129657f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5d12965980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5d12965b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d12960b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d12960b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d1295d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d1295d1b0"/>
        <function-ref name="start" scoped="" ref="0x7f5d1295d340"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1295d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d1295b790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d1295b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5d146948e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1295bb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d1295bca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d1295be30"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d1295a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d1295a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12960540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12960540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d129608c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d1295dc60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d1295dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5d146948e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d1295b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d129592b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d129592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d12959630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d129597c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d12959950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12959ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d12959c70"/>
        <function-ref name="get" scoped="" ref="0x7f5d12959e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d12958020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d12958660"/>
        <function-ref name="set" scoped="" ref="0x7f5d129581b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d12958340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d129584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f5d12954970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5d12954970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5d146948e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5d12954cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f5d12954e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5d12959030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5d129517c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5d129517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d12951b40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d12951cd0"/>
        <function-ref name="start" scoped="" ref="0x7f5d12951e60"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12950020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f5d128eb6e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f5d128eb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d128eba60"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d128ebbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5d12940860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f5d12940860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12940be0"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12940d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f5d129224f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f5d129224f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12922870"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12922a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12951170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12951170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d129514f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f5d1293c480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f5d1293c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f5d1293c800"/>
        <function-ref name="flush" scoped="" ref="0x7f5d1293c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f5d128efc70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f5d128efc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d128ed020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d128ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f5d12949020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5d12949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5d129493a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5d12949530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5d129496c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5d12949850"/>
        <function-ref name="putData" scoped="" ref="0x7f5d129499e0"/>
        <function-ref name="putDone" scoped="" ref="0x7f5d12949b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5d12949d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d12946020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d12946020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d129463a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d12946530"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d129466c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12946850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d129469e0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12946b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d12946d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d129404d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12940020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d129401b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d12940340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f5d128e8a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5d128e8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d128e8d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d128e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f5d1294b720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5d1294b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5d1294baa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5d1294bc30"/>
        <function-ref name="startSend" scoped="" ref="0x7f5d1294bdc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5d1294f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f5d12947c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5d12947c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5d1294e020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5d1294e1b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5d1294e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f5d1281c020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f5d1281c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d1281c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d1281c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12822de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12822de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5d146948e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d128211c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12821350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d128214e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12821670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12821800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f5d1281c800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f5d1281c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d1281cb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d1281cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5d128226c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5d128226c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5d146948e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5d12822a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f5d12821c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f5d12821c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5d146948e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5d12820020"/>
        <function-ref name="offset" scoped="" ref="0x7f5d128201b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5d12820340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d1281f920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d1281f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d1281fca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d1281fe30"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d1281d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d1281d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d1281d340"/>
        <function-ref name="get" scoped="" ref="0x7f5d1281d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d1281d660"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d1281dca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d1281d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d1281d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d1281db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f5d12820e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5d12820e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5d1281f220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5d1281f3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f5d1281f540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5d1281f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f5d12820590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5d12820590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5d12820910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5d12820aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5d12820c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f5d1280dd20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5d1280dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d128150e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5d12815270"/>
        <function-ref name="receive" scoped="" ref="0x7f5d12815400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5d12815590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5d12815720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5d128158b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12815a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f5d1281ae00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5d1281ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5d128171c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5d12817350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5d128174e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5d12817670"/>
        <function-ref name="putData" scoped="" ref="0x7f5d12817800"/>
        <function-ref name="putDone" scoped="" ref="0x7f5d12817990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5d12817b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d12815cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d12815cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d128140a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d12814230"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d128143c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12814550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d128146e0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12814870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d12814a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d1280a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12814b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d12814d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d1280a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5d127ee020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5d127ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d127ee3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5d127ee530"/>
        <function-ref name="receive" scoped="" ref="0x7f5d127ee6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5d127ee850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5d127f0890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5d127f0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d127f0c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5d127f0da0"/>
        <function-ref name="receive" scoped="" ref="0x7f5d127ef020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5d127ef1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5d127ef340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5d127ef4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d127ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d127f0080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d127f0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d127f0400"/>
        <function-ref name="stop" scoped="" ref="0x7f5d127f0590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d1265fc70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d1265fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d1265e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d1265e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5d1265d440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5d1265d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1265d7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5d1265d950"/>
        <function-ref name="receive" scoped="" ref="0x7f5d1265dae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5d1265dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5d1265c020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d1265c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d1265c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5d1265e440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5d1265e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1265e7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5d1265e950"/>
        <function-ref name="receive" scoped="" ref="0x7f5d1265eae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5d1265ec70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5d1265ee00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5d1265d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d1265d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d1265f020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d1265f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1265f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1265f530"/>
        <function-ref name="request" scoped="" ref="0x7f5d1265f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1265f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1265f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5d127dda30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d127dda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d127dddb0"/>
        <function-ref name="configure" scoped="" ref="0x7f5d127dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5d127d9020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5d127d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d127d93a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5d127d9530"/>
        <function-ref name="receive" scoped="" ref="0x7f5d127d96c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5d127d9850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5d127d7450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d127d7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d127d77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5d127dc860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5d127dc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d127dcbe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5d127dcd70"/>
        <function-ref name="receive" scoped="" ref="0x7f5d127db020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5d127db1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5d127db340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5d127db4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d127db660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5d127d81d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5d127d81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d127d8550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d127d86e0"/>
        <function-ref name="request" scoped="" ref="0x7f5d127d8870"/>
        <function-ref name="granted" scoped="" ref="0x7f5d127d8a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d127d8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d127de7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d127de7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d127deb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d127decb0"/>
        <function-ref name="request" scoped="" ref="0x7f5d127dee40"/>
        <function-ref name="granted" scoped="" ref="0x7f5d127dd020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d127dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5d127d61d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d127d61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d127d6550"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d127d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5d1276bdc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d1276bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d1276a180"/>
        <function-ref name="configure" scoped="" ref="0x7f5d1276a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5d12768890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5d12768890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12768c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5d12768dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f5d12767020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5d127671b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5d127663e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d127663e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d12766780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5d12766a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5d12766a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d12766dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d12765020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d127651b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d12765340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d127654d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d12765660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d127657f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d12765980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d12765b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d12765ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d12765e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d12764020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d127641b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d12764440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d127645d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d12764760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d127648f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d12764a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d12764c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d12764da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d12763020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d127631b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d12763340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d127634d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d12763660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d127639f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d12763b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d12763d10"/>
        <function-ref name="tx" scoped="" ref="0x7f5d12762020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d127621b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d12762340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d127624d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d12762660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d127627f0"/>
        <function-ref name="rx" scoped="" ref="0x7f5d12762980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d12762b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d12762ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d12762e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d12761020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d127611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5d1276a6d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5d1276a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1276aa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5d1276ac00"/>
        <function-ref name="receive" scoped="" ref="0x7f5d1276ad90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5d12768020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5d127681b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5d12768340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d127684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5d12760020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d12760020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d12760e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d1275f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d1275f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d1275fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5d127675b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5d127675b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12767950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12767ae0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12767c70"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12767e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12766020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d1276b020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d1276b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1276b3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1276b550"/>
        <function-ref name="request" scoped="" ref="0x7f5d1276b6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1276b870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1276ba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5d127615b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5d127615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d12761950"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d12761ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d1275e120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d1275e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d1275e4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d1275e630"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d1275e7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d1275e950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d1275eae0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1275ec70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d1275ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d1275d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5d1275d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d1275d020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d1275d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5d1274e860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d1274e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d1274ebe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d1274ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5d12751500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d12751500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12751880"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12751a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5d12751d30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d12751d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d127540e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d12754270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d12754400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d12754590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d12754720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d127548b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d12754a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d12754bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d12754d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d12753020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d127531b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d12753340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d127534d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d12753760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d127538f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d12753a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d12753c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d12753da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d12750020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d127501b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d12750340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d127504d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d12750660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d127507f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d12750980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d12750d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d1274f020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d1274f1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f5d1274f340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d1274f4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d1274f660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d1274f7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d1274f980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d1274fb10"/>
        <function-ref name="rx" scoped="" ref="0x7f5d1274fca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d1274fe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d1274e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d1274e1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d1274e340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d1274e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5d12741990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5d12741990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12741d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12740020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d127401b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12740340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d127404d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d12740660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d127407f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12740980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d12740b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d12740ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12740e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1273f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1273f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1273f440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1273f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5d12745130" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5d12745130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d127454b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d12745640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f5d1273f990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f5d1273f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1273fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1273e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1273e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1273e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1273e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1273e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1273e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1273e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1273eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1273eca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d1273ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1273d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1273d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1273d440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1273d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5d1273d990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5d1273d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d1273dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d1273c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d1273c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d1273c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d1273c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d1273c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d1273c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d1273c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d1273cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d1273cca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d1273ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d1273b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d1273b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d1273b440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d1273b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f5d1274a550" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5d1274a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d1274a8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d1274aa60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d1274abf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d1274ad80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d12749020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d127491b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d12749340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d127494d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d12749660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d127497f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d12749980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d12749b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d12749ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d12748020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d127481b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d12748340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d127484d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d12748660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d127487f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d12748980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d12748b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d12748ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d12748e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d12747020"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d127471b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d12747540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d127476d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d12747860"/>
        <function-ref name="tx" scoped="" ref="0x7f5d127479f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d12747b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d12747d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d12746020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d127461b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d12746340"/>
        <function-ref name="rx" scoped="" ref="0x7f5d127464d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d12746660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d127467f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d12746980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d12746b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d12746ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5d1274dbc0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d1274dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d1274a020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1274a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f5d12743990" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f5d12743990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12743d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12742020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d127421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12742340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d127424d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d12742660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d127427f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12742980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d12742b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d12742ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12742e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d12741020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d127411b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d12741440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d127415d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5d12745a00" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5d12745a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5d12745d80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5d12744020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5d127441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5d12744340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5d127444d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5d12744660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5d127447f0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12744980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5d12744b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5d12744ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5d12744e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5d12743020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5d127431b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5d12743440"/>
        <function-ref name="clr" scoped="" ref="0x7f5d127435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5d126bd110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5d126bd110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5d144a5640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5d144a59b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5d126bc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5d126bc9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5d126bc4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5d126bce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d119f95d0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d119f95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d119f9950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d119f9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d119f37c0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d119f37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d119f3b40"/>
        <function-ref name="configure" scoped="" ref="0x7f5d119f3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5d119f3020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5d119f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d119f33a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d119f3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d119fa880" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d119fa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d119fac00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d119fad90"/>
        <function-ref name="request" scoped="" ref="0x7f5d119f9020"/>
        <function-ref name="granted" scoped="" ref="0x7f5d119f91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d119f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5d119f85a0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5d119f85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5d119f8920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5d119f8ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5d119f8c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5d119f8dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5d119f7020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5d119f71b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5d119f7340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5d119f74d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5d119f7660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5d119f77f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5d119f7980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5d119f7b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5d119f7ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5d119f6020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5d119f61b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5d119f6340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5d119f64d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5d119f6660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5d119f67f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5d119f6980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5d119f6b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5d119f6ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5d119f6e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5d119f5020"/>
        <function-ref name="getMode" scoped="" ref="0x7f5d119f51b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5d119f5540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5d119f56d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5d119f5860"/>
        <function-ref name="tx" scoped="" ref="0x7f5d119f59f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5d119f5b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5d119f5d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5d119f4020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5d119f41b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5d119f4340"/>
        <function-ref name="rx" scoped="" ref="0x7f5d119f44d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5d119f4660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5d119f47f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5d119f4980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5d119f4b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5d119f4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d119f9d70" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d119f9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d119f8180"/>
        <function-ref name="userId" scoped="" ref="0x7f5d119f8310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d126a1510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d126a1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d126a1890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d126a1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d126a0af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d126a0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d126a0e70"/>
        <function-ref name="configure" scoped="" ref="0x7f5d1269f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5d126a4510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5d126a4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d126a4890"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d126a4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d126a3280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d126a3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d126a3600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d126a3790"/>
        <function-ref name="request" scoped="" ref="0x7f5d126a3920"/>
        <function-ref name="granted" scoped="" ref="0x7f5d126a3ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d126a3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d126a1d20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d126a1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d126a00e0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d126a0270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5d1269c120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d1269c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d1269c4a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d1269c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5d1269e230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5d1269e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d1269e5d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d1269e760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f5d1269dad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5d1269dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d1269de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5d1269eb60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5d1269eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5d1269d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5d1269d2f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5d1269d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5d1269d670"/>
        <function-ref name="txDone" scoped="" ref="0x7f5d1269d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d12698bd0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d12698bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d12697020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d126971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d12696930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d12696930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d12696cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f5d12696e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5d12697400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d12697400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12697780"/>
        <function-ref name="requested" scoped="" ref="0x7f5d12697910"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12697aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12697c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d12697dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d12699e30" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12699e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d12698210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d126983a0"/>
        <function-ref name="request" scoped="" ref="0x7f5d12698530"/>
        <function-ref name="granted" scoped="" ref="0x7f5d126986c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12698850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d12696060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d12696060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d126963e0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d12696570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d1198fca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d1198fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d1198e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5d1198e330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5d1198e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5d1198e6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5d1198e840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5d1198e9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d1198eb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5d1198a3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5d1198a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5d1198a740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d1198a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5d11988210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5d11988210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5d119885b0"/>
        <function-ref name="configure" scoped="" ref="0x7f5d11988740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5d119889d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d119889d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5d11988d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5d11987020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5d119871b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d11987340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5d1198ab20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d1198ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d11989020"/>
        <function-ref name="requested" scoped="" ref="0x7f5d119891b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d11989340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d119894d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d11989660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d11987590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d11987590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d11987910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d11987aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d11987c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d11987dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d11986020"/>
        <function-ref name="get" scoped="" ref="0x7f5d119861b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d11986340"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d11986980"/>
        <function-ref name="set" scoped="" ref="0x7f5d11986660"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d119864d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d119867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5d1198c540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d1198c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1198c8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d1198ca70"/>
        <function-ref name="request" scoped="" ref="0x7f5d1198cc00"/>
        <function-ref name="granted" scoped="" ref="0x7f5d1198cd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d1198a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5d119898b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d119898b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d11989c30"/>
        <function-ref name="userId" scoped="" ref="0x7f5d11989dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5d11986c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f5d11986c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d11985020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d119851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5d1267b400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5d1267b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5d1267b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5d1267b9d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d1267b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d1267bd50"/>
        <function-ref name="requested" scoped="" ref="0x7f5d12678020"/>
        <function-ref name="granted" scoped="" ref="0x7f5d126781b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d12678340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d126784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5d12691b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d12691b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d1267b020"/>
        <function-ref name="stop" scoped="" ref="0x7f5d1267b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5d12678720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d12678720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d12678aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d12678c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5d11956b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5d11956b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5d11956e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5d119540f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5d119540f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d11954470"/>
        <function-ref name="requested" scoped="" ref="0x7f5d11954600"/>
        <function-ref name="granted" scoped="" ref="0x7f5d11954790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d11954920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5d11954ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5d119563a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5d119563a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d11956720"/>
        <function-ref name="stop" scoped="" ref="0x7f5d119568b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5d11954d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5d11954d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5d119530a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5d11953230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f5d126588e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5d126588e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5d12658c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5d12657020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5d12657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5d126573a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5d12657530"/>
        <function-ref name="request" scoped="" ref="0x7f5d126576c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5d12657850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5d126579e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d12658080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d12658080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d12658400"/>
        <function-ref name="stop" scoped="" ref="0x7f5d12658590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f5d126458c0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f5d126458c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5d12645c40"/>
        <function-ref name="offset" scoped="" ref="0x7f5d12645dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5d12642020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f5d12631020" loc="9:../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f5d12631020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f5d126313a0"/>
        <function-ref name="bind" scoped="" ref="0x7f5d12631530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f5d126316c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f5d12631850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f5d1262c7f0" loc="13:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d1262c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f5d13222700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f5d13222bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d1262b990"/>
        <function-ref name="get" scoped="" ref="0x7f5d1262b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f5d1262fa20" loc="12:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f5d1262fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f5d1262fda0"/>
        <function-ref name="bind" scoped="" ref="0x7f5d1262c020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f5d1262c1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f5d1262c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f5d12625850" loc="15:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f5d12625850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f5d13222700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f5d13222bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12624990"/>
        <function-ref name="get" scoped="" ref="0x7f5d12624480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d12625020" loc="14:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d12625020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5d14b76b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d126253a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d12622600" loc="19:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d12622600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d12622980"/>
        <function-ref name="changed" scoped="" ref="0x7f5d12622b10"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d12622ca0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d12622e30"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d12621020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d126211b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d12621340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f5d12626020" loc="13:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f5d12626020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f5d126263a0"/>
        <function-ref name="bind" scoped="" ref="0x7f5d12626530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f5d126266c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f5d12626850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f5d12624e20" loc="18:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d12624e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d126221c0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d12622350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f5d125d6c80" loc="44:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5d125d6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5d125d50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5d125d7020" loc="41:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5d125d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5d125d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f5d125d7650" loc="42:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f5d125d7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f5d125d79d0"/>
        <function-ref name="changed" scoped="" ref="0x7f5d125d7b60"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f5d125d7cf0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f5d125d7e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d125d6030"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f5d125d61c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f5d125d6350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7f5d125d6620" loc="43:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f5d125d6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f5d125d69a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f5d125d53a0" loc="45:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f5d125d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f5d125d41b0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f5d125d58b0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f5d125d5a40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f5d125d5bd0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f5d125d5d60"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f5d125d5720"/>
        <function-ref name="getContext" scoped="" ref="0x7f5d125d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f5d125c8130" loc="44:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f5d125c8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5d125c84b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5d125c8640"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5d125c87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5d125da8f0" loc="43:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5d125da8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5d125dac70"/>
        <function-ref name="stop" scoped="" ref="0x7f5d125dae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d125c6980" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d125c6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d125c6d20"/>
        <function-ref name="recv" scoped="" ref="0x7f5d125c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f5d11945500" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f5d11945500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11945880"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11945a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f5d11946ce0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f5d11946ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d119450a0"/>
        <function-ref name="recv" scoped="" ref="0x7f5d11945230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5d12548870" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d12548870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12548bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12548d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12547020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d125471b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12547340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5d12547590" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d12547590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12547910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12547aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12547c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12547dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d12546020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5d12546270" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5d12546270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5d125465f0"/>
        <function-ref name="source" scoped="" ref="0x7f5d12546780"/>
        <function-ref name="address" scoped="" ref="0x7f5d12546910"/>
        <function-ref name="destination" scoped="" ref="0x7f5d12546aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d12546c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5d12546dc0"/>
        <function-ref name="type" scoped="" ref="0x7f5d12545020"/>
        <function-ref name="setType" scoped="" ref="0x7f5d125451b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5d12545340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5d125454d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5d12545660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5d125458f0" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5d125458f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5d12545c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f5d12545e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5d12544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5d119360c0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d119360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d11936440"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d119365d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d11936760"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d119368f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d11936a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5d11936d30" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d11936d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d119350e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d11935270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d11935400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d11935590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d11935720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5d11935970" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5d11935970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5d11935cf0"/>
        <function-ref name="source" scoped="" ref="0x7f5d11935e80"/>
        <function-ref name="address" scoped="" ref="0x7f5d11934030"/>
        <function-ref name="destination" scoped="" ref="0x7f5d119341c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d11934350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5d119344e0"/>
        <function-ref name="type" scoped="" ref="0x7f5d11934670"/>
        <function-ref name="setType" scoped="" ref="0x7f5d11934800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5d11934990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5d11934b20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5d11934cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d125a2ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d125a2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d1259f0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d1259f230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d1259f3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d1259f550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d1259f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5d12555400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d12555400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d125557a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12555930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12555ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12555c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12555de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5d12556580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5d12556580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d12556920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12556ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12556c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12556dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12555020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5d12553720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d12553720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12553aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12553c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12553dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12552020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d125521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5d12552480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f5d12552480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12552800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d12552990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5d12552c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f5d12552c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d12550020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d125501b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5d12554060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5d12554060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5d125543e0"/>
        <function-ref name="source" scoped="" ref="0x7f5d12554570"/>
        <function-ref name="address" scoped="" ref="0x7f5d12554700"/>
        <function-ref name="destination" scoped="" ref="0x7f5d12554890"/>
        <function-ref name="setSource" scoped="" ref="0x7f5d12554a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5d12554bb0"/>
        <function-ref name="type" scoped="" ref="0x7f5d12554d40"/>
        <function-ref name="setType" scoped="" ref="0x7f5d12553020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5d125531b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5d12553340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5d125534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f5d12541760" loc="43:../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d12541760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5d1251f5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5d1251e020"/>
        <function-ref name="element" scoped="" ref="0x7f5d1251e4f0"/>
        <function-ref name="full" scoped="" ref="0x7f5d12520810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d1251f170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d1251fa70"/>
        <function-ref name="empty" scoped="" ref="0x7f5d12520390"/>
        <function-ref name="size" scoped="" ref="0x7f5d12520c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5d12516ca0" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5d12516ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5d12517ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5d125144a0"/>
        <function-ref name="element" scoped="" ref="0x7f5d12514970"/>
        <function-ref name="full" scoped="" ref="0x7f5d12518d40"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5d12517660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5d12514020"/>
        <function-ref name="empty" scoped="" ref="0x7f5d125188c0"/>
        <function-ref name="size" scoped="" ref="0x7f5d125171e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5d12514df0" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5d12514df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5d125131c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d12513350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d125134e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5d12513670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5d12513800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5d12513a90" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5d12513a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5d12513e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5d12512020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5d125121b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5d12512340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5d125124d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f5d1250dd10" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f5d1250dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5d1250c0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5d1250c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d1251ccc0" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d1251ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d125190a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5d12512750" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5d12512750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5d12512ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5d12512c60"/>
        <function-ref name="led1On" scoped="" ref="0x7f5d12512df0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5d12511020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5d125111b0"/>
        <function-ref name="get" scoped="" ref="0x7f5d12511340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5d125114d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5d12511b10"/>
        <function-ref name="set" scoped="" ref="0x7f5d12511660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5d125117f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5d12511980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f5d12516400" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f5d12516400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f5d12516780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f5d124f42a0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f5d124f42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f5d124f4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5d124f35a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5d124f35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5d124f3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f5d124f3c00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f5d124f3c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f5d124ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5d124e9b90" loc="39:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5d124e9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5d124e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5d124e63c0" loc="40:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f5d124e63c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5d124e6740"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5d124e68d0"/>
        <function-ref name="start" scoped="" ref="0x7f5d124e6a60"/>
        <function-ref name="stop" scoped="" ref="0x7f5d124e6bf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5d1467a270" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f5d14681d70" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f5d1464d420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f5d14650700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f5d1464ece0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f5d14650020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f5d14650e70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f5d146510e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f5d146517c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f5d1464e5c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f5d147f5020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5d14abac00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f5d145fb020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5d145fdcc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f5d145ff390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5d14646ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5d14645940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5d145fb890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f5d145fa7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f5d145fd560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5d145fa020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f5d145ffb30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f5d145fe350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f5d145feda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5d14646ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5d14645940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5d145feb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5d14646ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5d14645940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5d145ee0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f5d145eb730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f5d145eb4b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5d145ea2e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5d145ea060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5d145edca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5d145ed3e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f5d145eea90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5d145ee810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5d145f53e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f5d145f5d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5d145f5ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f5d145f4790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5d145f4510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f5d145f22a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5d145f2020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5d145f2990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5d14605810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5d146032a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f5d14603020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5d14604020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5d1460baa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5d14604760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5d146089b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5d14605120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5d14608270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5d146070e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f5d146079f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5d14607770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f5d14603cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f5d14603a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5d145c41f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f5d14718a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f5d147151f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f5d147182b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5d14931810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5d14b74020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5d14b73020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5d14b74790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5d14b68270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5d14b68ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f5d14422750" loc="43:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f5d1442f930" loc="41:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f5d14422070" loc="42:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f5d1441d020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5d1441ec50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f5d1441b520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5d1441b2a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5d1441e270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5d1441d870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5d143a20b0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d143f1df0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5d143a12a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d143a1020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5d1439c620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d1439c020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d1439c350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5d1439d6d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5d1439f730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d1439f170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d1439f4a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5d143aca60" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d143ac110" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5d143ac490" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d143ac7c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5d143a5620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d143a5020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d143a5350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5d143a66d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5d143aa2a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d143aa020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d143a87f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d143a8210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5d143a8560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7f5d143b2810" loc="47:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7f5d143b2120" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7f5d143b4980" loc="41:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f5d143bd820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f5d143bd020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7f5d144182c0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f5d1447a140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5d144197f0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f5d1447a140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5d14419b40" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d14418020" loc="19:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7f5d14419020" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7f5d14421c90" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7f5d14416130" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f5d1447a140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5d14418a80" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f5d1447a140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7f5d14418e80" loc="22:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7f5d144156e0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f5d1447a140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f5d144168c0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f5d1447a140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5d14416c10" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d14415020" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f5d14415430" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5d14420070" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5d14420880" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d144434f0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d144434f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5d1443b1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5d14440aa0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f5d1443e860" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5d1443e290" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5d1443e5d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f5d1443faa0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f5d1443a270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f5d1443b980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5d1443f2b0" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f5d144420b0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5d14443de0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f5d1443c820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5d1443c250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5d1443c590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f5d14442b70" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5d144428f0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5d14440390" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5d143b0980" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d143b0020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5d143b0370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d143b06a0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f5d14454070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f5d14454820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f5d14453030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5d14451020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5d144507d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5d14446020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5d144537c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5d14446b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5d14446910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f5d144558a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5d14451800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5d14450020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7f5d14428ba0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7f5d14427510" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7f5d14427290" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7f5d14427c20" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7f5d1442e030" loc="42:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f5d1442b400" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f5d1442b180" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7f5d14426350" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f5d1442c270" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7f5d1442bbe0" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7f5d144284a0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7f5d1442a380" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7f5d1442a6f0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7f5d1442aa80" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7f5d1442ae00" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7f5d144281e0" loc="51:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7f5d1442c9c0" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f5d1442ead0" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f5d1442e850" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7f5d14431900" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5d1434b390" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5d1434bac0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5d1434c540" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5d143499b0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5d1434cc40" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5d14349270" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5d1434f750" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5d1434fe20" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5d143207c0" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5d1431e020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f5d1431bb10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5d1431b890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5d14321020" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5d1431d020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f5d14319490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5d1431e760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5d14320020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f5d1431c770" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f5d143217c0" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5d14322120" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f5d1431d7a0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f5d1431b020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f5d1431c020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5d14322850" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d140d1c40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d140d1c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5d140cd5a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d140c75d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d140c75d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5d140c7810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5d140c2390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5d140c53b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f5d140c39d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5d140c3400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f5d140c3740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5d140c5b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f5d140c2b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5d140c6390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5d140c6110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d140c7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5d140c6bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d140574f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d140574f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5d14057730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d14057730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5d14056070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d14057730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5d14054190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5d140568f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5d140548f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f5d13f2d160" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5d13f2d160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f5d13f2dca0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5d13f2d160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f5d13f2da20" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5d13f2d160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7f5d13f0b550" loc="102:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7f5d13f12350" loc="77:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7f5d13f0a020" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7f5d13f0bc60" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7f5d13f0f780" loc="94:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f5d13f0ddf0" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f5d13f0db70" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7f5d13f134d0" loc="71:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f5d13f12da0" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f5d13f12b20" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f5d13f0e5a0" loc="97:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7f5d13f0fe60" loc="95:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7f5d13f0d420" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7f5d13f0ed50" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7f5d13f0d190" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7f5d13f11800" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f5d13f11580" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7f5d13f0f020" loc="90:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f5d13f0abc0" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f5d13f0a940" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7f5d13f13bd0" loc="74:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7f5d13f199d0" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d13f19750" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f5d13f14020" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f5d1522ba20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f5d13f16150" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7f5d13f16490" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d13f167d0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f5d1522ba20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f5d13f16be0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7f5d13eae360" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f5d13eafc70" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f5d13eae0d0" loc="29:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7f5d13eaf3e0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f5d13ebfce0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f5d13eaf150" loc="14:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7f5d13ead360" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5d13eaecc0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7f5d13ead0d0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7f5d13ec1b90" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13ec1910" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5d13eb97b0" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7f5d13eb9530" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7f5d13ebcc10" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13ebc990" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7f5d13ebd660" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13ebd3e0" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5d13ebc110" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f5d13ebde30" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7f5d13ebbe70" loc="52:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7f5d13ebb6c0" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13ebb440" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7f5d13e9de80" loc="23:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7f5d13e9c600" loc="24:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7f5d13e9d6b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7f5d13e9f7b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d13e9fb00" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7f5d13e9d020" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7f5d13e9d400" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7f5d13ea3be0" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f5d1449fa80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f5d1449e020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13ea3540" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7f5d13ea3950" loc="12:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f5d1449fa80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f5d1449e020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7f5d13ea1ab0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13ea14b0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f5d13ea1820" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7f5d13ea0860" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7f5d13ea01f0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f5d13ea05d0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7f5d13e9f020" loc="20:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f5d13ea6950" loc="27:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7f5d13eb8b30" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7f5d13eb88b0" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7f5d13eaac80" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7f5d13eaaa00" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f5d13ea7390" loc="21:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7f5d13ea7a60" loc="22:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7f5d13eaa270" loc="11:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7f5d13ea5350" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5d13ea50d0" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7f5d13ea9420" loc="16:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f5d13ea9c10" loc="18:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7f5d13ea61f0" loc="24:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7f5d13ec72e0" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7f5d143b6ec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7f5d143b5520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7f5d13ec7020" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7f5d13eb22e0" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f5d14412a30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f5d13eb2020" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7f5d13eb4c40" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f5d14412a30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f5d13eb4610" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f5d13eb4970" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7f5d13eb6d40" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f5d144126f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f5d13eb6ac0" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f5d144126f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7f5d13eb3760" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f5d14412a30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f5d144126f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f5d13eb34a0" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f5d144126f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7f5d13eb62d0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7f5d144126f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f5d13eb7490" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f5d13eb77f0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7f5d13eb7c30" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7f5d13eb6020" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7f5d13ec57e0" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7f5d13ec9d90" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7f5d13ec5180" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7f5d13ec5540" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7f5d13ec2a20" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13ec20d0" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f5d13ec2420" loc="22:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f5d13ec2780" loc="23:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7f5d13ec3970" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7f5d13ec3020" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f5d14498770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f5d13ec3370" loc="18:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f5d13ec36d0" loc="19:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7f5d13c9f830" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13c9f5b0" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7f5d13c98560" loc="5:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5d144a1210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5d13c96560" loc="10:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f5d13c97e80" loc="8:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5d144a1630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d13c97c00" loc="8:../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5d144a1630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f5d13c97490" loc="7:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5d144a2670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7f5d144a1a70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f5d13c98cf0" loc="6:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5d144a1630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f5d13c55a70" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5d144a2670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5d144a2dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f5d13c48640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f5d13c48060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f5d13c483b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f5d13c49020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f5d13c4a690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f5d13c4a020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f5d13c4a400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f5d13c50a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5d13c507c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f5d13c498a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f5d13c4d540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5d13c4d2c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5d13c4fb90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5d13c4f910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f5d13c468a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f5d13c4b6b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5d13c4b430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f5d13c46070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f5d13c4e350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5d144a2670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5d144a2dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f5d13c4eb40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f5d13c50020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5d13c4f1f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f5d13c4dce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5d13c215c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5d13c215c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f5d13c21e80" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5d13c19bd0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5d13c215c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5d13c19620" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f5d13c19940" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5d13c215c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f5d13c1f960" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f5d13c1ca80" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f5d13c1c2b0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f5d13c200e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f5d13c1f120" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f5d13c1d270" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f5d13c1da90" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f5d13c20940" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5d13c25b60" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f5d13c27b60" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5d13c271f0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5d13c25390" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5d13c245e0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5d13bf6c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13bf6990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5d13bf5710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13bf5490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f5d13bff560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5d13bfd4f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f5d13bffd40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f5d13c00cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f5d13c006f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f5d13c00a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f5d13bf2e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5d13bfbe80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5d13bfb020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5d13bfb890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d13bfbbe0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5d13bf9610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5d13bfa770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5d13bf9020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d13bf9370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5d13c02c30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5d13c02470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f5d13c03ce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f5d13c03420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f5d13ae3bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5d13ae2d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5d13ae25c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5d13ae2340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f5d13ae3350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5d13abda60" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5d13abb540" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5d13abd2d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f5d13abccf0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f5d13abca70" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f5d13ac1b00" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f5d13abc2b0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f5d139a9270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f5d139a9ac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f5d139a8350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f5d13982b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13982580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d139828d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f5d1397ddd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d1397d490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d1397d7e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5d1397db30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5d1397e6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d1397e0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d1397e420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f5d13983730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5d146d3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13983150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d139834a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5d1397f2c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13981930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5d13981c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5d1397f020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5d13963df0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5d13963480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5d13963810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d13963b50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d139603c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5d1395f6a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5d1395fa30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d1395fd70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5d13960110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f5d13967c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f5d13967a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f5d139587f0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f5d1395bd40" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f5d13958020" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f5d1395ac70" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f5d1395a4d0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f5d13965a80" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5d13965800" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f5d1395b560" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5d1395b2e0" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f5d1387d6f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5d1387c070" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f5d13875710" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5d138b0020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5d138b0440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f5d1387a2a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d1387a020" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f5d13879680" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13879400" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f5d1387ab10" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5d138782a0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13878020" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f5d1386fca0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f5d1386f480" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f5d138662a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13866020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f5d13868780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f5d13843af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f5d1384e790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f5d1385b610" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138cc080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5d138cc8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5d1385b390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138cc080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5d138cc8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f5d13851870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f5d13858a90" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138c7080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5d138c78c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5d13858810" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138c7080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5d138c78c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f5d13848e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f5d13844480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f5d13858070" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138ca020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5d138ca7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f5d138572b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138c7080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5d138c78c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f5d13853020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f5d13855d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f5d13855610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f5d13848740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f5d1385a840" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138ca020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5d138ca7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5d1385a5c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138ca020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5d138ca7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f5d13856420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f5d138475d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f5d13856e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f5d13856b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f5d13852910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f5d138510e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f5d13849840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f5d1384c790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f5d138507e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f5d13848020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f5d1384d020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f5d13847cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5d13853800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5d138d4dc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f5d138cf680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f5d138454c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f5d13843350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f5d13857c50" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f5d138579d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f5d138424d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d13842250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f5d1385bdf0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5d138cc080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5d138cc8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f5d13850020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f5d1384d770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f5d13849020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5d1389ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5d1389d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5d1384bcf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5d1389ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5d1389d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f5d1384b2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5d138b0020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5d138b0440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5d1384b020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5d138b0020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5d138b0440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f5d13842d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f5d13845cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f5d13852070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f5d13844be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f5d1384c020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f5d1384e020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5d137db600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f5d137b3070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f5d137c6b10" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f5d137bbd50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d137bbad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f5d137ce270" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f5d137b7350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f5d137c0cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f5d137c7c50" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f5d137c59c0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5d137c9c00" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f5d137c9980" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f5d137ca120" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f5d137c2790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f5d137b9c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f5d137b48f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f5d137bb390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f5d137afb60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f5d137aa270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f5d137cc0e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f5d137c2020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f5d137c1910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f5d137c7500" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f5d137cf020" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f5d137bcba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5d137bc920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f5d137d27d0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f5d137b8b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f5d137b37d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f5d137ad350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f5d137aba90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f5d137b6270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f5d137b2020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f5d137b9520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f5d137b0bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f5d137cc800" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f5d137bd020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f5d137b0020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f5d137b4190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f5d137c0520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f5d137c02a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f5d137adaf0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f5d137bc1f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f5d137b7ac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f5d137cfaa0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5d1388ab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f5d13889020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5d137cf820" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5d1388ab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f5d13889020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f5d137c4870" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f5d137cb980" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5d137cb700" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f5d137c1120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d137c2e70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f5d137af3b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f5d137c9270" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f5d137cb020" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f5d137bd9e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f5d137bd760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f5d137ce9a0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f5d137b2740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f5d137b69e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f5d137b8420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f5d137be740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f5d137be4c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f5d137c4120" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f5d137c63b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f5d137ab2b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f5d137caaa0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5d137ca820" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f5d137ae350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f5d137c5270" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f5d137aeb10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f5d13710780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f5d1370e020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5d136d7900" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f5d136d6a20" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5d136d7070" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5d136d61f0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5d136d5390" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f5d136cbb50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5d136d4b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5d136cb8d0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5d136d4b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f5d136cfb80" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f5d136cc6b0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5d136d4b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5d136cc430" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5d136d4b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5d136cb020" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f5d136d4b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5d1349ed70" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d1349ed70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5d134950e0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d1349ed70"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f5d134978a0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f5d134986b0" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f5d13496350" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d1349ed70"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5d134960d0" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d1349ed70"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5d13497020" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5d134a7020" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d134a7020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f5d134a5790" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d134a7020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f5d134a22a0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d134a7020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5d134a2020" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d134a7020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f5d15222c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f5d15222c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f5d134a12a0" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d134a7020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5d134a1020" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f5d134a6070" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f5d134a5020" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5d134a3390" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d134a7020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f5d134a78d0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5d134a67f0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7f5d133cfcb0" loc="43:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7f5d133cc5a0" loc="50:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7f5d133a7d30" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f5d133a7330" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f5d1447dcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f5d133a7740" loc="19:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f5d133a7a90" loc="20:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f5d133a48e0" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f5d133a5e70" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5d133a4210" loc="29:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f5d133a4640" loc="30:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d133a5740" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f5d133a54c0" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7f5d13317740" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f5d1449ed50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f5d1331bd10" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f5d1449ed50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f5d13317150" loc="19:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f5d144671b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f5d133174a0" loc="20:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f5d13315480" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f5d133169d0" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f5d1447aaa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5d13316d40" loc="29:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f5d133151e0" loc="30:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f5d144695e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d133162a0" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f5d13316020" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f5d13ed0870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7f5d132208f0" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f5d132208f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f5d1321db20" loc="34:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5d1321d450" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f5d132208f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7f5d1321d1d0" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f5d132208f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7f5d131ecc80" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131eca00" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7f5d131ec2a0" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131ec020" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f5d131df2b0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131e1bd0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f5d131df020" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f5d131de430" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131de1b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f5d131e13e0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f5d131e29e0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f5d131e2760" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5d131f7890" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131f72d0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d131f7600" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5d131f1020" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131f2890" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d131f2bc0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5d131f2020" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5d131f5b90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131f5910" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d131f30c0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131f4a80" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5d131f4dd0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f5d131e6680" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131e6400" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f5d131ea770" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131ea150" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f5d131ea4e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f5d131e7650" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131e73d0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f5d131e9b70" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131e9550" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f5d131e98e0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f5d131e4650" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d131e43d0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f5d12f04780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12f04500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f5d12f10be0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12f10600" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f5d12f10950" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f5d12f0b3a0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12f0dd50" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f5d12f0b110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f5d12f0f6e0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f5d1521d110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12f0f460" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f5d12f0d2a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12f0d020" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f5d12f15dd0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12f15b50" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f5d12f0e2a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12f0e020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f5d12f092e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12f09060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f5d12f08510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12f08290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f5d12f06680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12f06400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f5d12ef6e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12ef6bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f5d12ef7120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12ef9e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f5d12efa7a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5d12efa520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f5d12efbbd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5d12efb950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f5d12ef92a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f5d12ef9020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f5d12ef6020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12ef7d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5d12eea040" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12eeba50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f5d12eebd80" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5d12ee9350" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f5d12ee6c50" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5d12ee8e00" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f5d12ee6680" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d12ee69b0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d12ee8600" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5d12ee8020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5d12ee8370" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f5d12eeaad0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f5d12eea850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f5d12edeae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12ede820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f5d12ede020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f5d146d2df0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f5d146d07d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12ee0be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f5d12eddde0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f5d146ce3e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f5d146cc2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12eddae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f5d12e8a890" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f5d12e73020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5d12e73020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5d12e73260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d12e73260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f5d12e710b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d12e73260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e72e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5d12e702a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e70020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f5d12e73e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e73ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5d12e6e610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d12e73260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e6e020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5d12e6e380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5d12e73260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5d12e4f420" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5d12e50a20" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f5d12e4f190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f5d12e50270" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f5d12e53a00" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5d12e53780" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5d1521c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f5d12e66cb0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e66a30" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f5d12e6bc90" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e6ba10" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5d12e64c80" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e64a00" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5d12e65ca0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12e65a20" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f5d129c4840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129c45c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5d129ce350" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129ce0d0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5d129d0790" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5d129cf2a0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129cf020" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5d129cac40" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129ca660" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5d129ca9b0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5d129cc760" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129cc180" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5d129cc4d0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5d14695560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f5d129c72e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129c7060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5d129c6680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129c60d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f5d129c63f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5d14696d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5d129c90b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129cbe00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5d129c0d00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5d129c0720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5d129c0a70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f5d129bfb50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5d14695180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f5d12954020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d12956960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f5d12956ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f5d12957020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f5d12956020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5d129578b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5d146850c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5d146846f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f5d12957c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f5d1293c190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f5d1293f9e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f5d12945270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f5d129446c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f5d12941390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d12941110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f5d12942020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f5d12945de0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d12945b60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f5d12941bf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f5d129428d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f5d1294dc10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f5d1294c590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f5d1294d2a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f5d1294d020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f5d1294b2a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5d1294b020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f5d12948020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f5d12948c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5d129489c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f5d12947730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5d129474b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5d12816dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5d12816800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d12816b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f5d12810ac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5d12810840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5d1280e930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5d1280e360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d1280e6a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f5d1280f740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f5d1280d2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5d1280c920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d1280cc60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5d1280d020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f5d12810070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5d12812720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5d12813db0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5d12812130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5d12812480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5d127ec5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5d127ec330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f5d127ecdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5d127ebcf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5d127eb700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f5d127eba60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5d1521c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f5d127e8b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f5d127e1420" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5d1389ee70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5d1389d2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5d12752860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5d127510e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f5d1268d470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5d12540b80" loc="43:../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d12540b80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f5d1253a350" loc="80:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d12540b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f5d12539580" loc="97:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5d14b6fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d12540b80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5d12539300" loc="97:../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d12540b80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f5d12537020" loc="108:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d12540b80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5d12539d50" loc="108:../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f5d1253dbd0" loc="57:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f5d1253bba0" loc="72:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5d1253ab10" loc="88:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5d12540b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f5d1253d460" loc="50:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5d14b77090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5d1253b390" loc="65:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5d1521c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f5d125160b0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f5d12519dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
